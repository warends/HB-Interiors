'use strict';

var app = angular.module('hb-interiors', ['home', 'services', 'common', 'ed', 'about.controller', 'ui.router', 'ngScrollReveal']);

app.config(['$locationProvider', '$stateProvider', '$urlRouterProvider', function ($locationProvider, $stateProvider, $urlRouterProvider) {

    $urlRouterProvider.otherwise('/');
    $locationProvider.html5Mode(true);

    $stateProvider.state('home', {
        url: '/',
        templateUrl: '/partials/home/home',
        controller: 'HomeController'
    }).state('services', {
        url: '/services',
        templateUrl: '/partials/services/services',
        controller: 'ServiceController'
    }).state('e-design', {
        url: '/e-design',
        templateUrl: '/partials/ed/ed',
        controller: 'EDesignController'
    }).state('about', {
        url: '/about',
        templateUrl: '/partials/about/about',
        controller: 'AboutController'
    }).state('services.detail', {
        url: '/:slug',
        templateUrl: '/partials/services/services-detail',
        controller: 'SelectedServiceController'
    });
}]);

app.run(['$rootScope', '$location', function ($rootScope, $location) {

    console.log($rootScope.contactShow);
    $rootScope.toggleContact = function () {
        $rootScope.contactShow = !$rootScope.contactShow;
        console.log($rootScope.contactShow);
    };

    $rootScope.$on("$stateChangeSuccess", function (event, currentRoute, previousRoute) {});
}]);
'use strict';

angular.module('about.controller', []).controller('AboutController', ['$scope', function ($scope) {}]);
'use strict';

angular.module('common', ['common.modal', 'common.inview', 'common.meta', 'common.nav', 'common.notifier']);
'use strict';

angular.module('common.inview', []).directive('inView', ['$window', function ($window) {
    return {
        restrict: 'A',
        scope: {
            viewObj: '='
        },
        link: function link(scope, element, attrs) {
            angular.element($window).bind('scroll', function () {
                var $el = element[0],
                    pos = $el.getBoundingClientRect();
                //check to see if active class, if not, start animations with js and define selectors
                if (pos.top + scope.viewObj.offset < $window.scrollY) {
                    scope.viewObj.visible = true;
                    //console.log('in view :' + scope.viewObj.visible);
                }
                // else {
                //     scope.viewObj.visible = false;
                // }
                scope.$apply();
            });
        }

    };
}]);
'use strict';

angular.module('common.meta', []).factory('Meta', function () {
  var _title = 'Hayley Bagwell Interior Design, Seattle, WA';
  var desc = 'Super DERRR';
  return {
    title: function title() {
      return _title;
    },
    setTitle: function setTitle(newTitle) {
      _title = newTitle;
    },
    description: function description() {
      return desc;
    },
    setDesc: function setDesc(newDesc) {
      desc = newDesc;
    }
  };
}).controller('MetaController', ['$scope', 'Meta', function ($scope, Meta) {
  $scope.Meta = Meta;
  $scope.metaDesc = Meta;
}]);
'use strict';

angular.module('common.modal', []).directive('globalModal', ['$rootScope', function ($rootScope) {

  return {
    restrict: 'E',
    scope: {
      show: '='
    },
    replace: true,
    transclude: true,
    link: function link(scope, element, attrs) {
      scope.dialogStyle = {};
      if (attrs.width) scope.dialogStyle.width = attrs.width;
      if (attrs.height) scope.dialogStyle.height = attrs.height;

      scope.hideModal = function () {
        $rootScope.contactShow = false;
      };
    },
    templateUrl: '/partials/common/modal'
  };
}]);
'use strict';

angular.module('common.nav', []).controller('NavController', ['$scope', '$http', '$window', 'NotifierService', function ($scope, $http, $window, notifier) {

    $scope.formData = {};

    $scope.sendContact = function () {
        console.log($scope.formData);
        $http.post('/contact-form', $scope.formData).then(function (message, status, headers, config) {
            notifier.notify('Thank you for your message ' + message.data.contactName);
            //$scope.formData.$setPristine();
            //$scope.formData.$setUntouched();
        }, function (message, status, headers, config) {
            notifier.notify('There was an error processing your request. Please try again');
        });
    };

    $scope.selected = false;
    $scope.toggleMenu = function () {
        $scope.selected = !$scope.selected;
    };

    $scope.socialShow = false;
    if ($window.innerWidth < 992) {
        console.log($window.innerWidth);
        angular.element($window).bind('scroll', function () {
            if ($window.scrollY > 140) {
                console.log($scope.socialShow);
                $scope.socialShow = true;
            } else {
                $scope.socialShow = false;
            }
        });
    }
}]);
'use strict';

angular.module('hb-interiors').value('notific8', notific8);

angular.module('common.notifier', []).factory('NotifierService', ['notific8', function (notific8) {

  notific8('configure', {
    life: 3000,
    theme: 'atomic',
    zindex: 9999,
    verticalEdge: 'right',
    horizontalEdge: 'top',
    closeText: 'X'
  });

  return {
    notify: function notify(message) {
      notific8(message, { color: 'pear' });
      console.log(message);
    },
    error: function error(message) {
      notific8(message, { color: 'tomato' });
      console.log(message);
    }
  };
}]);
'use strict';

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

angular.module('ed.controller', []).controller('EDesignController', ['$scope', '$http', 'QFactory', function ($scope, $http, QFactory) {
    window.scrollTo(0, 0);

    $scope.qShow = false;
    $scope.toggleQForm = function () {
        $scope.qShow = !$scope.qShow;
    };

    $scope.colorList = [];
    $scope.colorNoList = [];
    $scope.drawnToList = [];
    $scope.furnitureList = [];
    $scope.formData = {};
    function addToList(answer, list) {
        var index = list.indexOf(answer);
        if (index > -1) {
            list.splice(index, 1);
        } else {
            list.push(answer);
        }
        console.log(list);
    }
    $scope.toggleColor = function (answer, question) {
        if (question == 'q2') {
            addToList(answer, $scope.drawnToList);
        } else if (question == 'q3') {
            addToList(answer, $scope.furnitureList);
        } else if (question == 'q5') {
            addToList(answer, $scope.colorList);
        } else {
            addToList(answer, $scope.colorNoList);
        }
    };

    $scope.questions = QFactory.list();
    $scope.currentQuestion = 0;

    $scope.isCurrentQIndex = function (index) {
        return $scope.currentQuestion === index;
    };

    $scope.nextQ = function () {
        $scope.currentQuestion = $scope.currentQuestion < $scope.questions.length - 1 ? ++$scope.currentQuestion : 0;
    };

    $scope.prevQ = function () {
        $scope.currentQuestion = $scope.currentQuestion > 0 ? --$scope.currentQuestion : $scope.questions.length - 1;
    };

    $scope.submitQuestionaire = function () {
        var _data;

        var data = (_data = {
            q1: $scope.questions[0].response,
            q2: $scope.drawnToList,
            q3: $scope.furnitureList,
            q4: $scope.questions[3].response
        }, _defineProperty(_data, 'q4', $scope.colorList), _defineProperty(_data, 'q5', $scope.colorNoList), _defineProperty(_data, 'name', $scope.formData.name), _defineProperty(_data, 'email', $scope.formData.email), _defineProperty(_data, 'phone', $scope.formData.phone), _defineProperty(_data, 'note', $scope.formData.note), _data);
        console.log(data);

        $http.post('/questionaire-form', data).then(function (response) {
            console.log(response.data);
        }, function (err) {
            console.log('There was a problem submitting your form ' + err);
        });
    };

    $scope.mySplit = function (string, nb) {
        var array = string.split('-');
        if (array[nb + 1] === undefined) {
            return array[nb];
        } else {
            return array[nb] + ' ' + array[nb + 1];
        }
    };
}]);
'use strict';

angular.module('ed', ['ed.controller', 'questionaire.factory']);
'use strict';

angular.module('questionaire.factory', []).factory('QFactory', function () {

    var questions = [{
        id: 'q1',
        type: 'radio',
        question: 'Which space would you like designed first?',
        cols: 'col-sm-4',
        answers: ['Living', 'Bedroom', 'Dining', 'Bath', 'Kitchen', 'Other'],
        response: ''
    }, {
        id: 'q2',
        type: 'checkbox',
        question: 'Which image(s) are you drawn to?',
        cols: 'col-sm-4',
        images: [{
            name: 'img1',
            selected: false
        }, {
            name: 'img2',
            selected: false
        }, {
            name: 'img3',
            selected: false
        }, {
            name: 'img4',
            selected: false
        }, {
            name: 'img5',
            selected: false
        }, {
            name: 'img6',
            selected: false
        }]
    }, {
        id: 'q3',
        type: 'checkbox',
        question: 'Where would you shop for furniture?',
        cols: 'col-sm-4',
        images: [{
            name: 'ikea',
            selected: false
        }, {
            name: 'pier-1',
            selected: false
        }, {
            name: 'west-elm',
            selected: false
        }, {
            name: 'crate-barrel',
            selected: false
        }, {
            name: 'cb2',
            selected: false
        }, {
            name: 'restoration-hardware',
            selected: false
        }]
    }, {
        id: 'q4',
        type: 'radio',
        question: 'How much money are you budgeting for your project after the design fee, which begins around $1,500 per space?',
        cols: 'col-sm-4',
        answers: ['1-2', '2-5', '5-10', '10-15', '15-25', '25up'],
        response: ''
    }, {
        id: 'q5',
        type: 'checkbox',
        question: 'What colors would you like to see in the design',
        cols: 'col-color',
        design: 'colors',
        colors: [{ name: 'Black',
            selected: false
        }, { name: 'Grey',
            selected: false
        }, { name: 'Red',
            selected: false
        }, { name: 'Orange',
            selected: false
        }, { name: 'Yellow',
            selected: false
        }, { name: 'Lime',
            selected: false
        }, { name: 'Green',
            selected: false
        }, { name: 'Aqua',
            selected: false
        }, { name: 'Turquoise',
            selected: false
        }, { name: 'Slate',
            selected: false
        }, { name: 'Blue',
            selected: false
        }, { name: 'Purple',
            selected: false
        }, { name: 'Pink',
            selected: false
        }, { name: 'Brown',
            selected: false
        }, { name: 'Cream',
            selected: false
        }, { name: 'White',
            selected: false
        }]
    }, {
        id: 'q6',
        type: 'checkbox',
        question: 'Select which colors you would NOT want to see',
        cols: 'col-color',
        colors: [{ name: 'Black',
            selected: false
        }, { name: 'Grey',
            selected: false
        }, { name: 'Red',
            selected: false
        }, { name: 'Orange',
            selected: false
        }, { name: 'Yellow',
            selected: false
        }, { name: 'Lime',
            selected: false
        }, { name: 'Green',
            selected: false
        }, { name: 'Aqua',
            selected: false
        }, { name: 'Turquoise',
            selected: false
        }, { name: 'Slate',
            selected: false
        }, { name: 'Blue',
            selected: false
        }, { name: 'Purple',
            selected: false
        }, { name: 'Pink',
            selected: false
        }, { name: 'Brown',
            selected: false
        }, { name: 'Cream',
            selected: false
        }, { name: 'White',
            selected: false
        }]
    }, {
        id: 'q7',
        type: 'text'
    }];

    return {
        list: function list() {
            return questions;
        }
    };
});
'use strict';

angular.module('banner.dir', []).directive('pageBanner', function () {
  return {
    restrict: 'E',
    templateUrl: '/partials/home/banner',
    replace: true,
    scope: { bgImage: '@' }
  };
});
'use strict';

angular.module('box.height.dir', []).directive('boxHeight', ['$window', '$timeout', function ($window, $timeout) {
  return {
    restrict: 'A',
    link: function link(scope, elem, attrs) {
      $timeout(function () {
        scope.newHeight = elem[0].offsetHeight;
      }, 500);
      angular.element($window).bind('resize', function () {
        scope.$apply(function () {
          scope.newHeight = elem[0].offsetHeight;
        });
      });
    }
  };
}]);

angular.module('target.height.dir', []).directive('targetHeight', function () {
  return {
    restrict: 'A',
    link: function link(scope, elem, attrs) {
      scope.$watch('newHeight', function (newV, oldV) {
        //console.log('old value ' + oldV, 'new value ' + newV);
        elem.attr('style', 'height: ' + newV + 'px');
      });
    }
  };
});
'use strict';

angular.module('home.controller', []).controller('HomeController', ['$scope', 'ServiceFactory', function ($scope, ServiceFactory) {

    $scope.services = ServiceFactory.list();

    $scope.welcome = {
        visible: false,
        offset: -200
    };

    $scope.options = {
        origin: 'left',
        distance: '150px',
        easing: 'ease-in-out',
        delay: 30,
        scale: 1,
        duration: 1000,
        // reset: true,
        //    afterReveal: function (domEl) {
        //        document.getElementById("gallery").style.visibility = "visible";
        //    },
        sequence: {
            selector: '.col-sm-5',
            interval: 300
        }
    };
}]);
'use strict';

angular.module('home', ['home.controller', 'box.height.dir', 'target.height.dir', 'banner.dir']);
'use strict';

angular.module('service.controller', []).controller('ServiceController', ['$scope', '$stateParams', 'ServiceFactory', function ($scope, $stateParams, ServiceFactory) {
  $scope.services = ServiceFactory.list();
}]);

angular.module('service.detail.controller', []).controller('SelectedServiceController', ['$scope', '$stateParams', 'ServiceFactory', function ($scope, $stateParams, ServiceFactory) {
  $scope.selectedService = ServiceFactory.find($stateParams.slug);
}]);
'use strict';

angular.module('service.factory', []).factory('ServiceFactory', function () {
  var services = [
  // {
  //   name: 'e-Design',
  //   logo: 'img/icons/construction.png'
  // },
  {
    name: 'Space Planning',
    slug: 'space-planning',
    logo: 'img/icons/measurement.svg',
    banner: 'img/services/floor-plan.png',
    subHead: 'creating individualized products',
    desc: "What is space planning? Do you feel like your space is not functional? Would you like assistance arranging the layout of your space? We are here to help! We will organize your existing furniture in a way that creates a more natural and functional flow with a customized floor plan that you will love.",
    img1: 'img/services/bubble1.png',
    img2: 'img/services/floorplan.png'
  }, {
    name: 'Branding',
    slug: 'branding',
    logo: 'img/icons/finger-print.svg',
    banner: 'img/services/branding.jpg',
    subHead: 'Helping your customers get to know you',
    desc: "It is important to be able to stand out.  By creating branding tools that potential clients or architects can get their hands on, we will help move you to the front of the line. We can develop business tools that reflect your vision and reach your specific audience, such as portfolio booklets and business cards.",
    img1: 'img/services/branding1.png',
    img2: 'img/services/branding2.png'
  }, {
    name: 'Interior Design',
    slug: 'interior-design',
    logo: 'img/icons/home.svg',
    banner: 'img/services/master-br.png',
    subHead: 'creating individualized products',
    desc: "Local to the Seattle area? We are here to assist you in your design needs. We want you to feel at home in your home. We’d love to get to know you to develop a style that is all your own. A design package with concepts and a floor plan will be created all the way through installation. Contact us for a free consultation!",
    img1: 'img/services/kitchen.png',
    img2: 'img/services/interior-design.png'
  }, {
    name: 'Furniture Design',
    slug: 'furniture',
    logo: 'img/icons/chair1.svg',
    banner: 'img/services/bench.png',
    subHead: 'creating individualized products',
    desc: "We love producing industrial, rustic and sustainable pieces here in Seattle. These can be brand new pieces or repurposed furniture. If you have an heirloom piece that you cannot bare to throw away, we may be able to give it a new look.  We would love to be part of the process to create that perfect piece for you.",
    img1: 'img/services/bench-paint.png',
    img2: 'img/services/table-work.png'
  }];

  return {
    list: function list() {
      return services;
    },
    find: function find(slug) {
      return services.find(function (service) {
        return service.slug == slug;
      });
    }
  };
});
'use strict';

angular.module('services', ['service.controller', 'service.detail.controller', 'service.factory']);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImFib3V0L2Fib3V0LmNvbnRyb2xsZXIuanMiLCJjb21tb24vY29tbW9uLm1vZHVsZS5qcyIsImNvbW1vbi9pbnZpZXcuZGlyZWN0aXZlLmpzIiwiY29tbW9uL21ldGEuY29udHJvbGxlci5qcyIsImNvbW1vbi9tb2RhbC5kaXJlY3RpdmUuanMiLCJjb21tb24vbmF2LmNvbnRyb2xsZXIuanMiLCJjb21tb24vbm90aWZpZXIuc2VydmljZS5qcyIsImVkL2VEZXNpZ24uY29udHJvbGxlci5qcyIsImVkL2VkLm1vZHVsZS5qcyIsImVkL3F1ZXN0aW9uYWlyZS5mYWN0b3J5LmpzIiwiaG9tZS9iYW5uZXIuZGlyZWN0aXZlLmpzIiwiaG9tZS9ib3guZGlyZWN0aXZlLmpzIiwiaG9tZS9ob21lLmNvbnRyb2xsZXIuanMiLCJob21lL2hvbWUubW9kdWxlLmpzIiwic2VydmljZXMvc2VydmljZS5jb250cm9sbGVyLmpzIiwic2VydmljZXMvc2VydmljZS5mYWN0b3J5LmpzIiwic2VydmljZXMvc2VydmljZS5tb2R1bGUuanMiXSwibmFtZXMiOlsiYXBwIiwiYW5ndWxhciIsIm1vZHVsZSIsImNvbmZpZyIsIiRsb2NhdGlvblByb3ZpZGVyIiwiJHN0YXRlUHJvdmlkZXIiLCIkdXJsUm91dGVyUHJvdmlkZXIiLCJvdGhlcndpc2UiLCJodG1sNU1vZGUiLCJzdGF0ZSIsInVybCIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlciIsInJ1biIsIiRyb290U2NvcGUiLCIkbG9jYXRpb24iLCJjb25zb2xlIiwibG9nIiwiY29udGFjdFNob3ciLCJ0b2dnbGVDb250YWN0IiwiJG9uIiwiZXZlbnQiLCJjdXJyZW50Um91dGUiLCJwcmV2aW91c1JvdXRlIiwiJHNjb3BlIiwiZGlyZWN0aXZlIiwiJHdpbmRvdyIsInJlc3RyaWN0Iiwic2NvcGUiLCJ2aWV3T2JqIiwibGluayIsImVsZW1lbnQiLCJhdHRycyIsImJpbmQiLCIkZWwiLCJwb3MiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ0b3AiLCJvZmZzZXQiLCJzY3JvbGxZIiwidmlzaWJsZSIsIiRhcHBseSIsImZhY3RvcnkiLCJ0aXRsZSIsImRlc2MiLCJzZXRUaXRsZSIsIm5ld1RpdGxlIiwiZGVzY3JpcHRpb24iLCJzZXREZXNjIiwibmV3RGVzYyIsIk1ldGEiLCJtZXRhRGVzYyIsInNob3ciLCJyZXBsYWNlIiwidHJhbnNjbHVkZSIsImRpYWxvZ1N0eWxlIiwid2lkdGgiLCJoZWlnaHQiLCJoaWRlTW9kYWwiLCIkaHR0cCIsIm5vdGlmaWVyIiwiZm9ybURhdGEiLCJzZW5kQ29udGFjdCIsInBvc3QiLCJ0aGVuIiwibWVzc2FnZSIsInN0YXR1cyIsImhlYWRlcnMiLCJub3RpZnkiLCJkYXRhIiwiY29udGFjdE5hbWUiLCJzZWxlY3RlZCIsInRvZ2dsZU1lbnUiLCJzb2NpYWxTaG93IiwiaW5uZXJXaWR0aCIsInZhbHVlIiwibm90aWZpYzgiLCJsaWZlIiwidGhlbWUiLCJ6aW5kZXgiLCJ2ZXJ0aWNhbEVkZ2UiLCJob3Jpem9udGFsRWRnZSIsImNsb3NlVGV4dCIsImNvbG9yIiwiZXJyb3IiLCJRRmFjdG9yeSIsIndpbmRvdyIsInNjcm9sbFRvIiwicVNob3ciLCJ0b2dnbGVRRm9ybSIsImNvbG9yTGlzdCIsImNvbG9yTm9MaXN0IiwiZHJhd25Ub0xpc3QiLCJmdXJuaXR1cmVMaXN0IiwiYWRkVG9MaXN0IiwiYW5zd2VyIiwibGlzdCIsImluZGV4IiwiaW5kZXhPZiIsInNwbGljZSIsInB1c2giLCJ0b2dnbGVDb2xvciIsInF1ZXN0aW9uIiwicXVlc3Rpb25zIiwiY3VycmVudFF1ZXN0aW9uIiwiaXNDdXJyZW50UUluZGV4IiwibmV4dFEiLCJsZW5ndGgiLCJwcmV2USIsInN1Ym1pdFF1ZXN0aW9uYWlyZSIsInExIiwicmVzcG9uc2UiLCJxMiIsInEzIiwicTQiLCJuYW1lIiwiZW1haWwiLCJwaG9uZSIsIm5vdGUiLCJlcnIiLCJteVNwbGl0Iiwic3RyaW5nIiwibmIiLCJhcnJheSIsInNwbGl0IiwidW5kZWZpbmVkIiwiaWQiLCJ0eXBlIiwiY29scyIsImFuc3dlcnMiLCJpbWFnZXMiLCJkZXNpZ24iLCJjb2xvcnMiLCJiZ0ltYWdlIiwiJHRpbWVvdXQiLCJlbGVtIiwibmV3SGVpZ2h0Iiwib2Zmc2V0SGVpZ2h0IiwiJHdhdGNoIiwibmV3ViIsIm9sZFYiLCJhdHRyIiwiU2VydmljZUZhY3RvcnkiLCJzZXJ2aWNlcyIsIndlbGNvbWUiLCJvcHRpb25zIiwib3JpZ2luIiwiZGlzdGFuY2UiLCJlYXNpbmciLCJkZWxheSIsInNjYWxlIiwiZHVyYXRpb24iLCJzZXF1ZW5jZSIsInNlbGVjdG9yIiwiaW50ZXJ2YWwiLCIkc3RhdGVQYXJhbXMiLCJzZWxlY3RlZFNlcnZpY2UiLCJmaW5kIiwic2x1ZyIsImxvZ28iLCJiYW5uZXIiLCJzdWJIZWFkIiwiaW1nMSIsImltZzIiLCJzZXJ2aWNlIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE1BQU1DLFFBQVFDLE1BQVIsQ0FBZSxjQUFmLEVBQStCLENBQUMsTUFBRCxFQUFTLFVBQVQsRUFBcUIsUUFBckIsRUFBK0IsSUFBL0IsRUFBcUMsa0JBQXJDLEVBQXlELFdBQXpELEVBQXNFLGdCQUF0RSxDQUEvQixDQUFaOztBQUVBRixJQUFJRyxNQUFKLENBQVcsQ0FBQyxtQkFBRCxFQUFzQixnQkFBdEIsRUFBd0Msb0JBQXhDLEVBQThELFVBQUNDLGlCQUFELEVBQW9CQyxjQUFwQixFQUFvQ0Msa0JBQXBDLEVBQTJEOztBQUVoSUEsdUJBQW1CQyxTQUFuQixDQUE2QixHQUE3QjtBQUNBSCxzQkFBa0JJLFNBQWxCLENBQTRCLElBQTVCOztBQUVBSCxtQkFDR0ksS0FESCxDQUNTLE1BRFQsRUFDaUI7QUFDWEMsYUFBSyxHQURNO0FBRVhDLHFCQUFhLHFCQUZGO0FBR1hDLG9CQUFZO0FBSEQsS0FEakIsRUFNR0gsS0FOSCxDQU1TLFVBTlQsRUFNcUI7QUFDZkMsYUFBSyxXQURVO0FBRWZDLHFCQUFhLDZCQUZFO0FBR2ZDLG9CQUFZO0FBSEcsS0FOckIsRUFXR0gsS0FYSCxDQVdTLFVBWFQsRUFXcUI7QUFDZkMsYUFBSyxXQURVO0FBRWZDLHFCQUFhLGlCQUZFO0FBR2ZDLG9CQUFZO0FBSEcsS0FYckIsRUFnQkdILEtBaEJILENBZ0JTLE9BaEJULEVBZ0JrQjtBQUNaQyxhQUFLLFFBRE87QUFFWkMscUJBQWEsdUJBRkQ7QUFHWkMsb0JBQVk7QUFIQSxLQWhCbEIsRUFxQkdILEtBckJILENBcUJTLGlCQXJCVCxFQXFCNEI7QUFDdEJDLGFBQUssUUFEaUI7QUFFdEJDLHFCQUFhLG9DQUZTO0FBR3RCQyxvQkFBWTtBQUhVLEtBckI1QjtBQTBCSCxDQS9CVSxDQUFYOztBQWtDQVosSUFBSWEsR0FBSixDQUFRLENBQUMsWUFBRCxFQUFlLFdBQWYsRUFBNEIsVUFBU0MsVUFBVCxFQUFxQkMsU0FBckIsRUFBK0I7O0FBRWpFQyxZQUFRQyxHQUFSLENBQVlILFdBQVdJLFdBQXZCO0FBQ0FKLGVBQVdLLGFBQVgsR0FBMkIsWUFBVTtBQUNqQ0wsbUJBQVdJLFdBQVgsR0FBeUIsQ0FBQ0osV0FBV0ksV0FBckM7QUFDQUYsZ0JBQVFDLEdBQVIsQ0FBWUgsV0FBV0ksV0FBdkI7QUFDSCxLQUhEOztBQUtBSixlQUFXTSxHQUFYLENBQWUscUJBQWYsRUFBc0MsVUFBVUMsS0FBVixFQUFpQkMsWUFBakIsRUFBK0JDLGFBQS9CLEVBQThDLENBRW5GLENBRkQ7QUFJRCxDQVpPLENBQVI7OztBQ3BDQXRCLFFBQVFDLE1BQVIsQ0FBZSxrQkFBZixFQUFtQyxFQUFuQyxFQUF1Q1UsVUFBdkMsQ0FBa0QsaUJBQWxELEVBQXFFLENBQUMsUUFBRCxFQUFXLFVBQUNZLE1BQUQsRUFBWSxDQUkzRixDQUpvRSxDQUFyRTs7O0FDQUF2QixRQUFRQyxNQUFSLENBQWUsUUFBZixFQUF5QixDQUFDLGNBQUQsRUFBaUIsZUFBakIsRUFBa0MsYUFBbEMsRUFBaUQsWUFBakQsRUFBK0QsaUJBQS9ELENBQXpCOzs7QUNBQUQsUUFBUUMsTUFBUixDQUFlLGVBQWYsRUFBZ0MsRUFBaEMsRUFBb0N1QixTQUFwQyxDQUE4QyxRQUE5QyxFQUF3RCxDQUFDLFNBQUQsRUFBWSxVQUFDQyxPQUFELEVBQWE7QUFDN0UsV0FBTztBQUNIQyxrQkFBVSxHQURQO0FBRUhDLGVBQU87QUFDSEMscUJBQVM7QUFETixTQUZKO0FBS0hDLGNBQU0sY0FBQ0YsS0FBRCxFQUFRRyxPQUFSLEVBQWlCQyxLQUFqQixFQUEyQjtBQUM3Qi9CLG9CQUFROEIsT0FBUixDQUFnQkwsT0FBaEIsRUFBeUJPLElBQXpCLENBQThCLFFBQTlCLEVBQXdDLFlBQU07QUFDMUMsb0JBQUlDLE1BQU1ILFFBQVEsQ0FBUixDQUFWO0FBQUEsb0JBQ0lJLE1BQU1ELElBQUlFLHFCQUFKLEVBRFY7QUFFSTtBQUNKLG9CQUFHRCxJQUFJRSxHQUFKLEdBQVVULE1BQU1DLE9BQU4sQ0FBY1MsTUFBeEIsR0FBaUNaLFFBQVFhLE9BQTVDLEVBQXFEO0FBQ2pEWCwwQkFBTUMsT0FBTixDQUFjVyxPQUFkLEdBQXdCLElBQXhCO0FBQ0E7QUFDSDtBQUNEO0FBQ0E7QUFDQTtBQUNBWixzQkFBTWEsTUFBTjtBQUNILGFBWkQ7QUFhSDs7QUFuQkUsS0FBUDtBQXNCSCxDQXZCdUQsQ0FBeEQ7OztBQ0FBeEMsUUFBUUMsTUFBUixDQUFlLGFBQWYsRUFBOEIsRUFBOUIsRUFBa0N3QyxPQUFsQyxDQUEwQyxNQUExQyxFQUFrRCxZQUFVO0FBQzFELE1BQUlDLFNBQVEsNkNBQVo7QUFDQSxNQUFJQyxPQUFPLGFBQVg7QUFDQSxTQUFPO0FBQ0xELFdBQU8saUJBQVc7QUFBQyxhQUFPQSxNQUFQO0FBQWMsS0FENUI7QUFFTEUsY0FBVSxrQkFBU0MsUUFBVCxFQUFtQjtBQUFFSCxlQUFRRyxRQUFSO0FBQWtCLEtBRjVDO0FBR0xDLGlCQUFhLHVCQUFXO0FBQUUsYUFBT0gsSUFBUDtBQUFhLEtBSGxDO0FBSUxJLGFBQVUsaUJBQVNDLE9BQVQsRUFBa0I7QUFBRUwsYUFBT0ssT0FBUDtBQUFlO0FBSnhDLEdBQVA7QUFNRCxDQVRELEVBVUNyQyxVQVZELENBVVksZ0JBVlosRUFVOEIsQ0FBQyxRQUFELEVBQVcsTUFBWCxFQUFtQixVQUFTWSxNQUFULEVBQWlCMEIsSUFBakIsRUFBc0I7QUFDckUxQixTQUFPMEIsSUFBUCxHQUFjQSxJQUFkO0FBQ0ExQixTQUFPMkIsUUFBUCxHQUFrQkQsSUFBbEI7QUFDRCxDQUg2QixDQVY5Qjs7O0FDQUFqRCxRQUFRQyxNQUFSLENBQWUsY0FBZixFQUErQixFQUEvQixFQUFtQ3VCLFNBQW5DLENBQTZDLGFBQTdDLEVBQTRELENBQUMsWUFBRCxFQUFlLFVBQVNYLFVBQVQsRUFBb0I7O0FBRTdGLFNBQU07QUFDSmEsY0FBVSxHQUROO0FBRUpDLFdBQU87QUFDTHdCLFlBQU07QUFERCxLQUZIO0FBS0pDLGFBQVMsSUFMTDtBQU1KQyxnQkFBWSxJQU5SO0FBT0p4QixVQUFPLGNBQVNGLEtBQVQsRUFBZ0JHLE9BQWhCLEVBQXlCQyxLQUF6QixFQUErQjtBQUNwQ0osWUFBTTJCLFdBQU4sR0FBb0IsRUFBcEI7QUFDQSxVQUFHdkIsTUFBTXdCLEtBQVQsRUFDRTVCLE1BQU0yQixXQUFOLENBQWtCQyxLQUFsQixHQUEwQnhCLE1BQU13QixLQUFoQztBQUNGLFVBQUl4QixNQUFNeUIsTUFBVixFQUNFN0IsTUFBTTJCLFdBQU4sQ0FBa0JFLE1BQWxCLEdBQTJCekIsTUFBTXlCLE1BQWpDOztBQUVGN0IsWUFBTThCLFNBQU4sR0FBa0IsWUFBVTtBQUMxQjVDLG1CQUFXSSxXQUFYLEdBQXlCLEtBQXpCO0FBQ0QsT0FGRDtBQUdELEtBakJHO0FBa0JKUCxpQkFBYTtBQWxCVCxHQUFOO0FBcUJELENBdkIyRCxDQUE1RDs7O0FDQUFWLFFBQVFDLE1BQVIsQ0FBZSxZQUFmLEVBQTZCLEVBQTdCLEVBQWlDVSxVQUFqQyxDQUE0QyxlQUE1QyxFQUE2RCxDQUFDLFFBQUQsRUFBVyxPQUFYLEVBQW9CLFNBQXBCLEVBQStCLGlCQUEvQixFQUFrRCxVQUFTWSxNQUFULEVBQWlCbUMsS0FBakIsRUFBd0JqQyxPQUF4QixFQUFpQ2tDLFFBQWpDLEVBQTBDOztBQUVySnBDLFdBQU9xQyxRQUFQLEdBQWtCLEVBQWxCOztBQUVBckMsV0FBT3NDLFdBQVAsR0FBcUIsWUFBVTtBQUMzQjlDLGdCQUFRQyxHQUFSLENBQVlPLE9BQU9xQyxRQUFuQjtBQUNDRixjQUFNSSxJQUFOLENBQVcsZUFBWCxFQUE0QnZDLE9BQU9xQyxRQUFuQyxFQUNHRyxJQURILENBQ1EsVUFBU0MsT0FBVCxFQUFrQkMsTUFBbEIsRUFBMEJDLE9BQTFCLEVBQW1DaEUsTUFBbkMsRUFBMEM7QUFDOUN5RCxxQkFBU1EsTUFBVCxDQUFnQixnQ0FBZ0NILFFBQVFJLElBQVIsQ0FBYUMsV0FBN0Q7QUFDRztBQUNBO0FBQ0osU0FMSCxFQUtLLFVBQVNMLE9BQVQsRUFBa0JDLE1BQWxCLEVBQTBCQyxPQUExQixFQUFtQ2hFLE1BQW5DLEVBQTBDO0FBQzNDeUQscUJBQVNRLE1BQVQsQ0FBZ0IsOERBQWhCO0FBQ0QsU0FQSDtBQVFKLEtBVkQ7O0FBWUE1QyxXQUFPK0MsUUFBUCxHQUFrQixLQUFsQjtBQUNBL0MsV0FBT2dELFVBQVAsR0FBb0IsWUFBVTtBQUMxQmhELGVBQU8rQyxRQUFQLEdBQWtCLENBQUMvQyxPQUFPK0MsUUFBMUI7QUFDSCxLQUZEOztBQUlBL0MsV0FBT2lELFVBQVAsR0FBb0IsS0FBcEI7QUFDQSxRQUFHL0MsUUFBUWdELFVBQVIsR0FBcUIsR0FBeEIsRUFBNEI7QUFDeEIxRCxnQkFBUUMsR0FBUixDQUFZUyxRQUFRZ0QsVUFBcEI7QUFDQXpFLGdCQUFROEIsT0FBUixDQUFnQkwsT0FBaEIsRUFBeUJPLElBQXpCLENBQThCLFFBQTlCLEVBQXdDLFlBQU07QUFDMUMsZ0JBQUdQLFFBQVFhLE9BQVIsR0FBa0IsR0FBckIsRUFBeUI7QUFDckJ2Qix3QkFBUUMsR0FBUixDQUFZTyxPQUFPaUQsVUFBbkI7QUFDQWpELHVCQUFPaUQsVUFBUCxHQUFvQixJQUFwQjtBQUNILGFBSEQsTUFHTztBQUNIakQsdUJBQU9pRCxVQUFQLEdBQW9CLEtBQXBCO0FBQ0g7QUFDSixTQVBEO0FBUUg7QUFFSixDQWxDNEQsQ0FBN0Q7OztBQ0FBeEUsUUFBUUMsTUFBUixDQUFlLGNBQWYsRUFBK0J5RSxLQUEvQixDQUFxQyxVQUFyQyxFQUFpREMsUUFBakQ7O0FBRUEzRSxRQUFRQyxNQUFSLENBQWUsaUJBQWYsRUFBa0MsRUFBbEMsRUFBc0N3QyxPQUF0QyxDQUE4QyxpQkFBOUMsRUFBaUUsQ0FBQyxVQUFELEVBQWEsVUFBU2tDLFFBQVQsRUFBa0I7O0FBRTlGQSxXQUFTLFdBQVQsRUFBc0I7QUFDcEJDLFVBQU0sSUFEYztBQUVwQkMsV0FBTyxRQUZhO0FBR3BCQyxZQUFRLElBSFk7QUFJcEJDLGtCQUFjLE9BSk07QUFLcEJDLG9CQUFnQixLQUxJO0FBTXBCQyxlQUFXO0FBTlMsR0FBdEI7O0FBU0EsU0FBTztBQUNMZCxZQUFRLGdCQUFTSCxPQUFULEVBQWlCO0FBQ3ZCVyxlQUFTWCxPQUFULEVBQWtCLEVBQUNrQixPQUFPLE1BQVIsRUFBbEI7QUFDQW5FLGNBQVFDLEdBQVIsQ0FBWWdELE9BQVo7QUFDRCxLQUpJO0FBS0xtQixXQUFPLGVBQVNuQixPQUFULEVBQWlCO0FBQ3RCVyxlQUFTWCxPQUFULEVBQWtCLEVBQUNrQixPQUFPLFFBQVIsRUFBbEI7QUFDQW5FLGNBQVFDLEdBQVIsQ0FBWWdELE9BQVo7QUFDRDtBQVJJLEdBQVA7QUFVRCxDQXJCZ0UsQ0FBakU7Ozs7O0FDRkFoRSxRQUFRQyxNQUFSLENBQWUsZUFBZixFQUFnQyxFQUFoQyxFQUFvQ1UsVUFBcEMsQ0FBK0MsbUJBQS9DLEVBQW9FLENBQUMsUUFBRCxFQUFXLE9BQVgsRUFBb0IsVUFBcEIsRUFBZ0MsVUFBQ1ksTUFBRCxFQUFTbUMsS0FBVCxFQUFnQjBCLFFBQWhCLEVBQTZCO0FBQzdIQyxXQUFPQyxRQUFQLENBQWdCLENBQWhCLEVBQW1CLENBQW5COztBQUVBL0QsV0FBT2dFLEtBQVAsR0FBZSxLQUFmO0FBQ0FoRSxXQUFPaUUsV0FBUCxHQUFxQixZQUFNO0FBQ3ZCakUsZUFBT2dFLEtBQVAsR0FBZSxDQUFDaEUsT0FBT2dFLEtBQXZCO0FBQ0gsS0FGRDs7QUFJQWhFLFdBQU9rRSxTQUFQLEdBQW1CLEVBQW5CO0FBQ0FsRSxXQUFPbUUsV0FBUCxHQUFxQixFQUFyQjtBQUNBbkUsV0FBT29FLFdBQVAsR0FBcUIsRUFBckI7QUFDQXBFLFdBQU9xRSxhQUFQLEdBQXVCLEVBQXZCO0FBQ0FyRSxXQUFPcUMsUUFBUCxHQUFpQixFQUFqQjtBQUNBLGFBQVNpQyxTQUFULENBQW1CQyxNQUFuQixFQUEyQkMsSUFBM0IsRUFBZ0M7QUFDNUIsWUFBSUMsUUFBUUQsS0FBS0UsT0FBTCxDQUFhSCxNQUFiLENBQVo7QUFDQSxZQUFHRSxRQUFRLENBQUMsQ0FBWixFQUFjO0FBQ1ZELGlCQUFLRyxNQUFMLENBQVlGLEtBQVosRUFBbUIsQ0FBbkI7QUFDSCxTQUZELE1BRU87QUFDSEQsaUJBQUtJLElBQUwsQ0FBVUwsTUFBVjtBQUNIO0FBQ0QvRSxnQkFBUUMsR0FBUixDQUFZK0UsSUFBWjtBQUNIO0FBQ0R4RSxXQUFPNkUsV0FBUCxHQUFxQixVQUFTTixNQUFULEVBQWlCTyxRQUFqQixFQUEwQjtBQUMzQyxZQUFHQSxZQUFZLElBQWYsRUFBb0I7QUFDaEJSLHNCQUFVQyxNQUFWLEVBQWtCdkUsT0FBT29FLFdBQXpCO0FBQ0gsU0FGRCxNQUVPLElBQUdVLFlBQVksSUFBZixFQUFvQjtBQUN2QlIsc0JBQVVDLE1BQVYsRUFBa0J2RSxPQUFPcUUsYUFBekI7QUFDSCxTQUZNLE1BRUEsSUFBR1MsWUFBWSxJQUFmLEVBQW9CO0FBQ3ZCUixzQkFBVUMsTUFBVixFQUFrQnZFLE9BQU9rRSxTQUF6QjtBQUNILFNBRk0sTUFFQTtBQUNISSxzQkFBVUMsTUFBVixFQUFrQnZFLE9BQU9tRSxXQUF6QjtBQUNIO0FBQ0osS0FWRDs7QUFZQW5FLFdBQU8rRSxTQUFQLEdBQW1CbEIsU0FBU1csSUFBVCxFQUFuQjtBQUNBeEUsV0FBT2dGLGVBQVAsR0FBeUIsQ0FBekI7O0FBRUFoRixXQUFPaUYsZUFBUCxHQUF5QixVQUFDUixLQUFELEVBQVc7QUFDaEMsZUFBT3pFLE9BQU9nRixlQUFQLEtBQTJCUCxLQUFsQztBQUNILEtBRkQ7O0FBSUF6RSxXQUFPa0YsS0FBUCxHQUFlLFlBQU07QUFDakJsRixlQUFPZ0YsZUFBUCxHQUEwQmhGLE9BQU9nRixlQUFQLEdBQXlCaEYsT0FBTytFLFNBQVAsQ0FBaUJJLE1BQWpCLEdBQXlCLENBQW5ELEdBQXdELEVBQUVuRixPQUFPZ0YsZUFBakUsR0FBbUYsQ0FBNUc7QUFDSCxLQUZEOztBQUlBaEYsV0FBT29GLEtBQVAsR0FBZSxZQUFNO0FBQ2pCcEYsZUFBT2dGLGVBQVAsR0FBMEJoRixPQUFPZ0YsZUFBUCxHQUF5QixDQUExQixHQUErQixFQUFFaEYsT0FBT2dGLGVBQXhDLEdBQTBEaEYsT0FBTytFLFNBQVAsQ0FBaUJJLE1BQWpCLEdBQXlCLENBQTVHO0FBQ0gsS0FGRDs7QUFJQW5GLFdBQU9xRixrQkFBUCxHQUE0QixZQUFNO0FBQUE7O0FBRTlCLFlBQUl4QztBQUNBeUMsZ0JBQUl0RixPQUFPK0UsU0FBUCxDQUFpQixDQUFqQixFQUFvQlEsUUFEeEI7QUFFQUMsZ0JBQUl4RixPQUFPb0UsV0FGWDtBQUdBcUIsZ0JBQUl6RixPQUFPcUUsYUFIWDtBQUlBcUIsZ0JBQUkxRixPQUFPK0UsU0FBUCxDQUFpQixDQUFqQixFQUFvQlE7QUFKeEIsd0NBS0l2RixPQUFPa0UsU0FMWCxnQ0FNSWxFLE9BQU9tRSxXQU5YLGtDQU9NbkUsT0FBT3FDLFFBQVAsQ0FBZ0JzRCxJQVB0QixtQ0FRTzNGLE9BQU9xQyxRQUFQLENBQWdCdUQsS0FSdkIsbUNBU081RixPQUFPcUMsUUFBUCxDQUFnQndELEtBVHZCLGtDQVVNN0YsT0FBT3FDLFFBQVAsQ0FBZ0J5RCxJQVZ0QixTQUFKO0FBWUF0RyxnQkFBUUMsR0FBUixDQUFZb0QsSUFBWjs7QUFFQVYsY0FBTUksSUFBTixDQUFXLG9CQUFYLEVBQWlDTSxJQUFqQyxFQUNLTCxJQURMLENBQ1UsVUFBQytDLFFBQUQsRUFBYztBQUNoQi9GLG9CQUFRQyxHQUFSLENBQVk4RixTQUFTMUMsSUFBckI7QUFDSCxTQUhMLEVBR08sVUFBQ2tELEdBQUQsRUFBUztBQUNSdkcsb0JBQVFDLEdBQVIsQ0FBWSw4Q0FBOENzRyxHQUExRDtBQUNILFNBTEw7QUFNSCxLQXRCRDs7QUF3QkEvRixXQUFPZ0csT0FBUCxHQUFpQixVQUFTQyxNQUFULEVBQWlCQyxFQUFqQixFQUFxQjtBQUNsQyxZQUFJQyxRQUFRRixPQUFPRyxLQUFQLENBQWEsR0FBYixDQUFaO0FBQ0EsWUFBR0QsTUFBTUQsS0FBRyxDQUFULE1BQWdCRyxTQUFuQixFQUE2QjtBQUN6QixtQkFBT0YsTUFBTUQsRUFBTixDQUFQO0FBQ0gsU0FGRCxNQUVPO0FBQ0gsbUJBQU9DLE1BQU1ELEVBQU4sSUFBWSxHQUFaLEdBQWtCQyxNQUFNRCxLQUFHLENBQVQsQ0FBekI7QUFDSDtBQUNKLEtBUEQ7QUFVSCxDQW5GbUUsQ0FBcEU7OztBQ0FBekgsUUFBUUMsTUFBUixDQUFlLElBQWYsRUFBcUIsQ0FBQyxlQUFELEVBQWtCLHNCQUFsQixDQUFyQjs7O0FDQUFELFFBQVFDLE1BQVIsQ0FBZSxzQkFBZixFQUF1QyxFQUF2QyxFQUEyQ3dDLE9BQTNDLENBQW1ELFVBQW5ELEVBQStELFlBQU07O0FBRWpFLFFBQUk2RCxZQUFZLENBQ1o7QUFDSXVCLFlBQUksSUFEUjtBQUVJQyxjQUFNLE9BRlY7QUFHSXpCLGtCQUFVLDRDQUhkO0FBSUkwQixjQUFNLFVBSlY7QUFLSUMsaUJBQVMsQ0FBQyxRQUFELEVBQVcsU0FBWCxFQUFzQixRQUF0QixFQUFnQyxNQUFoQyxFQUF3QyxTQUF4QyxFQUFtRCxPQUFuRCxDQUxiO0FBTUlsQixrQkFBVTtBQU5kLEtBRFksRUFTWjtBQUNJZSxZQUFJLElBRFI7QUFFSUMsY0FBTSxVQUZWO0FBR0l6QixrQkFBVSxrQ0FIZDtBQUlJMEIsY0FBTSxVQUpWO0FBS0lFLGdCQUFRLENBQ0o7QUFDSWYsa0JBQU0sTUFEVjtBQUVJNUMsc0JBQVU7QUFGZCxTQURJLEVBS0o7QUFDSTRDLGtCQUFNLE1BRFY7QUFFSTVDLHNCQUFVO0FBRmQsU0FMSSxFQVNKO0FBQ0k0QyxrQkFBTSxNQURWO0FBRUk1QyxzQkFBVTtBQUZkLFNBVEksRUFhSjtBQUNJNEMsa0JBQU0sTUFEVjtBQUVJNUMsc0JBQVU7QUFGZCxTQWJJLEVBaUJKO0FBQ0k0QyxrQkFBTSxNQURWO0FBRUk1QyxzQkFBVTtBQUZkLFNBakJJLEVBcUJKO0FBQ0k0QyxrQkFBTSxNQURWO0FBRUk1QyxzQkFBVTtBQUZkLFNBckJJO0FBTFosS0FUWSxFQXlDWjtBQUNJdUQsWUFBSSxJQURSO0FBRUlDLGNBQU0sVUFGVjtBQUdJekIsa0JBQVUscUNBSGQ7QUFJSTBCLGNBQU0sVUFKVjtBQUtJRSxnQkFBUSxDQUNKO0FBQ0lmLGtCQUFNLE1BRFY7QUFFSTVDLHNCQUFVO0FBRmQsU0FESSxFQUtKO0FBQ0k0QyxrQkFBTSxRQURWO0FBRUk1QyxzQkFBVTtBQUZkLFNBTEksRUFTSjtBQUNJNEMsa0JBQU0sVUFEVjtBQUVJNUMsc0JBQVU7QUFGZCxTQVRJLEVBYUo7QUFDSTRDLGtCQUFNLGNBRFY7QUFFSTVDLHNCQUFVO0FBRmQsU0FiSSxFQWlCSjtBQUNJNEMsa0JBQU0sS0FEVjtBQUVJNUMsc0JBQVU7QUFGZCxTQWpCSSxFQXFCSjtBQUNJNEMsa0JBQU0sc0JBRFY7QUFFSTVDLHNCQUFVO0FBRmQsU0FyQkk7QUFMWixLQXpDWSxFQXlFWjtBQUNJdUQsWUFBSSxJQURSO0FBRUlDLGNBQU0sT0FGVjtBQUdJekIsa0JBQVUsK0dBSGQ7QUFJSTBCLGNBQU0sVUFKVjtBQUtJQyxpQkFBUyxDQUFDLEtBQUQsRUFBUSxLQUFSLEVBQWUsTUFBZixFQUF1QixPQUF2QixFQUFnQyxPQUFoQyxFQUF5QyxNQUF6QyxDQUxiO0FBTUlsQixrQkFBVTtBQU5kLEtBekVZLEVBaUZaO0FBQ0llLFlBQUksSUFEUjtBQUVJQyxjQUFNLFVBRlY7QUFHSXpCLGtCQUFVLGlEQUhkO0FBSUkwQixjQUFNLFdBSlY7QUFLSUcsZ0JBQVEsUUFMWjtBQU1JQyxnQkFBUSxDQUNKLEVBQUlqQixNQUFNLE9BQVY7QUFDSTVDLHNCQUFVO0FBRGQsU0FESSxFQUlKLEVBQUk0QyxNQUFNLE1BQVY7QUFDSTVDLHNCQUFVO0FBRGQsU0FKSSxFQU9KLEVBQUk0QyxNQUFNLEtBQVY7QUFDSTVDLHNCQUFVO0FBRGQsU0FQSSxFQVVKLEVBQUk0QyxNQUFNLFFBQVY7QUFDSTVDLHNCQUFVO0FBRGQsU0FWSSxFQWFKLEVBQUk0QyxNQUFNLFFBQVY7QUFDSTVDLHNCQUFVO0FBRGQsU0FiSSxFQWdCSixFQUFJNEMsTUFBTSxNQUFWO0FBQ0k1QyxzQkFBVTtBQURkLFNBaEJJLEVBbUJKLEVBQUk0QyxNQUFNLE9BQVY7QUFDSTVDLHNCQUFVO0FBRGQsU0FuQkksRUFzQkosRUFBSTRDLE1BQU0sTUFBVjtBQUNJNUMsc0JBQVU7QUFEZCxTQXRCSSxFQXlCSixFQUFJNEMsTUFBTSxXQUFWO0FBQ0k1QyxzQkFBVTtBQURkLFNBekJJLEVBNEJKLEVBQUk0QyxNQUFNLE9BQVY7QUFDSTVDLHNCQUFVO0FBRGQsU0E1QkksRUErQkosRUFBSTRDLE1BQU0sTUFBVjtBQUNJNUMsc0JBQVU7QUFEZCxTQS9CSSxFQWtDSixFQUFJNEMsTUFBTSxRQUFWO0FBQ0k1QyxzQkFBVTtBQURkLFNBbENJLEVBcUNKLEVBQUk0QyxNQUFNLE1BQVY7QUFDSTVDLHNCQUFVO0FBRGQsU0FyQ0ksRUF3Q0osRUFBSTRDLE1BQU0sT0FBVjtBQUNJNUMsc0JBQVU7QUFEZCxTQXhDSSxFQTJDSixFQUFJNEMsTUFBTSxPQUFWO0FBQ0k1QyxzQkFBVTtBQURkLFNBM0NJLEVBOENKLEVBQUk0QyxNQUFNLE9BQVY7QUFDSTVDLHNCQUFVO0FBRGQsU0E5Q0k7QUFOWixLQWpGWSxFQTBJWjtBQUNJdUQsWUFBSSxJQURSO0FBRUlDLGNBQU0sVUFGVjtBQUdJekIsa0JBQVUsK0NBSGQ7QUFJSTBCLGNBQU0sV0FKVjtBQUtJSSxnQkFBUSxDQUNKLEVBQUlqQixNQUFNLE9BQVY7QUFDSTVDLHNCQUFVO0FBRGQsU0FESSxFQUlKLEVBQUk0QyxNQUFNLE1BQVY7QUFDSTVDLHNCQUFVO0FBRGQsU0FKSSxFQU9KLEVBQUk0QyxNQUFNLEtBQVY7QUFDSTVDLHNCQUFVO0FBRGQsU0FQSSxFQVVKLEVBQUk0QyxNQUFNLFFBQVY7QUFDSTVDLHNCQUFVO0FBRGQsU0FWSSxFQWFKLEVBQUk0QyxNQUFNLFFBQVY7QUFDSTVDLHNCQUFVO0FBRGQsU0FiSSxFQWdCSixFQUFJNEMsTUFBTSxNQUFWO0FBQ0k1QyxzQkFBVTtBQURkLFNBaEJJLEVBbUJKLEVBQUk0QyxNQUFNLE9BQVY7QUFDSTVDLHNCQUFVO0FBRGQsU0FuQkksRUFzQkosRUFBSTRDLE1BQU0sTUFBVjtBQUNJNUMsc0JBQVU7QUFEZCxTQXRCSSxFQXlCSixFQUFJNEMsTUFBTSxXQUFWO0FBQ0k1QyxzQkFBVTtBQURkLFNBekJJLEVBNEJKLEVBQUk0QyxNQUFNLE9BQVY7QUFDSTVDLHNCQUFVO0FBRGQsU0E1QkksRUErQkosRUFBSTRDLE1BQU0sTUFBVjtBQUNJNUMsc0JBQVU7QUFEZCxTQS9CSSxFQWtDSixFQUFJNEMsTUFBTSxRQUFWO0FBQ0k1QyxzQkFBVTtBQURkLFNBbENJLEVBcUNKLEVBQUk0QyxNQUFNLE1BQVY7QUFDSTVDLHNCQUFVO0FBRGQsU0FyQ0ksRUF3Q0osRUFBSTRDLE1BQU0sT0FBVjtBQUNJNUMsc0JBQVU7QUFEZCxTQXhDSSxFQTJDSixFQUFJNEMsTUFBTSxPQUFWO0FBQ0k1QyxzQkFBVTtBQURkLFNBM0NJLEVBOENKLEVBQUk0QyxNQUFNLE9BQVY7QUFDSTVDLHNCQUFVO0FBRGQsU0E5Q0k7QUFMWixLQTFJWSxFQWtNWjtBQUNJdUQsWUFBSSxJQURSO0FBRUlDLGNBQU07QUFGVixLQWxNWSxDQUFoQjs7QUF3TUEsV0FBTztBQUNML0IsY0FBTSxnQkFBVTtBQUNkLG1CQUFPTyxTQUFQO0FBQ0Q7QUFISSxLQUFQO0FBTUgsQ0FoTkQ7OztBQ0FBdEcsUUFBUUMsTUFBUixDQUFlLFlBQWYsRUFBNkIsRUFBN0IsRUFBaUN1QixTQUFqQyxDQUEyQyxZQUEzQyxFQUF5RCxZQUFNO0FBQzdELFNBQU87QUFDTEUsY0FBVSxHQURMO0FBRUxoQixpQkFBYSx1QkFGUjtBQUdMMEMsYUFBUyxJQUhKO0FBSUx6QixXQUFPLEVBQUV5RyxTQUFTLEdBQVg7QUFKRixHQUFQO0FBTUQsQ0FQRDs7O0FDQ0FwSSxRQUFRQyxNQUFSLENBQWUsZ0JBQWYsRUFBaUMsRUFBakMsRUFBcUN1QixTQUFyQyxDQUErQyxXQUEvQyxFQUE0RCxDQUFDLFNBQUQsRUFBWSxVQUFaLEVBQXdCLFVBQVVDLE9BQVYsRUFBbUI0RyxRQUFuQixFQUE2QjtBQUM3RyxTQUFPO0FBQ0gzRyxjQUFVLEdBRFA7QUFFSEcsVUFBTSxjQUFDRixLQUFELEVBQVEyRyxJQUFSLEVBQWN2RyxLQUFkLEVBQXdCO0FBQzVCc0csZUFBUyxZQUFNO0FBQ2IxRyxjQUFNNEcsU0FBTixHQUFrQkQsS0FBSyxDQUFMLEVBQVFFLFlBQTFCO0FBQ0QsT0FGRCxFQUVHLEdBRkg7QUFHQXhJLGNBQVE4QixPQUFSLENBQWdCTCxPQUFoQixFQUF5Qk8sSUFBekIsQ0FBOEIsUUFBOUIsRUFBd0MsWUFBTTtBQUM1Q0wsY0FBTWEsTUFBTixDQUFhLFlBQU07QUFDakJiLGdCQUFNNEcsU0FBTixHQUFrQkQsS0FBSyxDQUFMLEVBQVFFLFlBQTFCO0FBQ0QsU0FGRDtBQUdELE9BSkQ7QUFLRDtBQVhFLEdBQVA7QUFhSCxDQWQyRCxDQUE1RDs7QUFnQkF4SSxRQUFRQyxNQUFSLENBQWUsbUJBQWYsRUFBb0MsRUFBcEMsRUFBd0N1QixTQUF4QyxDQUFrRCxjQUFsRCxFQUFrRSxZQUFVO0FBQzFFLFNBQU87QUFDTEUsY0FBVSxHQURMO0FBRUxHLFVBQU0sY0FBQ0YsS0FBRCxFQUFRMkcsSUFBUixFQUFjdkcsS0FBZCxFQUF3QjtBQUM1QkosWUFBTThHLE1BQU4sQ0FBYSxXQUFiLEVBQTBCLFVBQUNDLElBQUQsRUFBT0MsSUFBUCxFQUFnQjtBQUN4QztBQUNBTCxhQUFLTSxJQUFMLENBQVUsT0FBVixFQUFtQixhQUFhRixJQUFiLEdBQW9CLElBQXZDO0FBQ0QsT0FIRDtBQUlEO0FBUEksR0FBUDtBQVNELENBVkQ7OztBQ2pCQTFJLFFBQVFDLE1BQVIsQ0FBZSxpQkFBZixFQUFrQyxFQUFsQyxFQUFzQ1UsVUFBdEMsQ0FBaUQsZ0JBQWpELEVBQW1FLENBQUMsUUFBRCxFQUFXLGdCQUFYLEVBQTZCLFVBQVNZLE1BQVQsRUFBaUJzSCxjQUFqQixFQUFnQzs7QUFFOUh0SCxXQUFPdUgsUUFBUCxHQUFrQkQsZUFBZTlDLElBQWYsRUFBbEI7O0FBRUF4RSxXQUFPd0gsT0FBUCxHQUFpQjtBQUNieEcsaUJBQVMsS0FESTtBQUViRixnQkFBUSxDQUFDO0FBRkksS0FBakI7O0FBS0FkLFdBQU95SCxPQUFQLEdBQWlCO0FBQ1pDLGdCQUFRLE1BREk7QUFFWkMsa0JBQVUsT0FGRTtBQUdaQyxnQkFBUSxhQUhJO0FBSVpDLGVBQU8sRUFKSztBQUtaQyxlQUFPLENBTEs7QUFNWkMsa0JBQVUsSUFORTtBQU9aO0FBQ0g7QUFDQTtBQUNBO0FBQ0dDLGtCQUFVO0FBQ1BDLHNCQUFVLFdBREg7QUFFUEMsc0JBQVU7QUFGSDtBQVhFLEtBQWpCO0FBaUJELENBMUJrRSxDQUFuRTs7O0FDQUF6SixRQUFRQyxNQUFSLENBQWUsTUFBZixFQUF1QixDQUFDLGlCQUFELEVBQW9CLGdCQUFwQixFQUFzQyxtQkFBdEMsRUFBMkQsWUFBM0QsQ0FBdkI7OztBQ0FBRCxRQUFRQyxNQUFSLENBQWUsb0JBQWYsRUFBcUMsRUFBckMsRUFBeUNVLFVBQXpDLENBQW9ELG1CQUFwRCxFQUF5RSxDQUFDLFFBQUQsRUFBVyxjQUFYLEVBQTJCLGdCQUEzQixFQUE2QyxVQUFDWSxNQUFELEVBQVNtSSxZQUFULEVBQXVCYixjQUF2QixFQUEwQztBQUM1SnRILFNBQU91SCxRQUFQLEdBQWtCRCxlQUFlOUMsSUFBZixFQUFsQjtBQUNILENBRndFLENBQXpFOztBQUlBL0YsUUFBUUMsTUFBUixDQUFlLDJCQUFmLEVBQTRDLEVBQTVDLEVBQWdEVSxVQUFoRCxDQUEyRCwyQkFBM0QsRUFBd0YsQ0FBQyxRQUFELEVBQVcsY0FBWCxFQUEyQixnQkFBM0IsRUFBNkMsVUFBQ1ksTUFBRCxFQUFTbUksWUFBVCxFQUF1QmIsY0FBdkIsRUFBMEM7QUFDN0t0SCxTQUFPb0ksZUFBUCxHQUF5QmQsZUFBZWUsSUFBZixDQUFvQkYsYUFBYUcsSUFBakMsQ0FBekI7QUFDRCxDQUZ1RixDQUF4Rjs7O0FDSkE3SixRQUFRQyxNQUFSLENBQWUsaUJBQWYsRUFBa0MsRUFBbEMsRUFBc0N3QyxPQUF0QyxDQUE4QyxnQkFBOUMsRUFBZ0UsWUFBTTtBQUNwRSxNQUFJcUcsV0FBVztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDRTVCLFVBQU0sZ0JBRFI7QUFFRTJDLFVBQU0sZ0JBRlI7QUFHRUMsVUFBTSwyQkFIUjtBQUlFQyxZQUFRLDZCQUpWO0FBS0VDLGFBQVMsa0NBTFg7QUFNRXJILFVBQU0sOFNBTlI7QUFPRXNILFVBQU0sMEJBUFI7QUFRRUMsVUFBTTtBQVJSLEdBTGEsRUFlYjtBQUNFaEQsVUFBTSxVQURSO0FBRUUyQyxVQUFNLFVBRlI7QUFHRUMsVUFBTSw0QkFIUjtBQUlFQyxZQUFRLDJCQUpWO0FBS0VDLGFBQVMsd0NBTFg7QUFNRXJILFVBQU0sMlRBTlI7QUFPRXNILFVBQU0sNEJBUFI7QUFRRUMsVUFBTTtBQVJSLEdBZmEsRUF5QmI7QUFDRWhELFVBQU0saUJBRFI7QUFFRTJDLFVBQU0saUJBRlI7QUFHRUMsVUFBTSxvQkFIUjtBQUlFQyxZQUFRLDRCQUpWO0FBS0VDLGFBQVMsa0NBTFg7QUFNRXJILFVBQU0sa1VBTlI7QUFPRXNILFVBQU0sMEJBUFI7QUFRRUMsVUFBTTtBQVJSLEdBekJhLEVBbUNiO0FBQ0VoRCxVQUFNLGtCQURSO0FBRUUyQyxVQUFNLFdBRlI7QUFHRUMsVUFBTSxzQkFIUjtBQUlFQyxZQUFRLHdCQUpWO0FBS0VDLGFBQVMsa0NBTFg7QUFNRXJILFVBQU0sNFRBTlI7QUFPRXNILFVBQU0sOEJBUFI7QUFRRUMsVUFBTTtBQVJSLEdBbkNhLENBQWY7O0FBZ0RBLFNBQU87QUFDTG5FLFVBQU0sZ0JBQVU7QUFDZCxhQUFPK0MsUUFBUDtBQUNELEtBSEk7QUFJTGMsVUFBTSxjQUFTQyxJQUFULEVBQWM7QUFDaEIsYUFBT2YsU0FBU2MsSUFBVCxDQUFjLFVBQVNPLE9BQVQsRUFBa0I7QUFDbkMsZUFBT0EsUUFBUU4sSUFBUixJQUFnQkEsSUFBdkI7QUFDSCxPQUZNLENBQVA7QUFHSDtBQVJJLEdBQVA7QUFVRCxDQTNERDs7O0FDQUE3SixRQUFRQyxNQUFSLENBQWUsVUFBZixFQUEyQixDQUFDLG9CQUFELEVBQXVCLDJCQUF2QixFQUFvRCxpQkFBcEQsQ0FBM0IiLCJmaWxlIjoiYXBwLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFwcCA9IGFuZ3VsYXIubW9kdWxlKCdoYi1pbnRlcmlvcnMnLCBbJ2hvbWUnLCAnc2VydmljZXMnLCAnY29tbW9uJywgJ2VkJywgJ2Fib3V0LmNvbnRyb2xsZXInLCAndWkucm91dGVyJywgJ25nU2Nyb2xsUmV2ZWFsJ10pO1xuXG5hcHAuY29uZmlnKFsnJGxvY2F0aW9uUHJvdmlkZXInLCAnJHN0YXRlUHJvdmlkZXInLCAnJHVybFJvdXRlclByb3ZpZGVyJywgKCRsb2NhdGlvblByb3ZpZGVyLCAkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyKSA9PiB7XG5cbiAgICAkdXJsUm91dGVyUHJvdmlkZXIub3RoZXJ3aXNlKCcvJyk7XG4gICAgJGxvY2F0aW9uUHJvdmlkZXIuaHRtbDVNb2RlKHRydWUpO1xuXG4gICAgJHN0YXRlUHJvdmlkZXJcbiAgICAgIC5zdGF0ZSgnaG9tZScsIHtcbiAgICAgICAgICB1cmw6ICcvJyxcbiAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9wYXJ0aWFscy9ob21lL2hvbWUnLFxuICAgICAgICAgIGNvbnRyb2xsZXI6ICdIb21lQ29udHJvbGxlcidcbiAgICAgIH0pXG4gICAgICAuc3RhdGUoJ3NlcnZpY2VzJywge1xuICAgICAgICAgIHVybDogJy9zZXJ2aWNlcycsXG4gICAgICAgICAgdGVtcGxhdGVVcmw6ICcvcGFydGlhbHMvc2VydmljZXMvc2VydmljZXMnLFxuICAgICAgICAgIGNvbnRyb2xsZXI6ICdTZXJ2aWNlQ29udHJvbGxlcidcbiAgICAgIH0pXG4gICAgICAuc3RhdGUoJ2UtZGVzaWduJywge1xuICAgICAgICAgIHVybDogJy9lLWRlc2lnbicsXG4gICAgICAgICAgdGVtcGxhdGVVcmw6ICcvcGFydGlhbHMvZWQvZWQnLFxuICAgICAgICAgIGNvbnRyb2xsZXI6ICdFRGVzaWduQ29udHJvbGxlcidcbiAgICAgIH0pXG4gICAgICAuc3RhdGUoJ2Fib3V0Jywge1xuICAgICAgICAgIHVybDogJy9hYm91dCcsXG4gICAgICAgICAgdGVtcGxhdGVVcmw6ICcvcGFydGlhbHMvYWJvdXQvYWJvdXQnLFxuICAgICAgICAgIGNvbnRyb2xsZXI6ICdBYm91dENvbnRyb2xsZXInXG4gICAgICB9KVxuICAgICAgLnN0YXRlKCdzZXJ2aWNlcy5kZXRhaWwnLCB7XG4gICAgICAgICAgdXJsOiAnLzpzbHVnJyxcbiAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9wYXJ0aWFscy9zZXJ2aWNlcy9zZXJ2aWNlcy1kZXRhaWwnLFxuICAgICAgICAgIGNvbnRyb2xsZXI6ICdTZWxlY3RlZFNlcnZpY2VDb250cm9sbGVyJ1xuICAgICAgfSk7XG59XSk7XG5cblxuYXBwLnJ1bihbJyRyb290U2NvcGUnLCAnJGxvY2F0aW9uJywgZnVuY3Rpb24oJHJvb3RTY29wZSwgJGxvY2F0aW9uKXtcblxuICBjb25zb2xlLmxvZygkcm9vdFNjb3BlLmNvbnRhY3RTaG93KTtcbiAgJHJvb3RTY29wZS50b2dnbGVDb250YWN0ID0gZnVuY3Rpb24oKXtcbiAgICAgICRyb290U2NvcGUuY29udGFjdFNob3cgPSAhJHJvb3RTY29wZS5jb250YWN0U2hvdztcbiAgICAgIGNvbnNvbGUubG9nKCRyb290U2NvcGUuY29udGFjdFNob3cpO1xuICB9XG5cbiAgJHJvb3RTY29wZS4kb24oXCIkc3RhdGVDaGFuZ2VTdWNjZXNzXCIsIGZ1bmN0aW9uIChldmVudCwgY3VycmVudFJvdXRlLCBwcmV2aW91c1JvdXRlKSB7XG5cbiAgfSk7XG5cbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdhYm91dC5jb250cm9sbGVyJywgW10pLmNvbnRyb2xsZXIoJ0Fib3V0Q29udHJvbGxlcicsIFsnJHNjb3BlJywgKCRzY29wZSkgPT4ge1xuXG4gXG5cbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdjb21tb24nLCBbJ2NvbW1vbi5tb2RhbCcsICdjb21tb24uaW52aWV3JywgJ2NvbW1vbi5tZXRhJywgJ2NvbW1vbi5uYXYnLCAnY29tbW9uLm5vdGlmaWVyJ10pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2NvbW1vbi5pbnZpZXcnLCBbXSkuZGlyZWN0aXZlKCdpblZpZXcnLCBbJyR3aW5kb3cnLCAoJHdpbmRvdykgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIHJlc3RyaWN0OiAnQScsXG4gICAgICAgIHNjb3BlOiB7XG4gICAgICAgICAgICB2aWV3T2JqOiAnPSdcbiAgICAgICAgfSxcbiAgICAgICAgbGluazogKHNjb3BlLCBlbGVtZW50LCBhdHRycykgPT4ge1xuICAgICAgICAgICAgYW5ndWxhci5lbGVtZW50KCR3aW5kb3cpLmJpbmQoJ3Njcm9sbCcsICgpID0+IHtcbiAgICAgICAgICAgICAgICB2YXIgJGVsID0gZWxlbWVudFswXSxcbiAgICAgICAgICAgICAgICAgICAgcG9zID0gJGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICAgICAgICAgICAgICAvL2NoZWNrIHRvIHNlZSBpZiBhY3RpdmUgY2xhc3MsIGlmIG5vdCwgc3RhcnQgYW5pbWF0aW9ucyB3aXRoIGpzIGFuZCBkZWZpbmUgc2VsZWN0b3JzXG4gICAgICAgICAgICAgICAgaWYocG9zLnRvcCArIHNjb3BlLnZpZXdPYmoub2Zmc2V0IDwgJHdpbmRvdy5zY3JvbGxZKSB7XG4gICAgICAgICAgICAgICAgICAgIHNjb3BlLnZpZXdPYmoudmlzaWJsZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ2luIHZpZXcgOicgKyBzY29wZS52aWV3T2JqLnZpc2libGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyAgICAgc2NvcGUudmlld09iai52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgICAgIHNjb3BlLiRhcHBseSgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgIH07XG59XSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnY29tbW9uLm1ldGEnLCBbXSkuZmFjdG9yeSgnTWV0YScsIGZ1bmN0aW9uKCl7XG4gIHZhciB0aXRsZSA9ICdIYXlsZXkgQmFnd2VsbCBJbnRlcmlvciBEZXNpZ24sIFNlYXR0bGUsIFdBJztcbiAgdmFyIGRlc2MgPSAnU3VwZXIgREVSUlInO1xuICByZXR1cm4ge1xuICAgIHRpdGxlOiBmdW5jdGlvbigpIHtyZXR1cm4gdGl0bGU7fSxcbiAgICBzZXRUaXRsZTogZnVuY3Rpb24obmV3VGl0bGUpIHsgdGl0bGUgPSBuZXdUaXRsZSB9LFxuICAgIGRlc2NyaXB0aW9uOiBmdW5jdGlvbigpIHsgcmV0dXJuIGRlc2M7fSxcbiAgICBzZXREZXNjIDogZnVuY3Rpb24obmV3RGVzYykgeyBkZXNjID0gbmV3RGVzY31cbiAgfVxufSlcbi5jb250cm9sbGVyKCdNZXRhQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJ01ldGEnLCBmdW5jdGlvbigkc2NvcGUsIE1ldGEpe1xuICAkc2NvcGUuTWV0YSA9IE1ldGE7XG4gICRzY29wZS5tZXRhRGVzYyA9IE1ldGE7XG59XSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnY29tbW9uLm1vZGFsJywgW10pLmRpcmVjdGl2ZSgnZ2xvYmFsTW9kYWwnLCBbJyRyb290U2NvcGUnLCBmdW5jdGlvbigkcm9vdFNjb3BlKXtcblxuICByZXR1cm57XG4gICAgcmVzdHJpY3Q6ICdFJyxcbiAgICBzY29wZToge1xuICAgICAgc2hvdzogJz0nXG4gICAgfSxcbiAgICByZXBsYWNlOiB0cnVlLFxuICAgIHRyYW5zY2x1ZGU6IHRydWUsXG4gICAgbGluayA6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtZW50LCBhdHRycyl7XG4gICAgICBzY29wZS5kaWFsb2dTdHlsZSA9IHt9O1xuICAgICAgaWYoYXR0cnMud2lkdGgpXG4gICAgICAgIHNjb3BlLmRpYWxvZ1N0eWxlLndpZHRoID0gYXR0cnMud2lkdGg7XG4gICAgICBpZiAoYXR0cnMuaGVpZ2h0KVxuICAgICAgICBzY29wZS5kaWFsb2dTdHlsZS5oZWlnaHQgPSBhdHRycy5oZWlnaHQ7XG5cbiAgICAgIHNjb3BlLmhpZGVNb2RhbCA9IGZ1bmN0aW9uKCl7XG4gICAgICAgICRyb290U2NvcGUuY29udGFjdFNob3cgPSBmYWxzZTtcbiAgICAgIH07XG4gICAgfSxcbiAgICB0ZW1wbGF0ZVVybDogJy9wYXJ0aWFscy9jb21tb24vbW9kYWwnXG4gIH1cblxufV0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2NvbW1vbi5uYXYnLCBbXSkuY29udHJvbGxlcignTmF2Q29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRodHRwJywgJyR3aW5kb3cnLCAnTm90aWZpZXJTZXJ2aWNlJywgZnVuY3Rpb24oJHNjb3BlLCAkaHR0cCwgJHdpbmRvdywgbm90aWZpZXIpe1xuXG4gICAgJHNjb3BlLmZvcm1EYXRhID0ge307XG5cbiAgICAkc2NvcGUuc2VuZENvbnRhY3QgPSBmdW5jdGlvbigpe1xuICAgICAgICBjb25zb2xlLmxvZygkc2NvcGUuZm9ybURhdGEpO1xuICAgICAgICAgJGh0dHAucG9zdCgnL2NvbnRhY3QtZm9ybScsICRzY29wZS5mb3JtRGF0YSlcbiAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24obWVzc2FnZSwgc3RhdHVzLCBoZWFkZXJzLCBjb25maWcpe1xuICAgICAgICAgICAgIG5vdGlmaWVyLm5vdGlmeSgnVGhhbmsgeW91IGZvciB5b3VyIG1lc3NhZ2UgJyArIG1lc3NhZ2UuZGF0YS5jb250YWN0TmFtZSk7XG4gICAgICAgICAgICAgICAgLy8kc2NvcGUuZm9ybURhdGEuJHNldFByaXN0aW5lKCk7XG4gICAgICAgICAgICAgICAgLy8kc2NvcGUuZm9ybURhdGEuJHNldFVudG91Y2hlZCgpO1xuICAgICAgICAgICB9LCBmdW5jdGlvbihtZXNzYWdlLCBzdGF0dXMsIGhlYWRlcnMsIGNvbmZpZyl7XG4gICAgICAgICAgICAgbm90aWZpZXIubm90aWZ5KCdUaGVyZSB3YXMgYW4gZXJyb3IgcHJvY2Vzc2luZyB5b3VyIHJlcXVlc3QuIFBsZWFzZSB0cnkgYWdhaW4nKTtcbiAgICAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgJHNjb3BlLnNlbGVjdGVkID0gZmFsc2U7XG4gICAgJHNjb3BlLnRvZ2dsZU1lbnUgPSBmdW5jdGlvbigpe1xuICAgICAgICAkc2NvcGUuc2VsZWN0ZWQgPSAhJHNjb3BlLnNlbGVjdGVkO1xuICAgIH1cblxuICAgICRzY29wZS5zb2NpYWxTaG93ID0gZmFsc2U7XG4gICAgaWYoJHdpbmRvdy5pbm5lcldpZHRoIDwgOTkyKXtcbiAgICAgICAgY29uc29sZS5sb2coJHdpbmRvdy5pbm5lcldpZHRoKTtcbiAgICAgICAgYW5ndWxhci5lbGVtZW50KCR3aW5kb3cpLmJpbmQoJ3Njcm9sbCcsICgpID0+IHtcbiAgICAgICAgICAgIGlmKCR3aW5kb3cuc2Nyb2xsWSA+IDE0MCl7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJHNjb3BlLnNvY2lhbFNob3cpO1xuICAgICAgICAgICAgICAgICRzY29wZS5zb2NpYWxTaG93ID0gdHJ1ZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgJHNjb3BlLnNvY2lhbFNob3cgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG59XSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnaGItaW50ZXJpb3JzJykudmFsdWUoJ25vdGlmaWM4Jywgbm90aWZpYzgpO1xuXG5hbmd1bGFyLm1vZHVsZSgnY29tbW9uLm5vdGlmaWVyJywgW10pLmZhY3RvcnkoJ05vdGlmaWVyU2VydmljZScsIFsnbm90aWZpYzgnLCBmdW5jdGlvbihub3RpZmljOCl7XG5cbiAgbm90aWZpYzgoJ2NvbmZpZ3VyZScsIHtcbiAgICBsaWZlOiAzMDAwLFxuICAgIHRoZW1lOiAnYXRvbWljJyxcbiAgICB6aW5kZXg6IDk5OTksXG4gICAgdmVydGljYWxFZGdlOiAncmlnaHQnLFxuICAgIGhvcml6b250YWxFZGdlOiAndG9wJyxcbiAgICBjbG9zZVRleHQ6ICdYJ1xuICB9KTtcblxuICByZXR1cm4ge1xuICAgIG5vdGlmeTogZnVuY3Rpb24obWVzc2FnZSl7XG4gICAgICBub3RpZmljOChtZXNzYWdlLCB7Y29sb3I6ICdwZWFyJ30pO1xuICAgICAgY29uc29sZS5sb2cobWVzc2FnZSk7XG4gICAgfSxcbiAgICBlcnJvcjogZnVuY3Rpb24obWVzc2FnZSl7XG4gICAgICBub3RpZmljOChtZXNzYWdlLCB7Y29sb3I6ICd0b21hdG8nfSk7XG4gICAgICBjb25zb2xlLmxvZyhtZXNzYWdlKTtcbiAgICB9XG4gIH1cbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdlZC5jb250cm9sbGVyJywgW10pLmNvbnRyb2xsZXIoJ0VEZXNpZ25Db250cm9sbGVyJywgWyckc2NvcGUnLCAnJGh0dHAnLCAnUUZhY3RvcnknLCAoJHNjb3BlLCAkaHR0cCwgUUZhY3RvcnkpID0+IHtcbiAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgMCk7XG5cbiAgICAkc2NvcGUucVNob3cgPSBmYWxzZTtcbiAgICAkc2NvcGUudG9nZ2xlUUZvcm0gPSAoKSA9PiB7XG4gICAgICAgICRzY29wZS5xU2hvdyA9ICEkc2NvcGUucVNob3c7XG4gICAgfVxuXG4gICAgJHNjb3BlLmNvbG9yTGlzdCA9IFtdO1xuICAgICRzY29wZS5jb2xvck5vTGlzdCA9IFtdO1xuICAgICRzY29wZS5kcmF3blRvTGlzdCA9IFtdO1xuICAgICRzY29wZS5mdXJuaXR1cmVMaXN0ID0gW107XG4gICAgJHNjb3BlLmZvcm1EYXRhPSB7fTtcbiAgICBmdW5jdGlvbiBhZGRUb0xpc3QoYW5zd2VyLCBsaXN0KXtcbiAgICAgICAgdmFyIGluZGV4ID0gbGlzdC5pbmRleE9mKGFuc3dlcik7XG4gICAgICAgIGlmKGluZGV4ID4gLTEpe1xuICAgICAgICAgICAgbGlzdC5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbGlzdC5wdXNoKGFuc3dlcik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc29sZS5sb2cobGlzdCk7XG4gICAgfVxuICAgICRzY29wZS50b2dnbGVDb2xvciA9IGZ1bmN0aW9uKGFuc3dlciwgcXVlc3Rpb24pe1xuICAgICAgICBpZihxdWVzdGlvbiA9PSAncTInKXtcbiAgICAgICAgICAgIGFkZFRvTGlzdChhbnN3ZXIsICRzY29wZS5kcmF3blRvTGlzdCk7XG4gICAgICAgIH0gZWxzZSBpZihxdWVzdGlvbiA9PSAncTMnKXtcbiAgICAgICAgICAgIGFkZFRvTGlzdChhbnN3ZXIsICRzY29wZS5mdXJuaXR1cmVMaXN0KTtcbiAgICAgICAgfSBlbHNlIGlmKHF1ZXN0aW9uID09ICdxNScpe1xuICAgICAgICAgICAgYWRkVG9MaXN0KGFuc3dlciwgJHNjb3BlLmNvbG9yTGlzdCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBhZGRUb0xpc3QoYW5zd2VyLCAkc2NvcGUuY29sb3JOb0xpc3QpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJHNjb3BlLnF1ZXN0aW9ucyA9IFFGYWN0b3J5Lmxpc3QoKTtcbiAgICAkc2NvcGUuY3VycmVudFF1ZXN0aW9uID0gMDtcblxuICAgICRzY29wZS5pc0N1cnJlbnRRSW5kZXggPSAoaW5kZXgpID0+IHtcbiAgICAgICAgcmV0dXJuICRzY29wZS5jdXJyZW50UXVlc3Rpb24gPT09IGluZGV4O1xuICAgIH1cblxuICAgICRzY29wZS5uZXh0USA9ICgpID0+IHtcbiAgICAgICAgJHNjb3BlLmN1cnJlbnRRdWVzdGlvbiA9ICgkc2NvcGUuY3VycmVudFF1ZXN0aW9uIDwgJHNjb3BlLnF1ZXN0aW9ucy5sZW5ndGggLTEpID8gKyskc2NvcGUuY3VycmVudFF1ZXN0aW9uIDogMDtcbiAgICB9XG5cbiAgICAkc2NvcGUucHJldlEgPSAoKSA9PiB7XG4gICAgICAgICRzY29wZS5jdXJyZW50UXVlc3Rpb24gPSAoJHNjb3BlLmN1cnJlbnRRdWVzdGlvbiA+IDApID8gLS0kc2NvcGUuY3VycmVudFF1ZXN0aW9uIDogJHNjb3BlLnF1ZXN0aW9ucy5sZW5ndGggLTE7XG4gICAgfVxuXG4gICAgJHNjb3BlLnN1Ym1pdFF1ZXN0aW9uYWlyZSA9ICgpID0+IHtcblxuICAgICAgICB2YXIgZGF0YSA9IHtcbiAgICAgICAgICAgIHExOiAkc2NvcGUucXVlc3Rpb25zWzBdLnJlc3BvbnNlLFxuICAgICAgICAgICAgcTI6ICRzY29wZS5kcmF3blRvTGlzdCxcbiAgICAgICAgICAgIHEzOiAkc2NvcGUuZnVybml0dXJlTGlzdCxcbiAgICAgICAgICAgIHE0OiAkc2NvcGUucXVlc3Rpb25zWzNdLnJlc3BvbnNlLFxuICAgICAgICAgICAgcTQ6ICRzY29wZS5jb2xvckxpc3QsXG4gICAgICAgICAgICBxNTogJHNjb3BlLmNvbG9yTm9MaXN0LFxuICAgICAgICAgICAgbmFtZTogJHNjb3BlLmZvcm1EYXRhLm5hbWUsXG4gICAgICAgICAgICBlbWFpbDogJHNjb3BlLmZvcm1EYXRhLmVtYWlsLFxuICAgICAgICAgICAgcGhvbmU6ICRzY29wZS5mb3JtRGF0YS5waG9uZSxcbiAgICAgICAgICAgIG5vdGU6ICRzY29wZS5mb3JtRGF0YS5ub3RlXG4gICAgICAgIH1cbiAgICAgICAgY29uc29sZS5sb2coZGF0YSk7XG5cbiAgICAgICAgJGh0dHAucG9zdCgnL3F1ZXN0aW9uYWlyZS1mb3JtJywgZGF0YSlcbiAgICAgICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpO1xuICAgICAgICAgICAgfSwgKGVycikgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdUaGVyZSB3YXMgYSBwcm9ibGVtIHN1Ym1pdHRpbmcgeW91ciBmb3JtICcgKyBlcnIpO1xuICAgICAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgJHNjb3BlLm15U3BsaXQgPSBmdW5jdGlvbihzdHJpbmcsIG5iKSB7XG4gICAgICAgIHZhciBhcnJheSA9IHN0cmluZy5zcGxpdCgnLScpO1xuICAgICAgICBpZihhcnJheVtuYisxXSA9PT0gdW5kZWZpbmVkKXtcbiAgICAgICAgICAgIHJldHVybiBhcnJheVtuYl07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gYXJyYXlbbmJdICsgJyAnICsgYXJyYXlbbmIrMV07XG4gICAgICAgIH1cbiAgICB9XG5cblxufV0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2VkJywgWydlZC5jb250cm9sbGVyJywgJ3F1ZXN0aW9uYWlyZS5mYWN0b3J5J10pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ3F1ZXN0aW9uYWlyZS5mYWN0b3J5JywgW10pLmZhY3RvcnkoJ1FGYWN0b3J5JywgKCkgPT4ge1xuXG4gICAgdmFyIHF1ZXN0aW9ucyA9IFtcbiAgICAgICAge1xuICAgICAgICAgICAgaWQ6ICdxMScsXG4gICAgICAgICAgICB0eXBlOiAncmFkaW8nLFxuICAgICAgICAgICAgcXVlc3Rpb246ICdXaGljaCBzcGFjZSB3b3VsZCB5b3UgbGlrZSBkZXNpZ25lZCBmaXJzdD8nLFxuICAgICAgICAgICAgY29sczogJ2NvbC1zbS00JyxcbiAgICAgICAgICAgIGFuc3dlcnM6IFsnTGl2aW5nJywgJ0JlZHJvb20nLCAnRGluaW5nJywgJ0JhdGgnLCAnS2l0Y2hlbicsICdPdGhlciddLFxuICAgICAgICAgICAgcmVzcG9uc2U6ICcnXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlkOiAncTInLFxuICAgICAgICAgICAgdHlwZTogJ2NoZWNrYm94JyxcbiAgICAgICAgICAgIHF1ZXN0aW9uOiAnV2hpY2ggaW1hZ2UocykgYXJlIHlvdSBkcmF3biB0bz8nLFxuICAgICAgICAgICAgY29sczogJ2NvbC1zbS00JyxcbiAgICAgICAgICAgIGltYWdlczogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2ltZzEnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdpbWcyJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnaW1nMycsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2ltZzQnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdpbWc1JyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnaW1nNicsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBpZDogJ3EzJyxcbiAgICAgICAgICAgIHR5cGU6ICdjaGVja2JveCcsXG4gICAgICAgICAgICBxdWVzdGlvbjogJ1doZXJlIHdvdWxkIHlvdSBzaG9wIGZvciBmdXJuaXR1cmU/JyxcbiAgICAgICAgICAgIGNvbHM6ICdjb2wtc20tNCcsXG4gICAgICAgICAgICBpbWFnZXM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdpa2VhJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiAncGllci0xJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnd2VzdC1lbG0nLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdjcmF0ZS1iYXJyZWwnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdjYjInLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdyZXN0b3JhdGlvbi1oYXJkd2FyZScsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBpZDogJ3E0JyxcbiAgICAgICAgICAgIHR5cGU6ICdyYWRpbycsXG4gICAgICAgICAgICBxdWVzdGlvbjogJ0hvdyBtdWNoIG1vbmV5IGFyZSB5b3UgYnVkZ2V0aW5nIGZvciB5b3VyIHByb2plY3QgYWZ0ZXIgdGhlIGRlc2lnbiBmZWUsIHdoaWNoIGJlZ2lucyBhcm91bmQgJDEsNTAwIHBlciBzcGFjZT8nLFxuICAgICAgICAgICAgY29sczogJ2NvbC1zbS00JyxcbiAgICAgICAgICAgIGFuc3dlcnM6IFsnMS0yJywgJzItNScsICc1LTEwJywgJzEwLTE1JywgJzE1LTI1JywgJzI1dXAnXSxcbiAgICAgICAgICAgIHJlc3BvbnNlOiAnJ1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBpZDogJ3E1JyxcbiAgICAgICAgICAgIHR5cGU6ICdjaGVja2JveCcsXG4gICAgICAgICAgICBxdWVzdGlvbjogJ1doYXQgY29sb3JzIHdvdWxkIHlvdSBsaWtlIHRvIHNlZSBpbiB0aGUgZGVzaWduJyxcbiAgICAgICAgICAgIGNvbHM6ICdjb2wtY29sb3InLFxuICAgICAgICAgICAgZGVzaWduOiAnY29sb3JzJyxcbiAgICAgICAgICAgIGNvbG9yczogW1xuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnQmxhY2snLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnR3JleScsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdSZWQnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnT3JhbmdlJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ1llbGxvdycsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdMaW1lJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ0dyZWVuJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ0FxdWEnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnVHVycXVvaXNlJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ1NsYXRlJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ0JsdWUnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnUHVycGxlJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ1BpbmsnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnQnJvd24nLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnQ3JlYW0nLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnV2hpdGUnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlkOiAncTYnLFxuICAgICAgICAgICAgdHlwZTogJ2NoZWNrYm94JyxcbiAgICAgICAgICAgIHF1ZXN0aW9uOiAnU2VsZWN0IHdoaWNoIGNvbG9ycyB5b3Ugd291bGQgTk9UIHdhbnQgdG8gc2VlJyxcbiAgICAgICAgICAgIGNvbHM6ICdjb2wtY29sb3InLFxuICAgICAgICAgICAgY29sb3JzOiBbXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdCbGFjaycsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdHcmV5JyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ1JlZCcsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdPcmFuZ2UnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnWWVsbG93JyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ0xpbWUnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnR3JlZW4nLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnQXF1YScsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdUdXJxdW9pc2UnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnU2xhdGUnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnQmx1ZScsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdQdXJwbGUnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnUGluaycsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdCcm93bicsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdDcmVhbScsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdXaGl0ZScsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgaWQ6ICdxNycsXG4gICAgICAgICAgICB0eXBlOiAndGV4dCdcbiAgICAgICAgfVxuICAgIF07XG5cbiAgICByZXR1cm4ge1xuICAgICAgbGlzdDogZnVuY3Rpb24oKXtcbiAgICAgICAgcmV0dXJuIHF1ZXN0aW9ucztcbiAgICAgIH1cbiAgICB9XG5cbn0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2Jhbm5lci5kaXInLCBbXSkuZGlyZWN0aXZlKCdwYWdlQmFubmVyJywgKCkgPT4ge1xuICByZXR1cm4ge1xuICAgIHJlc3RyaWN0OiAnRScsXG4gICAgdGVtcGxhdGVVcmw6ICcvcGFydGlhbHMvaG9tZS9iYW5uZXInLFxuICAgIHJlcGxhY2U6IHRydWUsXG4gICAgc2NvcGU6IHsgYmdJbWFnZTogJ0AnIH1cbiAgfTtcbn0pO1xuIiwiXG5hbmd1bGFyLm1vZHVsZSgnYm94LmhlaWdodC5kaXInLCBbXSkuZGlyZWN0aXZlKCdib3hIZWlnaHQnLCBbJyR3aW5kb3cnLCAnJHRpbWVvdXQnLCBmdW5jdGlvbiAoJHdpbmRvdywgJHRpbWVvdXQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICByZXN0cmljdDogJ0EnLFxuICAgICAgICBsaW5rOiAoc2NvcGUsIGVsZW0sIGF0dHJzKSA9PiB7XG4gICAgICAgICAgJHRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgc2NvcGUubmV3SGVpZ2h0ID0gZWxlbVswXS5vZmZzZXRIZWlnaHQ7XG4gICAgICAgICAgfSwgNTAwKTtcbiAgICAgICAgICBhbmd1bGFyLmVsZW1lbnQoJHdpbmRvdykuYmluZCgncmVzaXplJywgKCkgPT4ge1xuICAgICAgICAgICAgc2NvcGUuJGFwcGx5KCgpID0+IHtcbiAgICAgICAgICAgICAgc2NvcGUubmV3SGVpZ2h0ID0gZWxlbVswXS5vZmZzZXRIZWlnaHQ7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH07XG59XSk7XG5cbmFuZ3VsYXIubW9kdWxlKCd0YXJnZXQuaGVpZ2h0LmRpcicsIFtdKS5kaXJlY3RpdmUoJ3RhcmdldEhlaWdodCcsIGZ1bmN0aW9uKCl7XG4gIHJldHVybiB7XG4gICAgcmVzdHJpY3Q6ICdBJyxcbiAgICBsaW5rOiAoc2NvcGUsIGVsZW0sIGF0dHJzKSA9PiB7XG4gICAgICBzY29wZS4kd2F0Y2goJ25ld0hlaWdodCcsIChuZXdWLCBvbGRWKSA9PiB7XG4gICAgICAgIC8vY29uc29sZS5sb2coJ29sZCB2YWx1ZSAnICsgb2xkViwgJ25ldyB2YWx1ZSAnICsgbmV3Vik7XG4gICAgICAgIGVsZW0uYXR0cignc3R5bGUnLCAnaGVpZ2h0OiAnICsgbmV3ViArICdweCcpO1xuICAgICAgfSlcbiAgICB9XG4gIH1cbn0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2hvbWUuY29udHJvbGxlcicsIFtdKS5jb250cm9sbGVyKCdIb21lQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJ1NlcnZpY2VGYWN0b3J5JywgZnVuY3Rpb24oJHNjb3BlLCBTZXJ2aWNlRmFjdG9yeSl7XG5cbiAgJHNjb3BlLnNlcnZpY2VzID0gU2VydmljZUZhY3RvcnkubGlzdCgpO1xuXG4gICRzY29wZS53ZWxjb21lID0ge1xuICAgICAgdmlzaWJsZTogZmFsc2UsXG4gICAgICBvZmZzZXQ6IC0yMDBcbiAgfTtcblxuICAkc2NvcGUub3B0aW9ucyA9IHtcbiAgICAgICBvcmlnaW46ICdsZWZ0JyxcbiAgICAgICBkaXN0YW5jZTogJzE1MHB4JyxcbiAgICAgICBlYXNpbmc6ICdlYXNlLWluLW91dCcsXG4gICAgICAgZGVsYXk6IDMwLFxuICAgICAgIHNjYWxlOiAxLFxuICAgICAgIGR1cmF0aW9uOiAxMDAwLFxuICAgICAgIC8vIHJlc2V0OiB0cnVlLFxuICAgIC8vICAgIGFmdGVyUmV2ZWFsOiBmdW5jdGlvbiAoZG9tRWwpIHtcbiAgICAvLyAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJnYWxsZXJ5XCIpLnN0eWxlLnZpc2liaWxpdHkgPSBcInZpc2libGVcIjtcbiAgICAvLyAgICB9LFxuICAgICAgIHNlcXVlbmNlOiB7XG4gICAgICAgICAgc2VsZWN0b3I6ICcuY29sLXNtLTUnLFxuICAgICAgICAgIGludGVydmFsOiAzMDBcbiAgICAgICAgfVxuICAgIH07XG5cbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdob21lJywgWydob21lLmNvbnRyb2xsZXInLCAnYm94LmhlaWdodC5kaXInLCAndGFyZ2V0LmhlaWdodC5kaXInLCAnYmFubmVyLmRpciddKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdzZXJ2aWNlLmNvbnRyb2xsZXInLCBbXSkuY29udHJvbGxlcignU2VydmljZUNvbnRyb2xsZXInLCBbJyRzY29wZScsICckc3RhdGVQYXJhbXMnLCAnU2VydmljZUZhY3RvcnknLCAoJHNjb3BlLCAkc3RhdGVQYXJhbXMsIFNlcnZpY2VGYWN0b3J5KSA9PiB7XG4gICAgJHNjb3BlLnNlcnZpY2VzID0gU2VydmljZUZhY3RvcnkubGlzdCgpO1xufV0pO1xuXG5hbmd1bGFyLm1vZHVsZSgnc2VydmljZS5kZXRhaWwuY29udHJvbGxlcicsIFtdKS5jb250cm9sbGVyKCdTZWxlY3RlZFNlcnZpY2VDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJHN0YXRlUGFyYW1zJywgJ1NlcnZpY2VGYWN0b3J5JywgKCRzY29wZSwgJHN0YXRlUGFyYW1zLCBTZXJ2aWNlRmFjdG9yeSkgPT4ge1xuICAkc2NvcGUuc2VsZWN0ZWRTZXJ2aWNlID0gU2VydmljZUZhY3RvcnkuZmluZCgkc3RhdGVQYXJhbXMuc2x1Zyk7XG59XSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnc2VydmljZS5mYWN0b3J5JywgW10pLmZhY3RvcnkoJ1NlcnZpY2VGYWN0b3J5JywgKCkgPT4ge1xuICB2YXIgc2VydmljZXMgPSBbXG4gICAgLy8ge1xuICAgIC8vICAgbmFtZTogJ2UtRGVzaWduJyxcbiAgICAvLyAgIGxvZ286ICdpbWcvaWNvbnMvY29uc3RydWN0aW9uLnBuZydcbiAgICAvLyB9LFxuICAgIHtcbiAgICAgIG5hbWU6ICdTcGFjZSBQbGFubmluZycsXG4gICAgICBzbHVnOiAnc3BhY2UtcGxhbm5pbmcnLFxuICAgICAgbG9nbzogJ2ltZy9pY29ucy9tZWFzdXJlbWVudC5zdmcnLFxuICAgICAgYmFubmVyOiAnaW1nL3NlcnZpY2VzL2Zsb29yLXBsYW4ucG5nJyxcbiAgICAgIHN1YkhlYWQ6ICdjcmVhdGluZyBpbmRpdmlkdWFsaXplZCBwcm9kdWN0cycsXG4gICAgICBkZXNjOiBcIldoYXQgaXMgc3BhY2UgcGxhbm5pbmc/IERvIHlvdSBmZWVsIGxpa2UgeW91ciBzcGFjZSBpcyBub3QgZnVuY3Rpb25hbD8gV291bGQgeW91IGxpa2UgYXNzaXN0YW5jZSBhcnJhbmdpbmcgdGhlIGxheW91dCBvZiB5b3VyIHNwYWNlPyBXZSBhcmUgaGVyZSB0byBoZWxwISBXZSB3aWxsIG9yZ2FuaXplIHlvdXIgZXhpc3RpbmcgZnVybml0dXJlIGluIGEgd2F5IHRoYXQgY3JlYXRlcyBhIG1vcmUgbmF0dXJhbCBhbmQgZnVuY3Rpb25hbCBmbG93IHdpdGggYSBjdXN0b21pemVkIGZsb29yIHBsYW4gdGhhdCB5b3Ugd2lsbCBsb3ZlLlwiLFxuICAgICAgaW1nMTogJ2ltZy9zZXJ2aWNlcy9idWJibGUxLnBuZycsXG4gICAgICBpbWcyOiAnaW1nL3NlcnZpY2VzL2Zsb29ycGxhbi5wbmcnXG4gIH0sXG4gICAge1xuICAgICAgbmFtZTogJ0JyYW5kaW5nJyxcbiAgICAgIHNsdWc6ICdicmFuZGluZycsXG4gICAgICBsb2dvOiAnaW1nL2ljb25zL2Zpbmdlci1wcmludC5zdmcnLFxuICAgICAgYmFubmVyOiAnaW1nL3NlcnZpY2VzL2JyYW5kaW5nLmpwZycsXG4gICAgICBzdWJIZWFkOiAnSGVscGluZyB5b3VyIGN1c3RvbWVycyBnZXQgdG8ga25vdyB5b3UnLFxuICAgICAgZGVzYzogXCJJdCBpcyBpbXBvcnRhbnQgdG8gYmUgYWJsZSB0byBzdGFuZCBvdXQuICBCeSBjcmVhdGluZyBicmFuZGluZyB0b29scyB0aGF0IHBvdGVudGlhbCBjbGllbnRzIG9yIGFyY2hpdGVjdHMgY2FuIGdldCB0aGVpciBoYW5kcyBvbiwgd2Ugd2lsbCBoZWxwIG1vdmUgeW91IHRvIHRoZSBmcm9udCBvZiB0aGUgbGluZS4gV2UgY2FuIGRldmVsb3AgYnVzaW5lc3MgdG9vbHMgdGhhdCByZWZsZWN0IHlvdXIgdmlzaW9uIGFuZCByZWFjaCB5b3VyIHNwZWNpZmljIGF1ZGllbmNlLCBzdWNoIGFzIHBvcnRmb2xpbyBib29rbGV0cyBhbmQgYnVzaW5lc3MgY2FyZHMuXCIsXG4gICAgICBpbWcxOiAnaW1nL3NlcnZpY2VzL2JyYW5kaW5nMS5wbmcnLFxuICAgICAgaW1nMjogJ2ltZy9zZXJ2aWNlcy9icmFuZGluZzIucG5nJ1xuICAgIH0sXG4gICAge1xuICAgICAgbmFtZTogJ0ludGVyaW9yIERlc2lnbicsXG4gICAgICBzbHVnOiAnaW50ZXJpb3ItZGVzaWduJyxcbiAgICAgIGxvZ286ICdpbWcvaWNvbnMvaG9tZS5zdmcnLFxuICAgICAgYmFubmVyOiAnaW1nL3NlcnZpY2VzL21hc3Rlci1ici5wbmcnLFxuICAgICAgc3ViSGVhZDogJ2NyZWF0aW5nIGluZGl2aWR1YWxpemVkIHByb2R1Y3RzJyxcbiAgICAgIGRlc2M6IFwiTG9jYWwgdG8gdGhlIFNlYXR0bGUgYXJlYT8gV2UgYXJlIGhlcmUgdG8gYXNzaXN0IHlvdSBpbiB5b3VyIGRlc2lnbiBuZWVkcy4gV2Ugd2FudCB5b3UgdG8gZmVlbCBhdCBob21lIGluIHlvdXIgaG9tZS4gV2XigJlkIGxvdmUgdG8gZ2V0IHRvIGtub3cgeW91IHRvIGRldmVsb3AgYSBzdHlsZSB0aGF0IGlzIGFsbCB5b3VyIG93bi4gQSBkZXNpZ24gcGFja2FnZSB3aXRoIGNvbmNlcHRzIGFuZCBhIGZsb29yIHBsYW4gd2lsbCBiZSBjcmVhdGVkIGFsbCB0aGUgd2F5IHRocm91Z2ggaW5zdGFsbGF0aW9uLiBDb250YWN0IHVzIGZvciBhIGZyZWUgY29uc3VsdGF0aW9uIVwiLFxuICAgICAgaW1nMTogJ2ltZy9zZXJ2aWNlcy9raXRjaGVuLnBuZycsXG4gICAgICBpbWcyOiAnaW1nL3NlcnZpY2VzL2ludGVyaW9yLWRlc2lnbi5wbmcnXG4gICAgfSxcbiAgICB7XG4gICAgICBuYW1lOiAnRnVybml0dXJlIERlc2lnbicsXG4gICAgICBzbHVnOiAnZnVybml0dXJlJyxcbiAgICAgIGxvZ286ICdpbWcvaWNvbnMvY2hhaXIxLnN2ZycsXG4gICAgICBiYW5uZXI6ICdpbWcvc2VydmljZXMvYmVuY2gucG5nJyxcbiAgICAgIHN1YkhlYWQ6ICdjcmVhdGluZyBpbmRpdmlkdWFsaXplZCBwcm9kdWN0cycsXG4gICAgICBkZXNjOiBcIldlIGxvdmUgcHJvZHVjaW5nIGluZHVzdHJpYWwsIHJ1c3RpYyBhbmQgc3VzdGFpbmFibGUgcGllY2VzIGhlcmUgaW4gU2VhdHRsZS4gVGhlc2UgY2FuIGJlIGJyYW5kIG5ldyBwaWVjZXMgb3IgcmVwdXJwb3NlZCBmdXJuaXR1cmUuIElmIHlvdSBoYXZlIGFuIGhlaXJsb29tIHBpZWNlIHRoYXQgeW91IGNhbm5vdCBiYXJlIHRvIHRocm93IGF3YXksIHdlIG1heSBiZSBhYmxlIHRvIGdpdmUgaXQgYSBuZXcgbG9vay4gIFdlIHdvdWxkIGxvdmUgdG8gYmUgcGFydCBvZiB0aGUgcHJvY2VzcyB0byBjcmVhdGUgdGhhdCBwZXJmZWN0IHBpZWNlIGZvciB5b3UuXCIsXG4gICAgICBpbWcxOiAnaW1nL3NlcnZpY2VzL2JlbmNoLXBhaW50LnBuZycsXG4gICAgICBpbWcyOiAnaW1nL3NlcnZpY2VzL3RhYmxlLXdvcmsucG5nJ1xuICAgIH1cbiAgXTtcblxuXG4gIHJldHVybiB7XG4gICAgbGlzdDogZnVuY3Rpb24oKXtcbiAgICAgIHJldHVybiBzZXJ2aWNlcztcbiAgICB9LFxuICAgIGZpbmQ6IGZ1bmN0aW9uKHNsdWcpe1xuICAgICAgICByZXR1cm4gc2VydmljZXMuZmluZChmdW5jdGlvbihzZXJ2aWNlKSB7XG4gICAgICAgICAgICByZXR1cm4gc2VydmljZS5zbHVnID09IHNsdWc7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgfVxufSlcbiIsImFuZ3VsYXIubW9kdWxlKCdzZXJ2aWNlcycsIFsnc2VydmljZS5jb250cm9sbGVyJywgJ3NlcnZpY2UuZGV0YWlsLmNvbnRyb2xsZXInLCAnc2VydmljZS5mYWN0b3J5J10pO1xuIl19
