'use strict';

var app = angular.module('hb-interiors', ['home', 'services', 'common', 'ed', 'about.controller', 'ui.router', 'ngScrollReveal']);

app.config(['$locationProvider', '$stateProvider', '$urlRouterProvider', function ($locationProvider, $stateProvider, $urlRouterProvider) {

    $urlRouterProvider.otherwise('/');
    $locationProvider.html5Mode(true);

    $stateProvider.state('home', {
        url: '/',
        templateUrl: '/partials/home/home',
        controller: 'HomeController'
    }).state('services', {
        url: '/services',
        templateUrl: '/partials/services/services',
        controller: 'ServiceController'
    }).state('e-design', {
        url: '/e-design',
        templateUrl: '/partials/ed/ed',
        controller: 'EDesignController'
    }).state('about', {
        url: '/about',
        templateUrl: '/partials/about/about',
        controller: 'AboutController'
    }).state('services.detail', {
        url: '/:slug',
        templateUrl: '/partials/services/services-detail',
        controller: 'SelectedServiceController'
    });
}]);

app.run(['$rootScope', '$location', function ($rootScope, $location) {

    $rootScope.toggleContact = function () {
        $rootScope.contactShow = !$rootScope.contactShow;
    };
    $rootScope.qShow = false;
    $rootScope.toggleQForm = function () {
        $rootScope.qShow = !$rootScope.qShow;
    };

    $rootScope.$on("$stateChangeSuccess", function (event, currentRoute, previousRoute) {
        window.scrollTo(0, 0);
    });
}]);
'use strict';

angular.module('about.controller', []).controller('AboutController', ['$scope', function ($scope) {}]);
'use strict';

angular.module('common', ['common.modal', 'common.inview', 'common.meta', 'common.nav', 'common.notifier']);
'use strict';

angular.module('common.inview', []).directive('inView', ['$window', function ($window) {
    return {
        restrict: 'A',
        scope: {
            viewObj: '='
        },
        link: function link(scope, element, attrs) {
            angular.element($window).bind('scroll', function () {
                var $el = element[0],
                    pos = $el.getBoundingClientRect();
                //check to see if active class, if not, start animations with js and define selectors
                if (pos.top + scope.viewObj.offset < $window.scrollY) {
                    scope.viewObj.visible = true;
                    //console.log('in view :' + scope.viewObj.visible);
                }
                // else {
                //     scope.viewObj.visible = false;
                // }
                scope.$apply();
            });
        }

    };
}]);
'use strict';

angular.module('common.meta', []).factory('Meta', function () {
  var _title = 'Hayley Bagwell Interior Design, Seattle, WA';
  var desc = 'Super DERRR';
  return {
    title: function title() {
      return _title;
    },
    setTitle: function setTitle(newTitle) {
      _title = newTitle;
    },
    description: function description() {
      return desc;
    },
    setDesc: function setDesc(newDesc) {
      desc = newDesc;
    }
  };
}).controller('MetaController', ['$scope', 'Meta', function ($scope, Meta) {
  $scope.Meta = Meta;
  $scope.metaDesc = Meta;
}]);
'use strict';

angular.module('common.modal', []).directive('globalModal', ['$rootScope', function ($rootScope) {

  return {
    restrict: 'E',
    scope: {
      show: '='
    },
    replace: true,
    transclude: true,
    link: function link(scope, element, attrs) {
      scope.dialogStyle = {};
      if (attrs.width) scope.dialogStyle.width = attrs.width;
      if (attrs.height) scope.dialogStyle.height = attrs.height;

      scope.hideModal = function () {
        $rootScope.contactShow = false;
        $rootScope.qShow = false;
        scope.show = false;
      };
    },
    templateUrl: '/partials/common/modal'
  };
}]);
'use strict';

angular.module('common.nav', []).controller('NavController', ['$scope', '$rootScope', '$http', '$window', 'NotifierService', function ($scope, $rootScope, $http, $window, notifier) {

    $scope.formData = {};

    $scope.sendContact = function () {
        $http.post('/contact-form', $scope.formData).then(function (message, status, headers, config) {
            $rootScope.toggleContact();
            console.log(message);
            notifier.notify('Thank you for your message ' + message.name);
            $scope.formData = {};
        }, function (error, status, headers, config) {
            console.log(error);
        });
    };

    $scope.selected = false;
    $scope.toggleMenu = function () {
        if ($window.innerWidth < 992) {
            $scope.selected = !$scope.selected;
        }
    };

    $scope.socialShow = false;
    if ($window.innerWidth < 992) {
        angular.element($window).bind('scroll', function () {
            if ($window.scrollY > 140) {
                console.log($scope.socialShow);
                $scope.socialShow = true;
            } else {
                $scope.socialShow = false;
            }
        });
    }
}]);
'use strict';

angular.module('hb-interiors').value('notific8', notific8);

angular.module('common.notifier', []).factory('NotifierService', ['notific8', function (notific8) {

  notific8('configure', {
    life: 3000,
    theme: 'atomic',
    zindex: 9999,
    verticalEdge: 'right',
    horizontalEdge: 'top',
    closeText: 'X'
  });

  return {
    notify: function notify(message) {
      notific8(message, { color: 'pear' });
      console.log(message);
    },
    error: function error(message) {
      notific8(message, { color: 'tomato' });
      console.log(message);
    }
  };
}]);
'use strict';

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

angular.module('ed.controller', []).controller('EDesignController', ['$scope', '$rootScope', '$http', '$window', 'QFactory', 'NotifierService', function ($scope, $rootScope, $http, $window, QFactory, notifier) {
    window.scrollTo(0, 0);

    $scope.screenW = $window.innerWidth;

    $scope.colorList = [];
    $scope.colorNoList = [];
    $scope.drawnToList = [];
    $scope.furnitureList = [];
    $scope.formData = {};
    function addToList(answer, list) {
        var index = list.indexOf(answer);
        if (index > -1) {
            list.splice(index, 1);
        } else {
            list.push(answer);
        }
    }
    $scope.toggleColor = function (answer, question) {
        if (question == 'q2') {
            addToList(answer, $scope.drawnToList);
        } else if (question == 'q3') {
            addToList(answer, $scope.furnitureList);
        } else if (question == 'q5') {
            addToList(answer, $scope.colorList);
        } else {
            addToList(answer, $scope.colorNoList);
        }
    };

    $scope.select = function (e) {
        var box = angular.element(e.target);
    };

    var qForm = document.getElementById('qFormTitle');
    $scope.questions = QFactory.list();
    $scope.currentQuestion = 0;

    $scope.isCurrentQIndex = function (index) {
        return $scope.currentQuestion === index;
    };

    $scope.nextQ = function () {
        qForm.scrollIntoView(true);
        console.log('scrolled');
        $scope.currentQuestion = $scope.currentQuestion < $scope.questions.length - 1 ? ++$scope.currentQuestion : 0;
    };

    $scope.prevQ = function () {
        qForm.scrollIntoView(true);
        $scope.currentQuestion = $scope.currentQuestion > 0 ? --$scope.currentQuestion : $scope.questions.length - 1;
    };

    $scope.submitQuestionaire = function () {
        var _data;

        var data = (_data = {
            q1: $scope.questions[0].response,
            q2: $scope.drawnToList,
            q3: $scope.furnitureList,
            q4: $scope.questions[3].response
        }, _defineProperty(_data, 'q4', $scope.colorList), _defineProperty(_data, 'q5', $scope.colorNoList), _defineProperty(_data, 'name', $scope.formData.name), _defineProperty(_data, 'email', $scope.formData.email), _defineProperty(_data, 'phone', $scope.formData.phone), _defineProperty(_data, 'note', $scope.formData.note), _data);

        $http.post('/questionaire-form', data).then(function (response) {
            console.log(response.data);
            $scope.currentQuestion = 0;
            $rootScope.qShow = false;
            notifier.notify('Thank you for your message ' + response.data.name);
        }, function (err) {
            notifier.error('There was an error processing your request. Please try again');
            console.log('There was a problem submitting your form ' + err);
        });
    };

    $scope.mySplit = function (string, i) {
        var array = string.split('-');
        if (array[i + 1] === undefined) {
            return array[i];
        } else if (array[i + 2] === undefined) {
            return array[i] + ' ' + array[i + 1];
        } else {
            return array[i] + ' ' + array[i + 1] + ' ' + array[i + 2];
        }
    };
}]);
'use strict';

angular.module('ed', ['ed.controller', 'questionaire.factory']);
'use strict';

angular.module('questionaire.factory', []).factory('QFactory', function () {

    var questions = [{
        id: 'q1',
        type: 'radio',
        question: 'Which space would you like designed first?',
        cols: 'col-xs-4',
        answers: ['Living', 'Bedroom', 'Dining', 'Bath', 'Kitchen', 'Other'],
        response: ''
    }, {
        id: 'q2',
        type: 'checkbox',
        question: 'Which image(s) are you drawn to?',
        cols: 'col-xs-6 col-sm-4',
        images: [{
            name: 'img1',
            selected: false
        }, {
            name: 'img2',
            selected: false
        }, {
            name: 'img3',
            selected: false
        }, {
            name: 'img4',
            selected: false
        }, {
            name: 'img5',
            selected: false
        }, {
            name: 'img6',
            selected: false
        }]
    }, {
        id: 'q3',
        type: 'checkbox',
        question: 'Where would you shop for furniture?',
        cols: 'col-xs-6 col-sm-4',
        images: [{
            name: 'ikea',
            selected: false
        }, {
            name: 'pier-1',
            selected: false
        }, {
            name: 'west-elm',
            selected: false
        }, {
            name: 'crate-&-barrel',
            selected: false
        }, {
            name: 'cb2',
            selected: false
        }, {
            name: 'restoration-hardware',
            selected: false
        }]
    }, {
        id: 'q4',
        type: 'radio',
        question: 'How much money are you budgeting for your project after the design fee, which begins around $1,500 per space?',
        cols: 'col-xs-6 col-sm-4',
        answers: ['1-2', '2-5', '5-10', '10-15', '15-25', '25up'],
        response: ''
    }, {
        id: 'q5',
        type: 'checkbox',
        question: 'What colors would you like to see in the design',
        cols: 'col-color',
        design: 'colors',
        colors: [{ name: 'Black',
            selected: false
        }, { name: 'Grey',
            selected: false
        }, { name: 'Red',
            selected: false
        }, { name: 'Orange',
            selected: false
        }, { name: 'Yellow',
            selected: false
        }, { name: 'Lime',
            selected: false
        }, { name: 'Green',
            selected: false
        }, { name: 'Aqua',
            selected: false
        }, { name: 'Turquoise',
            selected: false
        }, { name: 'Slate',
            selected: false
        }, { name: 'Blue',
            selected: false
        }, { name: 'Purple',
            selected: false
        }, { name: 'Pink',
            selected: false
        }, { name: 'Brown',
            selected: false
        }, { name: 'Cream',
            selected: false
        }, { name: 'White',
            selected: false
        }]
    }, {
        id: 'q6',
        type: 'checkbox',
        question: 'Select which colors you would NOT want to see',
        cols: 'col-color',
        colors: [{ name: 'Black',
            selected: false
        }, { name: 'Grey',
            selected: false
        }, { name: 'Red',
            selected: false
        }, { name: 'Orange',
            selected: false
        }, { name: 'Yellow',
            selected: false
        }, { name: 'Lime',
            selected: false
        }, { name: 'Green',
            selected: false
        }, { name: 'Aqua',
            selected: false
        }, { name: 'Turquoise',
            selected: false
        }, { name: 'Slate',
            selected: false
        }, { name: 'Blue',
            selected: false
        }, { name: 'Purple',
            selected: false
        }, { name: 'Pink',
            selected: false
        }, { name: 'Brown',
            selected: false
        }, { name: 'Cream',
            selected: false
        }, { name: 'White',
            selected: false
        }]
    }, {
        id: 'q7',
        type: 'text'
    }];

    return {
        list: function list() {
            return questions;
        }
    };
});
'use strict';

angular.module('banner.dir', []).directive('pageBanner', function () {
  return {
    restrict: 'E',
    templateUrl: '/partials/home/banner',
    replace: true,
    scope: { bgImage: '@' }
  };
});
'use strict';

angular.module('box.height.dir', []).directive('boxHeight', ['$window', '$timeout', function ($window, $timeout) {
  return {
    restrict: 'A',
    link: function link(scope, elem, attrs) {
      $timeout(function () {
        scope.newHeight = elem[0].offsetHeight;
      }, 1000);
      angular.element($window).bind('resize', function () {
        scope.$apply(function () {
          scope.newHeight = elem[0].offsetHeight;
        });
      });
    }
  };
}]);

angular.module('target.height.dir', []).directive('targetHeight', function () {
  return {
    restrict: 'A',
    link: function link(scope, elem, attrs) {
      scope.$watch('newHeight', function (newV, oldV) {
        //console.log('old value ' + oldV, 'new value ' + newV);
        elem.attr('style', 'height: ' + newV + 'px');
      });
    }
  };
});
'use strict';

angular.module('home.controller', []).controller('HomeController', ['$scope', '$window', 'ServiceFactory', function ($scope, $window, ServiceFactory) {

    $scope.screenW = $window.innerWidth;

    $scope.services = ServiceFactory.list();

    $scope.welcome = {
        visible: false,
        offset: -200
    };

    $scope.options = {
        origin: 'left',
        distance: '150px',
        easing: 'ease-in-out',
        delay: 30,
        scale: 1,
        duration: 1000,
        // reset: true,
        //    afterReveal: function (domEl) {
        //        document.getElementById("gallery").style.visibility = "visible";
        //    },
        sequence: {
            selector: '.col-md-5',
            interval: 300
        }
    };
}]);
'use strict';

angular.module('home', ['home.controller', 'box.height.dir', 'target.height.dir', 'banner.dir']);
'use strict';

angular.module('service.controller', []).controller('ServiceController', ['$scope', '$stateParams', 'ServiceFactory', function ($scope, $stateParams, ServiceFactory) {
    $scope.services = ServiceFactory.list();
}]);

angular.module('service.detail.controller', []).controller('SelectedServiceController', ['$scope', '$stateParams', 'ServiceFactory', function ($scope, $stateParams, ServiceFactory) {
    $scope.selectedService = ServiceFactory.find($stateParams.slug);
    $scope.branding = false;
    if ($scope.selectedService.name === 'Branding') {
        $scope.branding = true;
    } else {
        $scope.branding = false;
    }
    $scope.book1Show = false;
    // console.log($scope.selectedService.name);
}]);
'use strict';

angular.module('service.factory', []).factory('ServiceFactory', function () {
  var services = [{
    name: 'Interior Design',
    slug: 'interior-design',
    logo: 'img/icons/home.svg',
    banner: 'img/services/master-br.png',
    subHead: 'amplifying client spaces',
    desc: "Local to the Seattle area? We are here to assist you in your design needs. We want you to feel at home in your home. We’d love to get to know you to develop a style that is all your own. A design package with concepts and a floor plan will be created all the way through installation. Contact us for a free consultation!",
    img1: 'img/services/kitchen.png',
    img2: 'img/services/interior-design.png'
  }, {
    name: 'Branding',
    slug: 'branding',
    logo: 'img/icons/finger-print.svg',
    banner: 'img/services/branding.jpg',
    subHead: 'Helping your customers get to know you',
    desc: "For businesses, it is important to be able to stand out. By creating branding tools that potential clients or architects can get their hands on, we will help move you to the front of the line. We can develop business tools that reflect your vision and reach your specific audience, such as portfolio booklets and business cards.",
    img1: 'img/services/branding1.png',
    img2: 'img/services/branding2.png'
  }, {
    name: 'Space Planning',
    slug: 'space-planning',
    logo: 'img/icons/measurement.svg',
    banner: 'img/services/floor-plan.png',
    subHead: 'making your space functional',
    desc: "What is space planning? It is creating a highly functional furniture arrangement. Would you like assistance arranging the layout of your space? We are here to help! We will organize your existing or new furniture in a way that creates a more natural and functional flow with a customized floor plan that you will love.",
    img1: 'img/services/bubble1.png',
    img2: 'img/services/floorplan.png'
  }, {
    name: 'Furniture Design',
    slug: 'furniture',
    logo: 'img/icons/chair1.svg',
    banner: 'img/services/bench.png',
    subHead: 'creating individualized products',
    desc: "We love producing industrial, rustic and sustainable pieces here in Seattle. These can be brand new pieces or repurposed furniture. If you have an heirloom piece that you cannot bear to throw away, we may be able to give it a new look.  We would love to be part of the process to create that perfect piece for you.",
    img1: 'img/services/bench-paint.png',
    img2: 'img/services/table-work.png'
  }];

  return {
    list: function list() {
      return services;
    },
    find: function find(slug) {
      return services.find(function (service) {
        return service.slug == slug;
      });
    }
  };
});
'use strict';

angular.module('services', ['service.controller', 'service.detail.controller', 'service.factory']);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImFib3V0L2Fib3V0LmNvbnRyb2xsZXIuanMiLCJjb21tb24vY29tbW9uLm1vZHVsZS5qcyIsImNvbW1vbi9pbnZpZXcuZGlyZWN0aXZlLmpzIiwiY29tbW9uL21ldGEuY29udHJvbGxlci5qcyIsImNvbW1vbi9tb2RhbC5kaXJlY3RpdmUuanMiLCJjb21tb24vbmF2LmNvbnRyb2xsZXIuanMiLCJjb21tb24vbm90aWZpZXIuc2VydmljZS5qcyIsImVkL2VEZXNpZ24uY29udHJvbGxlci5qcyIsImVkL2VkLm1vZHVsZS5qcyIsImVkL3F1ZXN0aW9uYWlyZS5mYWN0b3J5LmpzIiwiaG9tZS9iYW5uZXIuZGlyZWN0aXZlLmpzIiwiaG9tZS9ib3guZGlyZWN0aXZlLmpzIiwiaG9tZS9ob21lLmNvbnRyb2xsZXIuanMiLCJob21lL2hvbWUubW9kdWxlLmpzIiwic2VydmljZXMvc2VydmljZS5jb250cm9sbGVyLmpzIiwic2VydmljZXMvc2VydmljZS5mYWN0b3J5LmpzIiwic2VydmljZXMvc2VydmljZS5tb2R1bGUuanMiXSwibmFtZXMiOlsiYXBwIiwiYW5ndWxhciIsIm1vZHVsZSIsImNvbmZpZyIsIiRsb2NhdGlvblByb3ZpZGVyIiwiJHN0YXRlUHJvdmlkZXIiLCIkdXJsUm91dGVyUHJvdmlkZXIiLCJvdGhlcndpc2UiLCJodG1sNU1vZGUiLCJzdGF0ZSIsInVybCIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlciIsInJ1biIsIiRyb290U2NvcGUiLCIkbG9jYXRpb24iLCJ0b2dnbGVDb250YWN0IiwiY29udGFjdFNob3ciLCJxU2hvdyIsInRvZ2dsZVFGb3JtIiwiJG9uIiwiZXZlbnQiLCJjdXJyZW50Um91dGUiLCJwcmV2aW91c1JvdXRlIiwid2luZG93Iiwic2Nyb2xsVG8iLCIkc2NvcGUiLCJkaXJlY3RpdmUiLCIkd2luZG93IiwicmVzdHJpY3QiLCJzY29wZSIsInZpZXdPYmoiLCJsaW5rIiwiZWxlbWVudCIsImF0dHJzIiwiYmluZCIsIiRlbCIsInBvcyIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInRvcCIsIm9mZnNldCIsInNjcm9sbFkiLCJ2aXNpYmxlIiwiJGFwcGx5IiwiZmFjdG9yeSIsInRpdGxlIiwiZGVzYyIsInNldFRpdGxlIiwibmV3VGl0bGUiLCJkZXNjcmlwdGlvbiIsInNldERlc2MiLCJuZXdEZXNjIiwiTWV0YSIsIm1ldGFEZXNjIiwic2hvdyIsInJlcGxhY2UiLCJ0cmFuc2NsdWRlIiwiZGlhbG9nU3R5bGUiLCJ3aWR0aCIsImhlaWdodCIsImhpZGVNb2RhbCIsIiRodHRwIiwibm90aWZpZXIiLCJmb3JtRGF0YSIsInNlbmRDb250YWN0IiwicG9zdCIsInRoZW4iLCJtZXNzYWdlIiwic3RhdHVzIiwiaGVhZGVycyIsImNvbnNvbGUiLCJsb2ciLCJub3RpZnkiLCJuYW1lIiwiZXJyb3IiLCJzZWxlY3RlZCIsInRvZ2dsZU1lbnUiLCJpbm5lcldpZHRoIiwic29jaWFsU2hvdyIsInZhbHVlIiwibm90aWZpYzgiLCJsaWZlIiwidGhlbWUiLCJ6aW5kZXgiLCJ2ZXJ0aWNhbEVkZ2UiLCJob3Jpem9udGFsRWRnZSIsImNsb3NlVGV4dCIsImNvbG9yIiwiUUZhY3RvcnkiLCJzY3JlZW5XIiwiY29sb3JMaXN0IiwiY29sb3JOb0xpc3QiLCJkcmF3blRvTGlzdCIsImZ1cm5pdHVyZUxpc3QiLCJhZGRUb0xpc3QiLCJhbnN3ZXIiLCJsaXN0IiwiaW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIiwicHVzaCIsInRvZ2dsZUNvbG9yIiwicXVlc3Rpb24iLCJzZWxlY3QiLCJlIiwiYm94IiwidGFyZ2V0IiwicUZvcm0iLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwicXVlc3Rpb25zIiwiY3VycmVudFF1ZXN0aW9uIiwiaXNDdXJyZW50UUluZGV4IiwibmV4dFEiLCJzY3JvbGxJbnRvVmlldyIsImxlbmd0aCIsInByZXZRIiwic3VibWl0UXVlc3Rpb25haXJlIiwiZGF0YSIsInExIiwicmVzcG9uc2UiLCJxMiIsInEzIiwicTQiLCJlbWFpbCIsInBob25lIiwibm90ZSIsImVyciIsIm15U3BsaXQiLCJzdHJpbmciLCJpIiwiYXJyYXkiLCJzcGxpdCIsInVuZGVmaW5lZCIsImlkIiwidHlwZSIsImNvbHMiLCJhbnN3ZXJzIiwiaW1hZ2VzIiwiZGVzaWduIiwiY29sb3JzIiwiYmdJbWFnZSIsIiR0aW1lb3V0IiwiZWxlbSIsIm5ld0hlaWdodCIsIm9mZnNldEhlaWdodCIsIiR3YXRjaCIsIm5ld1YiLCJvbGRWIiwiYXR0ciIsIlNlcnZpY2VGYWN0b3J5Iiwic2VydmljZXMiLCJ3ZWxjb21lIiwib3B0aW9ucyIsIm9yaWdpbiIsImRpc3RhbmNlIiwiZWFzaW5nIiwiZGVsYXkiLCJzY2FsZSIsImR1cmF0aW9uIiwic2VxdWVuY2UiLCJzZWxlY3RvciIsImludGVydmFsIiwiJHN0YXRlUGFyYW1zIiwic2VsZWN0ZWRTZXJ2aWNlIiwiZmluZCIsInNsdWciLCJicmFuZGluZyIsImJvb2sxU2hvdyIsImxvZ28iLCJiYW5uZXIiLCJzdWJIZWFkIiwiaW1nMSIsImltZzIiLCJzZXJ2aWNlIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE1BQU1DLFFBQVFDLE1BQVIsQ0FBZSxjQUFmLEVBQStCLENBQUMsTUFBRCxFQUFTLFVBQVQsRUFBcUIsUUFBckIsRUFBK0IsSUFBL0IsRUFBcUMsa0JBQXJDLEVBQXlELFdBQXpELEVBQXNFLGdCQUF0RSxDQUEvQixDQUFaOztBQUVBRixJQUFJRyxNQUFKLENBQVcsQ0FBQyxtQkFBRCxFQUFzQixnQkFBdEIsRUFBd0Msb0JBQXhDLEVBQThELFVBQUNDLGlCQUFELEVBQW9CQyxjQUFwQixFQUFvQ0Msa0JBQXBDLEVBQTJEOztBQUVoSUEsdUJBQW1CQyxTQUFuQixDQUE2QixHQUE3QjtBQUNBSCxzQkFBa0JJLFNBQWxCLENBQTRCLElBQTVCOztBQUVBSCxtQkFDR0ksS0FESCxDQUNTLE1BRFQsRUFDaUI7QUFDWEMsYUFBSyxHQURNO0FBRVhDLHFCQUFhLHFCQUZGO0FBR1hDLG9CQUFZO0FBSEQsS0FEakIs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U0MsSUFBVCxFQUFjO0FBQ2hCLGFBQU9mLFNBQVNjLElBQVQsQ0FBYyxVQUFTUyxPQUFULEVBQWtCO0FBQ25DLGVBQU9BLFFBQVFSLElBQVIsSUFBZ0JBLElBQXZCO0FBQ0gsT0FGTSxDQUFQO0FBR0g7QUFSSSxHQUFQO0FBVUQsQ0F2REQ7OztBQ0FBckssUUFBUUMsTUFBUixDQUFlLFVBQWYsRUFBMkIsQ0FBQyxvQkFBRCxFQUF1QiwyQkFBdkIsRUFBb0QsaUJBQXBELENBQTNCIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBhcHAgPSBhbmd1bGFyLm1vZHVsZSgnaGItaW50ZXJpb3JzJywgWydob21lJywgJ3NlcnZpY2VzJywgJ2NvbW1vbicsICdlZCcsICdhYm91dC5jb250cm9sbGVyJywgJ3VpLnJvdXRlcicsICduZ1Njcm9sbFJldmVhbCddKTtcblxuYXBwLmNvbmZpZyhbJyRsb2NhdGlvblByb3ZpZGVyJywgJyRzdGF0ZVByb3ZpZGVyJywgJyR1cmxSb3V0ZXJQcm92aWRlcicsICgkbG9jYXRpb25Qcm92aWRlciwgJHN0YXRlUHJvdmlkZXIsICR1cmxSb3V0ZXJQcm92aWRlcikgPT4ge1xuXG4gICAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZSgnLycpO1xuICAgICRsb2NhdGlvblByb3ZpZGVyLmh0bWw1TW9kZSh0cnVlKTtcblxuICAgICRzdGF0ZVByb3ZpZGVyXG4gICAgICAuc3RhdGUoJ2hvbWUnLCB7XG4gICAgICAgICAgdXJsOiAnLycsXG4gICAgICAgICAgdGVtcGxhdGVVcmw6ICcvcGFydGlhbHMvaG9tZS9ob21lJyxcbiAgICAgICAgICBjb250cm9sbGVyOiAnSG9tZUNvbnRyb2xsZXInXG4gICAgICB9KVxuICAgICAgLnN0YXRlKCdzZXJ2aWNlcycsIHtcbiAgICAgICAgICB1cmw6ICcvc2VydmljZXMnLFxuICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3BhcnRpYWxzL3NlcnZpY2VzL3NlcnZpY2VzJyxcbiAgICAgICAgICBjb250cm9sbGVyOiAnU2VydmljZUNvbnRyb2xsZXInXG4gICAgICB9KVxuICAgICAgLnN0YXRlKCdlLWRlc2lnbicsIHtcbiAgICAgICAgICB1cmw6ICcvZS1kZXNpZ24nLFxuICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3BhcnRpYWxzL2VkL2VkJyxcbiAgICAgICAgICBjb250cm9sbGVyOiAnRURlc2lnbkNvbnRyb2xsZXInXG4gICAgICB9KVxuICAgICAgLnN0YXRlKCdhYm91dCcsIHtcbiAgICAgICAgICB1cmw6ICcvYWJvdXQnLFxuICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3BhcnRpYWxzL2Fib3V0L2Fib3V0JyxcbiAgICAgICAgICBjb250cm9sbGVyOiAnQWJvdXRDb250cm9sbGVyJ1xuICAgICAgfSlcbiAgICAgIC5zdGF0ZSgnc2VydmljZXMuZGV0YWlsJywge1xuICAgICAgICAgIHVybDogJy86c2x1ZycsXG4gICAgICAgICAgdGVtcGxhdGVVcmw6ICcvcGFydGlhbHMvc2VydmljZXMvc2VydmljZXMtZGV0YWlsJyxcbiAgICAgICAgICBjb250cm9sbGVyOiAnU2VsZWN0ZWRTZXJ2aWNlQ29udHJvbGxlcidcbiAgICAgIH0pO1xufV0pO1xuXG5cbmFwcC5ydW4oWyckcm9vdFNjb3BlJywgJyRsb2NhdGlvbicsIGZ1bmN0aW9uKCRyb290U2NvcGUsICRsb2NhdGlvbil7XG5cbiAgJHJvb3RTY29wZS50b2dnbGVDb250YWN0ID0gZnVuY3Rpb24oKXtcbiAgICAgICRyb290U2NvcGUuY29udGFjdFNob3cgPSAhJHJvb3RTY29wZS5jb250YWN0U2hvdztcbiAgfVxuICAkcm9vdFNjb3BlLnFTaG93ID0gZmFsc2U7XG4gICRyb290U2NvcGUudG9nZ2xlUUZvcm0gPSAoKSA9PiB7XG4gICAgICAkcm9vdFNjb3BlLnFTaG93ID0gISRyb290U2NvcGUucVNob3c7XG4gIH1cblxuICAkcm9vdFNjb3BlLiRvbihcIiRzdGF0ZUNoYW5nZVN1Y2Nlc3NcIiwgZnVuY3Rpb24gKGV2ZW50LCBjdXJyZW50Um91dGUsIHByZXZpb3VzUm91dGUpIHtcbiAgICAgIHdpbmRvdy5zY3JvbGxUbygwLDApO1xuICB9KTtcblxufV0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2Fib3V0LmNvbnRyb2xsZXInLCBbXSkuY29udHJvbGxlcignQWJvdXRDb250cm9sbGVyJywgWyckc2NvcGUnLCAoJHNjb3BlKSA9PiB7XG5cbiBcblxufV0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2NvbW1vbicsIFsnY29tbW9uLm1vZGFsJywgJ2NvbW1vbi5pbnZpZXcnLCAnY29tbW9uLm1ldGEnLCAnY29tbW9uLm5hdicsICdjb21tb24ubm90aWZpZXInXSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnY29tbW9uLmludmlldycsIFtdKS5kaXJlY3RpdmUoJ2luVmlldycsIFsnJHdpbmRvdycsICgkd2luZG93KSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcmVzdHJpY3Q6ICdBJyxcbiAgICAgICAgc2NvcGU6IHtcbiAgICAgICAgICAgIHZpZXdPYmo6ICc9J1xuICAgICAgICB9LFxuICAgICAgICBsaW5rOiAoc2NvcGUsIGVsZW1lbnQsIGF0dHJzKSA9PiB7XG4gICAgICAgICAgICBhbmd1bGFyLmVsZW1lbnQoJHdpbmRvdykuYmluZCgnc2Nyb2xsJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHZhciAkZWwgPSBlbGVtZW50WzBdLFxuICAgICAgICAgICAgICAgICAgICBwb3MgPSAkZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgIC8vY2hlY2sgdG8gc2VlIGlmIGFjdGl2ZSBjbGFzcywgaWYgbm90LCBzdGFydCBhbmltYXRpb25zIHdpdGgganMgYW5kIGRlZmluZSBzZWxlY3RvcnNcbiAgICAgICAgICAgICAgICBpZihwb3MudG9wICsgc2NvcGUudmlld09iai5vZmZzZXQgPCAkd2luZG93LnNjcm9sbFkpIHtcbiAgICAgICAgICAgICAgICAgICAgc2NvcGUudmlld09iai52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZygnaW4gdmlldyA6JyArIHNjb3BlLnZpZXdPYmoudmlzaWJsZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vICAgICBzY29wZS52aWV3T2JqLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAvLyB9XG4gICAgICAgICAgICAgICAgc2NvcGUuJGFwcGx5KCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgfTtcbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdjb21tb24ubWV0YScsIFtdKS5mYWN0b3J5KCdNZXRhJywgZnVuY3Rpb24oKXtcbiAgdmFyIHRpdGxlID0gJ0hheWxleSBCYWd3ZWxsIEludGVyaW9yIERlc2lnbiwgU2VhdHRsZSwgV0EnO1xuICB2YXIgZGVzYyA9ICdTdXBlciBERVJSUic7XG4gIHJldHVybiB7XG4gICAgdGl0bGU6IGZ1bmN0aW9uKCkge3JldHVybiB0aXRsZTt9LFxuICAgIHNldFRpdGxlOiBmdW5jdGlvbihuZXdUaXRsZSkgeyB0aXRsZSA9IG5ld1RpdGxlIH0sXG4gICAgZGVzY3JpcHRpb246IGZ1bmN0aW9uKCkgeyByZXR1cm4gZGVzYzt9LFxuICAgIHNldERlc2MgOiBmdW5jdGlvbihuZXdEZXNjKSB7IGRlc2MgPSBuZXdEZXNjfVxuICB9XG59KVxuLmNvbnRyb2xsZXIoJ01ldGFDb250cm9sbGVyJywgWyckc2NvcGUnLCAnTWV0YScsIGZ1bmN0aW9uKCRzY29wZSwgTWV0YSl7XG4gICRzY29wZS5NZXRhID0gTWV0YTtcbiAgJHNjb3BlLm1ldGFEZXNjID0gTWV0YTtcbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdjb21tb24ubW9kYWwnLCBbXSkuZGlyZWN0aXZlKCdnbG9iYWxNb2RhbCcsIFsnJHJvb3RTY29wZScsIGZ1bmN0aW9uKCRyb290U2NvcGUpe1xuXG4gIHJldHVybntcbiAgICByZXN0cmljdDogJ0UnLFxuICAgIHNjb3BlOiB7XG4gICAgICBzaG93OiAnPSdcbiAgICB9LFxuICAgIHJlcGxhY2U6IHRydWUsXG4gICAgdHJhbnNjbHVkZTogdHJ1ZSxcbiAgICBsaW5rIDogZnVuY3Rpb24oc2NvcGUsIGVsZW1lbnQsIGF0dHJzKXtcbiAgICAgIHNjb3BlLmRpYWxvZ1N0eWxlID0ge307XG4gICAgICBpZihhdHRycy53aWR0aClcbiAgICAgICAgc2NvcGUuZGlhbG9nU3R5bGUud2lkdGggPSBhdHRycy53aWR0aDtcbiAgICAgIGlmIChhdHRycy5oZWlnaHQpXG4gICAgICAgIHNjb3BlLmRpYWxvZ1N0eWxlLmhlaWdodCA9IGF0dHJzLmhlaWdodDtcblxuICAgICAgc2NvcGUuaGlkZU1vZGFsID0gZnVuY3Rpb24oKXtcbiAgICAgICAgJHJvb3RTY29wZS5jb250YWN0U2hvdyA9IGZhbHNlO1xuICAgICAgICAkcm9vdFNjb3BlLnFTaG93ID0gZmFsc2U7XG4gICAgICAgIHNjb3BlLnNob3cgPSBmYWxzZTtcbiAgICAgIH07XG4gICAgfSxcbiAgICB0ZW1wbGF0ZVVybDogJy9wYXJ0aWFscy9jb21tb24vbW9kYWwnXG4gIH1cblxufV0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2NvbW1vbi5uYXYnLCBbXSkuY29udHJvbGxlcignTmF2Q29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRyb290U2NvcGUnLCAnJGh0dHAnLCAnJHdpbmRvdycsICdOb3RpZmllclNlcnZpY2UnLCBmdW5jdGlvbigkc2NvcGUsICRyb290U2NvcGUsICRodHRwLCAkd2luZG93LCBub3RpZmllcil7XG5cbiAgICAkc2NvcGUuZm9ybURhdGEgPSB7fTtcblxuICAgICRzY29wZS5zZW5kQ29udGFjdCA9IGZ1bmN0aW9uKCl7XG4gICAgICAgICAkaHR0cC5wb3N0KCcvY29udGFjdC1mb3JtJywgJHNjb3BlLmZvcm1EYXRhKVxuICAgICAgICAgICAudGhlbihmdW5jdGlvbihtZXNzYWdlLCBzdGF0dXMsIGhlYWRlcnMsIGNvbmZpZyl7XG4gICAgICAgICAgICAgICAkcm9vdFNjb3BlLnRvZ2dsZUNvbnRhY3QoKTtcbiAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKG1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgbm90aWZpZXIubm90aWZ5KCdUaGFuayB5b3UgZm9yIHlvdXIgbWVzc2FnZSAnICsgbWVzc2FnZS5uYW1lKTtcbiAgICAgICAgICAgICAgICRzY29wZS5mb3JtRGF0YSA9IHt9O1xuICAgICAgICAgICB9LCBmdW5jdGlvbihlcnJvciwgc3RhdHVzLCBoZWFkZXJzLCBjb25maWcpe1xuICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAkc2NvcGUuc2VsZWN0ZWQgPSBmYWxzZTtcbiAgICAkc2NvcGUudG9nZ2xlTWVudSA9IGZ1bmN0aW9uKCl7XG4gICAgICAgIGlmKCR3aW5kb3cuaW5uZXJXaWR0aCA8IDk5Mil7XG4gICAgICAgICAgICAkc2NvcGUuc2VsZWN0ZWQgPSAhJHNjb3BlLnNlbGVjdGVkO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJHNjb3BlLnNvY2lhbFNob3cgPSBmYWxzZTtcbiAgICBpZigkd2luZG93LmlubmVyV2lkdGggPCA5OTIpe1xuICAgICAgICBhbmd1bGFyLmVsZW1lbnQoJHdpbmRvdykuYmluZCgnc2Nyb2xsJywgKCkgPT4ge1xuICAgICAgICAgICAgaWYoJHdpbmRvdy5zY3JvbGxZID4gMTQwKXtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygkc2NvcGUuc29jaWFsU2hvdyk7XG4gICAgICAgICAgICAgICAgJHNjb3BlLnNvY2lhbFNob3cgPSB0cnVlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAkc2NvcGUuc29jaWFsU2hvdyA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdoYi1pbnRlcmlvcnMnKS52YWx1ZSgnbm90aWZpYzgnLCBub3RpZmljOCk7XG5cbmFuZ3VsYXIubW9kdWxlKCdjb21tb24ubm90aWZpZXInLCBbXSkuZmFjdG9yeSgnTm90aWZpZXJTZXJ2aWNlJywgWydub3RpZmljOCcsIGZ1bmN0aW9uKG5vdGlmaWM4KXtcblxuICBub3RpZmljOCgnY29uZmlndXJlJywge1xuICAgIGxpZmU6IDMwMDAsXG4gICAgdGhlbWU6ICdhdG9taWMnLFxuICAgIHppbmRleDogOTk5OSxcbiAgICB2ZXJ0aWNhbEVkZ2U6ICdyaWdodCcsXG4gICAgaG9yaXpvbnRhbEVkZ2U6ICd0b3AnLFxuICAgIGNsb3NlVGV4dDogJ1gnXG4gIH0pO1xuXG4gIHJldHVybiB7XG4gICAgbm90aWZ5OiBmdW5jdGlvbihtZXNzYWdlKXtcbiAgICAgIG5vdGlmaWM4KG1lc3NhZ2UsIHtjb2xvcjogJ3BlYXInfSk7XG4gICAgICBjb25zb2xlLmxvZyhtZXNzYWdlKTtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbihtZXNzYWdlKXtcbiAgICAgIG5vdGlmaWM4KG1lc3NhZ2UsIHtjb2xvcjogJ3RvbWF0byd9KTtcbiAgICAgIGNvbnNvbGUubG9nKG1lc3NhZ2UpO1xuICAgIH1cbiAgfVxufV0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2VkLmNvbnRyb2xsZXInLCBbXSkuY29udHJvbGxlcignRURlc2lnbkNvbnRyb2xsZXInLCBbJyRzY29wZScsICckcm9vdFNjb3BlJywgJyRodHRwJywgJyR3aW5kb3cnLCAnUUZhY3RvcnknLCAnTm90aWZpZXJTZXJ2aWNlJywgKCRzY29wZSwgJHJvb3RTY29wZSwgJGh0dHAsICR3aW5kb3csIFFGYWN0b3J5LCBub3RpZmllcikgPT4ge1xuICAgIHdpbmRvdy5zY3JvbGxUbygwLCAwKTtcblxuICAgICRzY29wZS5zY3JlZW5XID0gJHdpbmRvdy5pbm5lcldpZHRoO1xuXG4gICAgJHNjb3BlLmNvbG9yTGlzdCA9IFtdO1xuICAgICRzY29wZS5jb2xvck5vTGlzdCA9IFtdO1xuICAgICRzY29wZS5kcmF3blRvTGlzdCA9IFtdO1xuICAgICRzY29wZS5mdXJuaXR1cmVMaXN0ID0gW107XG4gICAgJHNjb3BlLmZvcm1EYXRhPSB7fTtcbiAgICBmdW5jdGlvbiBhZGRUb0xpc3QoYW5zd2VyLCBsaXN0KXtcbiAgICAgICAgdmFyIGluZGV4ID0gbGlzdC5pbmRleE9mKGFuc3dlcik7XG4gICAgICAgIGlmKGluZGV4ID4gLTEpe1xuICAgICAgICAgICAgbGlzdC5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbGlzdC5wdXNoKGFuc3dlcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgJHNjb3BlLnRvZ2dsZUNvbG9yID0gZnVuY3Rpb24oYW5zd2VyLCBxdWVzdGlvbil7XG4gICAgICAgIGlmKHF1ZXN0aW9uID09ICdxMicpe1xuICAgICAgICAgICAgYWRkVG9MaXN0KGFuc3dlciwgJHNjb3BlLmRyYXduVG9MaXN0KTtcbiAgICAgICAgfSBlbHNlIGlmKHF1ZXN0aW9uID09ICdxMycpe1xuICAgICAgICAgICAgYWRkVG9MaXN0KGFuc3dlciwgJHNjb3BlLmZ1cm5pdHVyZUxpc3QpO1xuICAgICAgICB9IGVsc2UgaWYocXVlc3Rpb24gPT0gJ3E1Jyl7XG4gICAgICAgICAgICBhZGRUb0xpc3QoYW5zd2VyLCAkc2NvcGUuY29sb3JMaXN0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGFkZFRvTGlzdChhbnN3ZXIsICRzY29wZS5jb2xvck5vTGlzdCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAkc2NvcGUuc2VsZWN0ID0gZnVuY3Rpb24oZSl7XG4gICAgICAgIHZhciBib3ggPSBhbmd1bGFyLmVsZW1lbnQoZS50YXJnZXQpO1xuICAgIH1cblxuICAgIHZhciBxRm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdxRm9ybVRpdGxlJyk7XG4gICAgJHNjb3BlLnF1ZXN0aW9ucyA9IFFGYWN0b3J5Lmxpc3QoKTtcbiAgICAkc2NvcGUuY3VycmVudFF1ZXN0aW9uID0gMDtcblxuICAgICRzY29wZS5pc0N1cnJlbnRRSW5kZXggPSAoaW5kZXgpID0+IHtcbiAgICAgICAgcmV0dXJuICRzY29wZS5jdXJyZW50UXVlc3Rpb24gPT09IGluZGV4O1xuICAgIH1cblxuICAgICRzY29wZS5uZXh0USA9ICgpID0+IHtcbiAgICAgICAgcUZvcm0uc2Nyb2xsSW50b1ZpZXcodHJ1ZSk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdzY3JvbGxlZCcpO1xuICAgICAgICAkc2NvcGUuY3VycmVudFF1ZXN0aW9uID0gKCRzY29wZS5jdXJyZW50UXVlc3Rpb24gPCAkc2NvcGUucXVlc3Rpb25zLmxlbmd0aCAtMSkgPyArKyRzY29wZS5jdXJyZW50UXVlc3Rpb24gOiAwO1xuICAgIH1cblxuICAgICRzY29wZS5wcmV2USA9ICgpID0+IHtcbiAgICAgICAgcUZvcm0uc2Nyb2xsSW50b1ZpZXcodHJ1ZSk7XG4gICAgICAgICRzY29wZS5jdXJyZW50UXVlc3Rpb24gPSAoJHNjb3BlLmN1cnJlbnRRdWVzdGlvbiA+IDApID8gLS0kc2NvcGUuY3VycmVudFF1ZXN0aW9uIDogJHNjb3BlLnF1ZXN0aW9ucy5sZW5ndGggLTE7XG4gICAgfVxuXG4gICAgJHNjb3BlLnN1Ym1pdFF1ZXN0aW9uYWlyZSA9ICgpID0+IHtcblxuICAgICAgICB2YXIgZGF0YSA9IHtcbiAgICAgICAgICAgIHExOiAkc2NvcGUucXVlc3Rpb25zWzBdLnJlc3BvbnNlLFxuICAgICAgICAgICAgcTI6ICRzY29wZS5kcmF3blRvTGlzdCxcbiAgICAgICAgICAgIHEzOiAkc2NvcGUuZnVybml0dXJlTGlzdCxcbiAgICAgICAgICAgIHE0OiAkc2NvcGUucXVlc3Rpb25zWzNdLnJlc3BvbnNlLFxuICAgICAgICAgICAgcTQ6ICRzY29wZS5jb2xvckxpc3QsXG4gICAgICAgICAgICBxNTogJHNjb3BlLmNvbG9yTm9MaXN0LFxuICAgICAgICAgICAgbmFtZTogJHNjb3BlLmZvcm1EYXRhLm5hbWUsXG4gICAgICAgICAgICBlbWFpbDogJHNjb3BlLmZvcm1EYXRhLmVtYWlsLFxuICAgICAgICAgICAgcGhvbmU6ICRzY29wZS5mb3JtRGF0YS5waG9uZSxcbiAgICAgICAgICAgIG5vdGU6ICRzY29wZS5mb3JtRGF0YS5ub3RlXG4gICAgICAgIH1cblxuICAgICAgICAkaHR0cC5wb3N0KCcvcXVlc3Rpb25haXJlLWZvcm0nLCBkYXRhKVxuICAgICAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7XG4gICAgICAgICAgICAgICAgJHNjb3BlLmN1cnJlbnRRdWVzdGlvbiA9IDA7XG4gICAgICAgICAgICAgICAgJHJvb3RTY29wZS5xU2hvdyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIG5vdGlmaWVyLm5vdGlmeSgnVGhhbmsgeW91IGZvciB5b3VyIG1lc3NhZ2UgJyArIHJlc3BvbnNlLmRhdGEubmFtZSk7XG4gICAgICAgICAgICB9LCAoZXJyKSA9PiB7XG4gICAgICAgICAgICAgICAgbm90aWZpZXIuZXJyb3IoJ1RoZXJlIHdhcyBhbiBlcnJvciBwcm9jZXNzaW5nIHlvdXIgcmVxdWVzdC4gUGxlYXNlIHRyeSBhZ2FpbicpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdUaGVyZSB3YXMgYSBwcm9ibGVtIHN1Ym1pdHRpbmcgeW91ciBmb3JtICcgKyBlcnIpO1xuICAgICAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgJHNjb3BlLm15U3BsaXQgPSBmdW5jdGlvbihzdHJpbmcsIGkpIHtcbiAgICAgICAgdmFyIGFycmF5ID0gc3RyaW5nLnNwbGl0KCctJyk7XG4gICAgICAgIGlmKGFycmF5W2krMV0gPT09IHVuZGVmaW5lZCl7XG4gICAgICAgICAgICByZXR1cm4gYXJyYXlbaV07XG4gICAgICAgIH0gZWxzZSBpZihhcnJheVtpKzJdID09PSB1bmRlZmluZWQpe1xuICAgICAgICAgICAgcmV0dXJuIGFycmF5W2ldICsgJyAnICsgYXJyYXlbaSsxXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBhcnJheVtpXSArICcgJyArIGFycmF5W2krMV0gKyAnICcgKyBhcnJheVtpKzJdO1xuICAgICAgICB9XG4gICAgfVxuXG5cbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdlZCcsIFsnZWQuY29udHJvbGxlcicsICdxdWVzdGlvbmFpcmUuZmFjdG9yeSddKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdxdWVzdGlvbmFpcmUuZmFjdG9yeScsIFtdKS5mYWN0b3J5KCdRRmFjdG9yeScsICgpID0+IHtcblxuICAgIHZhciBxdWVzdGlvbnMgPSBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlkOiAncTEnLFxuICAgICAgICAgICAgdHlwZTogJ3JhZGlvJyxcbiAgICAgICAgICAgIHF1ZXN0aW9uOiAnV2hpY2ggc3BhY2Ugd291bGQgeW91IGxpa2UgZGVzaWduZWQgZmlyc3Q/JyxcbiAgICAgICAgICAgIGNvbHM6ICdjb2wteHMtNCcsXG4gICAgICAgICAgICBhbnN3ZXJzOiBbJ0xpdmluZycsICdCZWRyb29tJywgJ0RpbmluZycsICdCYXRoJywgJ0tpdGNoZW4nLCAnT3RoZXInXSxcbiAgICAgICAgICAgIHJlc3BvbnNlOiAnJ1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBpZDogJ3EyJyxcbiAgICAgICAgICAgIHR5cGU6ICdjaGVja2JveCcsXG4gICAgICAgICAgICBxdWVzdGlvbjogJ1doaWNoIGltYWdlKHMpIGFyZSB5b3UgZHJhd24gdG8/JyxcbiAgICAgICAgICAgIGNvbHM6ICdjb2wteHMtNiBjb2wtc20tNCcsXG4gICAgICAgICAgICBpbWFnZXM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdpbWcxJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnaW1nMicsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2ltZzMnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdpbWc0JyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnaW1nNScsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2ltZzYnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgaWQ6ICdxMycsXG4gICAgICAgICAgICB0eXBlOiAnY2hlY2tib3gnLFxuICAgICAgICAgICAgcXVlc3Rpb246ICdXaGVyZSB3b3VsZCB5b3Ugc2hvcCBmb3IgZnVybml0dXJlPycsXG4gICAgICAgICAgICBjb2xzOiAnY29sLXhzLTYgY29sLXNtLTQnLFxuICAgICAgICAgICAgaW1hZ2VzOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnaWtlYScsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3BpZXItMScsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3dlc3QtZWxtJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnY3JhdGUtJi1iYXJyZWwnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdjYjInLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdyZXN0b3JhdGlvbi1oYXJkd2FyZScsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBpZDogJ3E0JyxcbiAgICAgICAgICAgIHR5cGU6ICdyYWRpbycsXG4gICAgICAgICAgICBxdWVzdGlvbjogJ0hvdyBtdWNoIG1vbmV5IGFyZSB5b3UgYnVkZ2V0aW5nIGZvciB5b3VyIHByb2plY3QgYWZ0ZXIgdGhlIGRlc2lnbiBmZWUsIHdoaWNoIGJlZ2lucyBhcm91bmQgJDEsNTAwIHBlciBzcGFjZT8nLFxuICAgICAgICAgICAgY29sczogJ2NvbC14cy02IGNvbC1zbS00JyxcbiAgICAgICAgICAgIGFuc3dlcnM6IFsnMS0yJywgJzItNScsICc1LTEwJywgJzEwLTE1JywgJzE1LTI1JywgJzI1dXAnXSxcbiAgICAgICAgICAgIHJlc3BvbnNlOiAnJ1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBpZDogJ3E1JyxcbiAgICAgICAgICAgIHR5cGU6ICdjaGVja2JveCcsXG4gICAgICAgICAgICBxdWVzdGlvbjogJ1doYXQgY29sb3JzIHdvdWxkIHlvdSBsaWtlIHRvIHNlZSBpbiB0aGUgZGVzaWduJyxcbiAgICAgICAgICAgIGNvbHM6ICdjb2wtY29sb3InLFxuICAgICAgICAgICAgZGVzaWduOiAnY29sb3JzJyxcbiAgICAgICAgICAgIGNvbG9yczogW1xuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnQmxhY2snLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnR3JleScsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdSZWQnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnT3JhbmdlJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ1llbGxvdycsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdMaW1lJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ0dyZWVuJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ0FxdWEnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnVHVycXVvaXNlJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ1NsYXRlJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ0JsdWUnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnUHVycGxlJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ1BpbmsnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnQnJvd24nLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnQ3JlYW0nLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnV2hpdGUnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlkOiAncTYnLFxuICAgICAgICAgICAgdHlwZTogJ2NoZWNrYm94JyxcbiAgICAgICAgICAgIHF1ZXN0aW9uOiAnU2VsZWN0IHdoaWNoIGNvbG9ycyB5b3Ugd291bGQgTk9UIHdhbnQgdG8gc2VlJyxcbiAgICAgICAgICAgIGNvbHM6ICdjb2wtY29sb3InLFxuICAgICAgICAgICAgY29sb3JzOiBbXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdCbGFjaycsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdHcmV5JyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ1JlZCcsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdPcmFuZ2UnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnWWVsbG93JyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ0xpbWUnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnR3JlZW4nLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnQXF1YScsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdUdXJxdW9pc2UnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnU2xhdGUnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnQmx1ZScsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdQdXJwbGUnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnUGluaycsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdCcm93bicsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdDcmVhbScsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdXaGl0ZScsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgaWQ6ICdxNycsXG4gICAgICAgICAgICB0eXBlOiAndGV4dCdcbiAgICAgICAgfVxuICAgIF07XG5cbiAgICByZXR1cm4ge1xuICAgICAgbGlzdDogZnVuY3Rpb24oKXtcbiAgICAgICAgcmV0dXJuIHF1ZXN0aW9ucztcbiAgICAgIH1cbiAgICB9XG5cbn0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2Jhbm5lci5kaXInLCBbXSkuZGlyZWN0aXZlKCdwYWdlQmFubmVyJywgKCkgPT4ge1xuICByZXR1cm4ge1xuICAgIHJlc3RyaWN0OiAnRScsXG4gICAgdGVtcGxhdGVVcmw6ICcvcGFydGlhbHMvaG9tZS9iYW5uZXInLFxuICAgIHJlcGxhY2U6IHRydWUsXG4gICAgc2NvcGU6IHsgYmdJbWFnZTogJ0AnIH1cbiAgfTtcbn0pO1xuIiwiXG5hbmd1bGFyLm1vZHVsZSgnYm94LmhlaWdodC5kaXInLCBbXSkuZGlyZWN0aXZlKCdib3hIZWlnaHQnLCBbJyR3aW5kb3cnLCAnJHRpbWVvdXQnLCBmdW5jdGlvbiAoJHdpbmRvdywgJHRpbWVvdXQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICByZXN0cmljdDogJ0EnLFxuICAgICAgICBsaW5rOiAoc2NvcGUsIGVsZW0sIGF0dHJzKSA9PiB7XG4gICAgICAgICAgJHRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgc2NvcGUubmV3SGVpZ2h0ID0gZWxlbVswXS5vZmZzZXRIZWlnaHQ7XG4gICAgICAgICAgfSwgMTAwMCk7XG4gICAgICAgICAgYW5ndWxhci5lbGVtZW50KCR3aW5kb3cpLmJpbmQoJ3Jlc2l6ZScsICgpID0+IHtcbiAgICAgICAgICAgIHNjb3BlLiRhcHBseSgoKSA9PiB7XG4gICAgICAgICAgICAgIHNjb3BlLm5ld0hlaWdodCA9IGVsZW1bMF0ub2Zmc2V0SGVpZ2h0O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xufV0pO1xuXG5hbmd1bGFyLm1vZHVsZSgndGFyZ2V0LmhlaWdodC5kaXInLCBbXSkuZGlyZWN0aXZlKCd0YXJnZXRIZWlnaHQnLCBmdW5jdGlvbigpe1xuICByZXR1cm4ge1xuICAgIHJlc3RyaWN0OiAnQScsXG4gICAgbGluazogKHNjb3BlLCBlbGVtLCBhdHRycykgPT4ge1xuICAgICAgc2NvcGUuJHdhdGNoKCduZXdIZWlnaHQnLCAobmV3Viwgb2xkVikgPT4ge1xuICAgICAgICAvL2NvbnNvbGUubG9nKCdvbGQgdmFsdWUgJyArIG9sZFYsICduZXcgdmFsdWUgJyArIG5ld1YpO1xuICAgICAgICBlbGVtLmF0dHIoJ3N0eWxlJywgJ2hlaWdodDogJyArIG5ld1YgKyAncHgnKTtcbiAgICAgIH0pXG4gICAgfVxuICB9XG59KTtcbiIsImFuZ3VsYXIubW9kdWxlKCdob21lLmNvbnRyb2xsZXInLCBbXSkuY29udHJvbGxlcignSG9tZUNvbnRyb2xsZXInLCBbJyRzY29wZScsICckd2luZG93JywgJ1NlcnZpY2VGYWN0b3J5JywgZnVuY3Rpb24oJHNjb3BlLCAkd2luZG93LCBTZXJ2aWNlRmFjdG9yeSl7XG5cbiAgJHNjb3BlLnNjcmVlblcgPSAkd2luZG93LmlubmVyV2lkdGg7XG5cbiAgJHNjb3BlLnNlcnZpY2VzID0gU2VydmljZUZhY3RvcnkubGlzdCgpO1xuXG4gICRzY29wZS53ZWxjb21lID0ge1xuICAgICAgdmlzaWJsZTogZmFsc2UsXG4gICAgICBvZmZzZXQ6IC0yMDBcbiAgfTtcblxuICAkc2NvcGUub3B0aW9ucyA9IHtcbiAgICAgICBvcmlnaW46ICdsZWZ0JyxcbiAgICAgICBkaXN0YW5jZTogJzE1MHB4JyxcbiAgICAgICBlYXNpbmc6ICdlYXNlLWluLW91dCcsXG4gICAgICAgZGVsYXk6IDMwLFxuICAgICAgIHNjYWxlOiAxLFxuICAgICAgIGR1cmF0aW9uOiAxMDAwLFxuICAgICAgIC8vIHJlc2V0OiB0cnVlLFxuICAgIC8vICAgIGFmdGVyUmV2ZWFsOiBmdW5jdGlvbiAoZG9tRWwpIHtcbiAgICAvLyAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJnYWxsZXJ5XCIpLnN0eWxlLnZpc2liaWxpdHkgPSBcInZpc2libGVcIjtcbiAgICAvLyAgICB9LFxuICAgICAgIHNlcXVlbmNlOiB7XG4gICAgICAgICAgc2VsZWN0b3I6ICcuY29sLW1kLTUnLFxuICAgICAgICAgIGludGVydmFsOiAzMDBcbiAgICAgICAgfVxuICAgIH07XG5cbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdob21lJywgWydob21lLmNvbnRyb2xsZXInLCAnYm94LmhlaWdodC5kaXInLCAndGFyZ2V0LmhlaWdodC5kaXInLCAnYmFubmVyLmRpciddKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdzZXJ2aWNlLmNvbnRyb2xsZXInLCBbXSkuY29udHJvbGxlcignU2VydmljZUNvbnRyb2xsZXInLCBbJyRzY29wZScsICckc3RhdGVQYXJhbXMnLCAnU2VydmljZUZhY3RvcnknLCAoJHNjb3BlLCAkc3RhdGVQYXJhbXMsIFNlcnZpY2VGYWN0b3J5KSA9PiB7XG4gICAgJHNjb3BlLnNlcnZpY2VzID0gU2VydmljZUZhY3RvcnkubGlzdCgpO1xufV0pO1xuXG5hbmd1bGFyLm1vZHVsZSgnc2VydmljZS5kZXRhaWwuY29udHJvbGxlcicsIFtdKS5jb250cm9sbGVyKCdTZWxlY3RlZFNlcnZpY2VDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJHN0YXRlUGFyYW1zJywgJ1NlcnZpY2VGYWN0b3J5JywgKCRzY29wZSwgJHN0YXRlUGFyYW1zLCBTZXJ2aWNlRmFjdG9yeSkgPT4ge1xuICAkc2NvcGUuc2VsZWN0ZWRTZXJ2aWNlID0gU2VydmljZUZhY3RvcnkuZmluZCgkc3RhdGVQYXJhbXMuc2x1Zyk7XG4gICRzY29wZS5icmFuZGluZyA9IGZhbHNlO1xuICBpZigkc2NvcGUuc2VsZWN0ZWRTZXJ2aWNlLm5hbWUgPT09ICdCcmFuZGluZycpe1xuICAgICAgJHNjb3BlLmJyYW5kaW5nID0gdHJ1ZTtcbiAgfSBlbHNlIHtcbiAgICAgICRzY29wZS5icmFuZGluZyA9IGZhbHNlO1xuICB9XG4gICRzY29wZS5ib29rMVNob3cgPSBmYWxzZTtcbiAgLy8gY29uc29sZS5sb2coJHNjb3BlLnNlbGVjdGVkU2VydmljZS5uYW1lKTtcbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdzZXJ2aWNlLmZhY3RvcnknLCBbXSkuZmFjdG9yeSgnU2VydmljZUZhY3RvcnknLCAoKSA9PiB7XG4gIHZhciBzZXJ2aWNlcyA9IFtcbiAgICB7XG4gICAgICBuYW1lOiAnSW50ZXJpb3IgRGVzaWduJyxcbiAgICAgIHNsdWc6ICdpbnRlcmlvci1kZXNpZ24nLFxuICAgICAgbG9nbzogJ2ltZy9pY29ucy9ob21lLnN2ZycsXG4gICAgICBiYW5uZXI6ICdpbWcvc2VydmljZXMvbWFzdGVyLWJyLnBuZycsXG4gICAgICBzdWJIZWFkOiAnYW1wbGlmeWluZyBjbGllbnQgc3BhY2VzJyxcbiAgICAgIGRlc2M6IFwiTG9jYWwgdG8gdGhlIFNlYXR0bGUgYXJlYT8gV2UgYXJlIGhlcmUgdG8gYXNzaXN0IHlvdSBpbiB5b3VyIGRlc2lnbiBuZWVkcy4gV2Ugd2FudCB5b3UgdG8gZmVlbCBhdCBob21lIGluIHlvdXIgaG9tZS4gV2XigJlkIGxvdmUgdG8gZ2V0IHRvIGtub3cgeW91IHRvIGRldmVsb3AgYSBzdHlsZSB0aGF0IGlzIGFsbCB5b3VyIG93bi4gQSBkZXNpZ24gcGFja2FnZSB3aXRoIGNvbmNlcHRzIGFuZCBhIGZsb29yIHBsYW4gd2lsbCBiZSBjcmVhdGVkIGFsbCB0aGUgd2F5IHRocm91Z2ggaW5zdGFsbGF0aW9uLiBDb250YWN0IHVzIGZvciBhIGZyZWUgY29uc3VsdGF0aW9uIVwiLFxuICAgICAgaW1nMTogJ2ltZy9zZXJ2aWNlcy9raXRjaGVuLnBuZycsXG4gICAgICBpbWcyOiAnaW1nL3NlcnZpY2VzL2ludGVyaW9yLWRlc2lnbi5wbmcnXG4gICAgfSxcbiAgICB7XG4gICAgICBuYW1lOiAnQnJhbmRpbmcnLFxuICAgICAgc2x1ZzogJ2JyYW5kaW5nJyxcbiAgICAgIGxvZ286ICdpbWcvaWNvbnMvZmluZ2VyLXByaW50LnN2ZycsXG4gICAgICBiYW5uZXI6ICdpbWcvc2VydmljZXMvYnJhbmRpbmcuanBnJyxcbiAgICAgIHN1YkhlYWQ6ICdIZWxwaW5nIHlvdXIgY3VzdG9tZXJzIGdldCB0byBrbm93IHlvdScsXG4gICAgICBkZXNjOiBcIkZvciBidXNpbmVzc2VzLCBpdCBpcyBpbXBvcnRhbnQgdG8gYmUgYWJsZSB0byBzdGFuZCBvdXQuIEJ5IGNyZWF0aW5nIGJyYW5kaW5nIHRvb2xzIHRoYXQgcG90ZW50aWFsIGNsaWVudHMgb3IgYXJjaGl0ZWN0cyBjYW4gZ2V0IHRoZWlyIGhhbmRzIG9uLCB3ZSB3aWxsIGhlbHAgbW92ZSB5b3UgdG8gdGhlIGZyb250IG9mIHRoZSBsaW5lLiBXZSBjYW4gZGV2ZWxvcCBidXNpbmVzcyB0b29scyB0aGF0IHJlZmxlY3QgeW91ciB2aXNpb24gYW5kIHJlYWNoIHlvdXIgc3BlY2lmaWMgYXVkaWVuY2UsIHN1Y2ggYXMgcG9ydGZvbGlvIGJvb2tsZXRzIGFuZCBidXNpbmVzcyBjYXJkcy5cIixcbiAgICAgIGltZzE6ICdpbWcvc2VydmljZXMvYnJhbmRpbmcxLnBuZycsXG4gICAgICBpbWcyOiAnaW1nL3NlcnZpY2VzL2JyYW5kaW5nMi5wbmcnXG4gICAgfSxcbiAgICB7XG4gICAgICBuYW1lOiAnU3BhY2UgUGxhbm5pbmcnLFxuICAgICAgc2x1ZzogJ3NwYWNlLXBsYW5uaW5nJyxcbiAgICAgIGxvZ286ICdpbWcvaWNvbnMvbWVhc3VyZW1lbnQuc3ZnJyxcbiAgICAgIGJhbm5lcjogJ2ltZy9zZXJ2aWNlcy9mbG9vci1wbGFuLnBuZycsXG4gICAgICBzdWJIZWFkOiAnbWFraW5nIHlvdXIgc3BhY2UgZnVuY3Rpb25hbCcsXG4gICAgICBkZXNjOiBcIldoYXQgaXMgc3BhY2UgcGxhbm5pbmc/IEl0IGlzIGNyZWF0aW5nIGEgaGlnaGx5IGZ1bmN0aW9uYWwgZnVybml0dXJlIGFycmFuZ2VtZW50LiBXb3VsZCB5b3UgbGlrZSBhc3Npc3RhbmNlIGFycmFuZ2luZyB0aGUgbGF5b3V0IG9mIHlvdXIgc3BhY2U/IFdlIGFyZSBoZXJlIHRvIGhlbHAhIFdlIHdpbGwgb3JnYW5pemUgeW91ciBleGlzdGluZyBvciBuZXcgZnVybml0dXJlIGluIGEgd2F5IHRoYXQgY3JlYXRlcyBhIG1vcmUgbmF0dXJhbCBhbmQgZnVuY3Rpb25hbCBmbG93IHdpdGggYSBjdXN0b21pemVkIGZsb29yIHBsYW4gdGhhdCB5b3Ugd2lsbCBsb3ZlLlwiLFxuICAgICAgaW1nMTogJ2ltZy9zZXJ2aWNlcy9idWJibGUxLnBuZycsXG4gICAgICBpbWcyOiAnaW1nL3NlcnZpY2VzL2Zsb29ycGxhbi5wbmcnXG4gICAgfSxcbiAgICB7XG4gICAgICBuYW1lOiAnRnVybml0dXJlIERlc2lnbicsXG4gICAgICBzbHVnOiAnZnVybml0dXJlJyxcbiAgICAgIGxvZ286ICdpbWcvaWNvbnMvY2hhaXIxLnN2ZycsXG4gICAgICBiYW5uZXI6ICdpbWcvc2VydmljZXMvYmVuY2gucG5nJyxcbiAgICAgIHN1YkhlYWQ6ICdjcmVhdGluZyBpbmRpdmlkdWFsaXplZCBwcm9kdWN0cycsXG4gICAgICBkZXNjOiBcIldlIGxvdmUgcHJvZHVjaW5nIGluZHVzdHJpYWwsIHJ1c3RpYyBhbmQgc3VzdGFpbmFibGUgcGllY2VzIGhlcmUgaW4gU2VhdHRsZS4gVGhlc2UgY2FuIGJlIGJyYW5kIG5ldyBwaWVjZXMgb3IgcmVwdXJwb3NlZCBmdXJuaXR1cmUuIElmIHlvdSBoYXZlIGFuIGhlaXJsb29tIHBpZWNlIHRoYXQgeW91IGNhbm5vdCBiZWFyIHRvIHRocm93IGF3YXksIHdlIG1heSBiZSBhYmxlIHRvIGdpdmUgaXQgYSBuZXcgbG9vay4gIFdlIHdvdWxkIGxvdmUgdG8gYmUgcGFydCBvZiB0aGUgcHJvY2VzcyB0byBjcmVhdGUgdGhhdCBwZXJmZWN0IHBpZWNlIGZvciB5b3UuXCIsXG4gICAgICBpbWcxOiAnaW1nL3NlcnZpY2VzL2JlbmNoLXBhaW50LnBuZycsXG4gICAgICBpbWcyOiAnaW1nL3NlcnZpY2VzL3RhYmxlLXdvcmsucG5nJ1xuICAgIH1cbiAgXTtcblxuXG4gIHJldHVybiB7XG4gICAgbGlzdDogZnVuY3Rpb24oKXtcbiAgICAgIHJldHVybiBzZXJ2aWNlcztcbiAgICB9LFxuICAgIGZpbmQ6IGZ1bmN0aW9uKHNsdWcpe1xuICAgICAgICByZXR1cm4gc2VydmljZXMuZmluZChmdW5jdGlvbihzZXJ2aWNlKSB7XG4gICAgICAgICAgICByZXR1cm4gc2VydmljZS5zbHVnID09IHNsdWc7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgfVxufSlcbiIsImFuZ3VsYXIubW9kdWxlKCdzZXJ2aWNlcycsIFsnc2VydmljZS5jb250cm9sbGVyJywgJ3NlcnZpY2UuZGV0YWlsLmNvbnRyb2xsZXInLCAnc2VydmljZS5mYWN0b3J5J10pO1xuIl19
