'use strict';

var app = angular.module('hb-interiors', ['home', 'services', 'common', 'ed', 'about.controller', 'ui.router', 'ngScrollReveal']);

app.config(['$locationProvider', '$stateProvider', '$urlRouterProvider', function ($locationProvider, $stateProvider, $urlRouterProvider) {

    $urlRouterProvider.otherwise('/');
    $locationProvider.html5Mode(true);

    $stateProvider.state('home', {
        url: '/',
        templateUrl: '/partials/home/home',
        controller: 'HomeController'
    }).state('services', {
        url: '/services',
        templateUrl: '/partials/services/services',
        controller: 'ServiceController'
    }).state('e-design', {
        url: '/e-design',
        templateUrl: '/partials/ed/ed',
        controller: 'EDesignController'
    }).state('about', {
        url: '/about',
        templateUrl: '/partials/about/about',
        controller: 'AboutController'
    }).state('services.detail', {
        url: '/:slug',
        templateUrl: '/partials/services/services-detail',
        controller: 'SelectedServiceController'
    });
}]);

app.run(['$rootScope', '$location', function ($rootScope, $location) {

    console.log($rootScope.contactShow);
    $rootScope.toggleContact = function () {
        $rootScope.contactShow = !$rootScope.contactShow;
        console.log($rootScope.contactShow);
    };

    $rootScope.$on("$stateChangeSuccess", function (event, currentRoute, previousRoute) {});
}]);
'use strict';

angular.module('about.controller', []).controller('AboutController', ['$scope', function ($scope) {}]);
'use strict';

angular.module('common', ['common.modal', 'common.inview', 'common.meta', 'common.nav', 'common.notifier']);
'use strict';

angular.module('common.inview', []).directive('inView', ['$window', function ($window) {
    return {
        restrict: 'A',
        scope: {
            viewObj: '='
        },
        link: function link(scope, element, attrs) {
            angular.element($window).bind('scroll', function () {
                var $el = element[0],
                    pos = $el.getBoundingClientRect();
                //check to see if active class, if not, start animations with js and define selectors
                if (pos.top + scope.viewObj.offset < $window.scrollY) {
                    scope.viewObj.visible = true;
                    //console.log('in view :' + scope.viewObj.visible);
                }
                // else {
                //     scope.viewObj.visible = false;
                // }
                scope.$apply();
            });
        }

    };
}]);
'use strict';

angular.module('common.meta', []).factory('Meta', function () {
  var _title = 'Hayley Bagwell Interior Design, Seattle, WA';
  var desc = 'Super DERRR';
  return {
    title: function title() {
      return _title;
    },
    setTitle: function setTitle(newTitle) {
      _title = newTitle;
    },
    description: function description() {
      return desc;
    },
    setDesc: function setDesc(newDesc) {
      desc = newDesc;
    }
  };
}).controller('MetaController', ['$scope', 'Meta', function ($scope, Meta) {
  $scope.Meta = Meta;
  $scope.metaDesc = Meta;
}]);
'use strict';

angular.module('common.modal', []).directive('globalModal', ['$rootScope', function ($rootScope) {

  return {
    restrict: 'E',
    scope: {
      show: '='
    },
    replace: true,
    transclude: true,
    link: function link(scope, element, attrs) {
      scope.dialogStyle = {};
      if (attrs.width) scope.dialogStyle.width = attrs.width;
      if (attrs.height) scope.dialogStyle.height = attrs.height;

      scope.hideModal = function () {
        $rootScope.contactShow = false;
      };
    },
    templateUrl: '/partials/common/modal'
  };
}]);
'use strict';

angular.module('common.nav', []).controller('NavController', ['$scope', '$http', '$window', 'NotifierService', function ($scope, $http, $window, notifier) {

    $scope.formData = {};

    $scope.sendContact = function () {
        console.log($scope.formData);
        $http.post('/contact-form', $scope.formData).then(function (message, status, headers, config) {
            notifier.notify('Thank you for your message ' + message.data.contactName);
            //$scope.formData.$setPristine();
            //$scope.formData.$setUntouched();
        }, function (message, status, headers, config) {
            notifier.notify('There was an error processing your request. Please try again');
        });
    };

    $scope.selected = false;
    $scope.toggleMenu = function () {
        $scope.selected = !$scope.selected;
    };

    $scope.socialShow = false;
    if ($window.innerWidth < 992) {
        console.log($window.innerWidth);
        angular.element($window).bind('scroll', function () {
            if ($window.scrollY > 140) {
                console.log($scope.socialShow);
                $scope.socialShow = true;
            } else {
                $scope.socialShow = false;
            }
        });
    }
}]);
'use strict';

angular.module('hb-interiors').value('notific8', notific8);

angular.module('common.notifier', []).factory('NotifierService', ['notific8', function (notific8) {

  notific8('configure', {
    life: 3000,
    theme: 'atomic',
    zindex: 9999,
    verticalEdge: 'right',
    horizontalEdge: 'top',
    closeText: 'X'
  });

  return {
    notify: function notify(message) {
      notific8(message, { color: 'pear' });
      console.log(message);
    },
    error: function error(message) {
      notific8(message, { color: 'tomato' });
      console.log(message);
    }
  };
}]);
'use strict';

angular.module('ed', ['ed.controller', 'questionaire.factory']);
'use strict';

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

angular.module('ed.controller', []).controller('EDesignController', ['$scope', '$http', 'QFactory', function ($scope, $http, QFactory) {
    window.scrollTo(0, 0);

    $scope.qShow = false;
    $scope.toggleQForm = function () {
        $scope.qShow = !$scope.qShow;
    };

    $scope.colorList = [];
    $scope.colorNoList = [];
    $scope.drawnToList = [];
    $scope.furnitureList = [];
    $scope.formData = {};
    function addToList(answer, list) {
        var index = list.indexOf(answer);
        if (index > -1) {
            list.splice(index, 1);
        } else {
            list.push(answer);
        }
        console.log(list);
    }
    $scope.toggleColor = function (answer, question) {
        if (question == 'q2') {
            addToList(answer, $scope.drawnToList);
        } else if (question == 'q3') {
            addToList(answer, $scope.furnitureList);
        } else if (question == 'q5') {
            addToList(answer, $scope.colorList);
        } else {
            addToList(answer, $scope.colorNoList);
        }
    };

    $scope.questions = QFactory.list();
    $scope.currentQuestion = 0;

    $scope.isCurrentQIndex = function (index) {
        return $scope.currentQuestion === index;
    };

    $scope.nextQ = function () {
        $scope.currentQuestion = $scope.currentQuestion < $scope.questions.length - 1 ? ++$scope.currentQuestion : 0;
    };

    $scope.prevQ = function () {
        $scope.currentQuestion = $scope.currentQuestion > 0 ? --$scope.currentQuestion : $scope.questions.length - 1;
    };

    $scope.submitQuestionaire = function () {
        var _data;

        var data = (_data = {
            q1: $scope.questions[0].response,
            q2: $scope.drawnToList,
            q3: $scope.furnitureList,
            q4: $scope.questions[3].response
        }, _defineProperty(_data, 'q4', $scope.colorList), _defineProperty(_data, 'q5', $scope.colorNoList), _defineProperty(_data, 'name', $scope.formData.name), _defineProperty(_data, 'email', $scope.formData.email), _defineProperty(_data, 'phone', $scope.formData.phone), _defineProperty(_data, 'note', $scope.formData.note), _data);
        console.log(data);

        $http.post('/questionaire-form', data).then(function (response) {
            console.log(response.data);
        }, function (err) {
            console.log('There was a problem submitting your form ' + err);
        });
    };

    $scope.mySplit = function (string, nb) {
        var array = string.split('-');
        if (array[nb + 1] === undefined) {
            return array[nb];
        } else {
            return array[nb] + ' ' + array[nb + 1];
        }
    };
}]);
'use strict';

angular.module('questionaire.factory', []).factory('QFactory', function () {

    var questions = [{
        id: 'q1',
        type: 'radio',
        question: 'Which space would you like designed first?',
        cols: 'col-sm-4',
        answers: ['Living', 'Bedroom', 'Dining', 'Bath', 'Kitchen', 'Other'],
        response: ''
    }, {
        id: 'q2',
        type: 'checkbox',
        question: 'Which image(s) are you drawn to?',
        cols: 'col-sm-4',
        images: [{
            name: 'img1',
            selected: false
        }, {
            name: 'img2',
            selected: false
        }, {
            name: 'img3',
            selected: false
        }, {
            name: 'img4',
            selected: false
        }, {
            name: 'img5',
            selected: false
        }, {
            name: 'img6',
            selected: false
        }]
    }, {
        id: 'q3',
        type: 'checkbox',
        question: 'Where would you shop for furniture?',
        cols: 'col-sm-4',
        images: [{
            name: 'ikea',
            selected: false
        }, {
            name: 'pier-1',
            selected: false
        }, {
            name: 'west-elm',
            selected: false
        }, {
            name: 'crate-barrel',
            selected: false
        }, {
            name: 'cb2',
            selected: false
        }, {
            name: 'restoration-hardware',
            selected: false
        }]
    }, {
        id: 'q4',
        type: 'radio',
        question: 'How much money are you budgeting for your project after the design fee, which begins around $1,500 per space?',
        cols: 'col-sm-4',
        answers: ['1-2', '2-5', '5-10', '10-15', '15-25', '25up'],
        response: ''
    }, {
        id: 'q5',
        type: 'checkbox',
        question: 'What colors would you like to see in the design',
        cols: 'col-color',
        design: 'colors',
        colors: [{ name: 'Black',
            selected: false
        }, { name: 'Grey',
            selected: false
        }, { name: 'Red',
            selected: false
        }, { name: 'Orange',
            selected: false
        }, { name: 'Yellow',
            selected: false
        }, { name: 'Lime',
            selected: false
        }, { name: 'Green',
            selected: false
        }, { name: 'Aqua',
            selected: false
        }, { name: 'Turquoise',
            selected: false
        }, { name: 'Slate',
            selected: false
        }, { name: 'Blue',
            selected: false
        }, { name: 'Purple',
            selected: false
        }, { name: 'Pink',
            selected: false
        }, { name: 'Brown',
            selected: false
        }, { name: 'Cream',
            selected: false
        }, { name: 'White',
            selected: false
        }]
    }, {
        id: 'q6',
        type: 'checkbox',
        question: 'Select which colors you would NOT want to see',
        cols: 'col-color',
        colors: [{ name: 'Black',
            selected: false
        }, { name: 'Grey',
            selected: false
        }, { name: 'Red',
            selected: false
        }, { name: 'Orange',
            selected: false
        }, { name: 'Yellow',
            selected: false
        }, { name: 'Lime',
            selected: false
        }, { name: 'Green',
            selected: false
        }, { name: 'Aqua',
            selected: false
        }, { name: 'Turquoise',
            selected: false
        }, { name: 'Slate',
            selected: false
        }, { name: 'Blue',
            selected: false
        }, { name: 'Purple',
            selected: false
        }, { name: 'Pink',
            selected: false
        }, { name: 'Brown',
            selected: false
        }, { name: 'Cream',
            selected: false
        }, { name: 'White',
            selected: false
        }]
    }, {
        id: 'q7',
        type: 'text'
    }];

    return {
        list: function list() {
            return questions;
        }
    };
});
'use strict';

angular.module('banner.dir', []).directive('pageBanner', function () {
  return {
    restrict: 'E',
    templateUrl: '/partials/home/banner',
    replace: true,
    scope: { bgImage: '@' }
  };
});
'use strict';

angular.module('box.height.dir', []).directive('boxHeight', ['$window', '$timeout', function ($window, $timeout) {
  return {
    restrict: 'A',
    link: function link(scope, elem, attrs) {
      $timeout(function () {
        scope.newHeight = elem[0].offsetHeight;
      }, 500);
      angular.element($window).bind('resize', function () {
        scope.$apply(function () {
          scope.newHeight = elem[0].offsetHeight;
        });
      });
    }
  };
}]);

angular.module('target.height.dir', []).directive('targetHeight', function () {
  return {
    restrict: 'A',
    link: function link(scope, elem, attrs) {
      scope.$watch('newHeight', function (newV, oldV) {
        //console.log('old value ' + oldV, 'new value ' + newV);
        elem.attr('style', 'height: ' + newV + 'px');
      });
    }
  };
});
'use strict';

angular.module('home.controller', []).controller('HomeController', ['$scope', 'ServiceFactory', function ($scope, ServiceFactory) {

  $scope.services = ServiceFactory.list();

  $scope.welcome = {
    visible: false,
    offset: -200
  };

  $scope.options = {
    origin: 'left',
    distance: '150px',
    easing: 'ease-in-out',
    delay: 30,
    scale: 1,
    duration: 1000,
    // reset: true,
    //    afterReveal: function (domEl) {
    //        document.getElementById("gallery").style.visibility = "visible";
    //    },
    sequence: {
      selector: '.col-sm-5',
      interval: 300
    }
  };
}]);
'use strict';

angular.module('home', ['home.controller', 'box.height.dir', 'target.height.dir', 'banner.dir']);
'use strict';

angular.module('service.controller', []).controller('ServiceController', ['$scope', '$stateParams', 'ServiceFactory', function ($scope, $stateParams, ServiceFactory) {
  $scope.services = ServiceFactory.list();
}]);

angular.module('service.detail.controller', []).controller('SelectedServiceController', ['$scope', '$stateParams', 'ServiceFactory', function ($scope, $stateParams, ServiceFactory) {
  $scope.selectedService = ServiceFactory.find($stateParams.slug);
}]);
'use strict';

angular.module('service.factory', []).factory('ServiceFactory', function () {
  var services = [
  // {
  //   name: 'e-Design',
  //   logo: 'img/icons/construction.png'
  // },
  {
    name: 'Space Planning',
    slug: 'space-planning',
    logo: 'img/icons/house-plan.png',
    banner: 'img/services/floor-plan.png',
    subHead: 'creating individualized products',
    desc: "What is it? Do you feel like your space is not functional? Would you like assistance arranging a layout for your space? We can help!\n \nWe will organize your existing furniture in a way that creates a more natural and functional flow to make the best use of your space.",
    img1: 'img/services/bubble1.png',
    img2: 'img/services/floorplan.png'
  }, {
    name: 'Branding',
    slug: 'branding',
    logo: 'img/icons/branding.png',
    banner: 'img/services/branding.jpg',
    subHead: 'Helping your customers get to know you',
    desc: "It is important to be able to stand out from the rest of the designers in your area.  By creating branding tools that potential clients or architects can get their hands on moves you to the front of the line.\n \nWe develop these business tools, such as portfolio booklets and business cards to reach your specific audience.",
    img1: 'img/services/branding1.png',
    img2: 'img/services/branding2.png'
  }, {
    name: 'Interior Design',
    slug: 'interior-design',
    logo: 'img/icons/think-draw-build.png',
    banner: 'img/services/master-br.png',
    subHead: 'creating individualized products',
    desc: "If you are local to the Seattle area, we are here to assist you in your design needs.  We want you to feel at home in your home.  It is very important for us to get to know you and your style.  We will then be able to develop a design that is a reflection of you.\n \nThis is a more traditional form of design.  We will get to know you further by meeting and discussing your design needs and desires.  A design package with concepts will be created all the way through installation.",
    img1: 'img/services/kitchen.png',
    img2: 'img/services/interior-design.png'
  }, {
    name: 'Furniture Design',
    slug: 'furniture',
    logo: 'img/icons/construction.png',
    banner: 'img/services/bench.png',
    subHead: 'creating individualized products',
    desc: "We love producing industrial, rustic and sustainable pieces.  These can be brand new pieces or repurposed furniture.  Breathing new life into second hand furniture is not only rewarding, but also helps to keep furniture from uselessly going to the trash.\n \nIf there were a certain piece of furniture you are looking for, we would love to be part of the process to create that perfect piece for you.",
    img1: 'img/services/bench-paint.png',
    img2: 'img/services/table-work.png'
  }];

  return {
    list: function list() {
      return services;
    },
    find: function find(slug) {
      return services.find(function (service) {
        return service.slug == slug;
      });
    }
  };
});
'use strict';

angular.module('services', ['service.controller', 'service.detail.controller', 'service.factory']);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
