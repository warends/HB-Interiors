'use strict';

var app = angular.module('hb-interiors', ['home', 'services', 'common.modal', 'ed.controller', 'contact.controller', 'about.controller', 'ui.router']);

app.config(['$locationProvider', '$stateProvider', '$urlRouterProvider', function ($locationProvider, $stateProvider, $urlRouterProvider) {

    $urlRouterProvider.otherwise('/');
    $locationProvider.html5Mode(true);

    $stateProvider.state('home', {
        url: '/',
        templateUrl: '/partials/home/home',
        controller: 'HomeController'
    }).state('services', {
        url: '/services',
        templateUrl: '/partials/services/services',
        controller: 'ServiceController'
    }).state('e-design', {
        url: '/e-design',
        templateUrl: '/partials/ed/ed',
        controller: 'EDesignController'
    }).state('about', {
        url: '/about',
        templateUrl: '/partials/about/about',
        controller: 'AboutController'
    }).state('contact', {
        url: '/contact',
        templateUrl: '/partials/contact/contact',
        controller: 'ContactController'
    }).state('services.detail', {
        url: '/:slug',
        templateUrl: '/partials/services/services-detail',
        controller: 'SelectedServiceController'
    });
}]);

app.run(['$rootScope', '$location', function ($rootScope, $location) {

    // $rootScope.$on('$routeChangeError', function(evt, current, previous, rejection) {
    //     if(rejection === 'not authorized') {
    //       $location.path('/');
    //     }
    // });

    $rootScope.$on("$stateChangeSuccess", function (event, currentRoute, previousRoute) {});
}]);
'use strict';

angular.module('about.controller', []).controller('AboutController', ['$scope', function ($scope) {

  $scope.isActive = false;
  $scope.minusSign = false;
  $scope.expandBio = function () {
    $scope.minusSign = !$scope.minusSign;
    $scope.isActive = !$scope.isActive;
  };
}]);
'use strict';

app.factory('Meta', function () {
  var _title = 'Hayley Bagwell Interior Design, Seattle, WA';
  var desc = 'Super DERRR';
  return {
    title: function title() {
      return _title;
    },
    setTitle: function setTitle(newTitle) {
      _title = newTitle;
    },
    description: function description() {
      return desc;
    },
    setDesc: function setDesc(newDesc) {
      desc = newDesc;
    }
  };
}).controller('MetaController', ['$scope', 'Meta', function ($scope, Meta) {
  $scope.Meta = Meta;
  $scope.metaDesc = Meta;
}]);
'use strict';

angular.module('common.modal', []).directive('globalModal', function () {

  return {
    restrict: 'E',
    scope: {
      show: '='
    },
    replace: true,
    transclude: true,
    link: function link(scope, element, attrs) {
      scope.dialogStyle = {};
      if (attrs.width) scope.dialogStyle.width = attrs.width;
      if (attrs.height) scope.dialogStyle.height = attrs.height;

      scope.hideModal = function () {
        scope.show = false;
      };
    },
    templateUrl: '/partials/common/modal'
  };
});
'use strict';

angular.module('contact.controller', []).controller('ContactController', ['$scope', '$http', function ($scope, $http) {

  $scope.form = {};

  $scope.sendMail = function () {
    var data = {
      contactName: this.contactName,
      contactCompany: this.contactCompany,
      contactEmail: this.contactEmail,
      contactMessage: this.contactMessage
    };

    $http.post('/contact-form', data).then(function (message, status, headers, config) {
      notifier.notify('Thank you for your message ' + message.data.contactName);
      $scope.form.contactForm.$setPristine();
      $scope.form.contactForm.$setUntouched();
    }, function (message, status, headers, config) {
      notifier.notify('There was an error processing your request. Please try again');
    });
    this.contactName = null;
    this.contactCompany = null;
    this.contactEmail = null;
    this.contactMessage = null;
  };
}]);
'use strict';

angular.module('ed.controller', []).controller('EDesignController', ['$scope', function ($scope) {
    window.scrollTo(0, 0);

    $scope.qShow = false;
    $scope.toggleQForm = function () {
        $scope.qShow = !$scope.qShow;
    };

    $scope.submitQuestionaire = function () {
        console.log('form submitted');
    };
}]);
'use strict';

angular.module('banner.dir', []).directive('pageBanner', function () {
  return {
    restrict: 'E',
    templateUrl: '/partials/home/banner',
    replace: true,
    scope: { bgImage: '@' }
  };
});
'use strict';

angular.module('box.height.dir', []).directive('boxHeight', ['$window', '$timeout', function ($window, $timeout) {
  return {
    restrict: 'A',
    link: function link(scope, elem, attrs) {
      $timeout(function () {
        scope.newHeight = elem[0].offsetHeight;
      }, 500);
      angular.element($window).bind('resize', function () {
        scope.$apply(function () {
          scope.newHeight = elem[0].offsetHeight;
        });
      });
    }
  };
}]);

angular.module('target.height.dir', []).directive('targetHeight', function () {
  return {
    restrict: 'A',
    link: function link(scope, elem, attrs) {
      scope.$watch('newHeight', function (newV, oldV) {
        //console.log('old value ' + oldV, 'new value ' + newV);
        elem.attr('style', 'height: ' + newV + 'px');
      });
    }
  };
});
'use strict';

angular.module('home.controller', []).controller('HomeController', ['$scope', 'ServiceFactory', function ($scope, ServiceFactory) {

  $scope.services = ServiceFactory.list();
}]);
'use strict';

angular.module('home', ['home.controller', 'box.height.dir', 'target.height.dir', 'banner.dir']);
'use strict';

angular.module('service.controller', []).controller('ServiceController', ['$scope', '$stateParams', 'ServiceFactory', function ($scope, $stateParams, ServiceFactory) {
  $scope.services = ServiceFactory.list();
}]);

angular.module('service.detail.controller', []).controller('SelectedServiceController', ['$scope', '$stateParams', 'ServiceFactory', function ($scope, $stateParams, ServiceFactory) {
  $scope.selectedService = ServiceFactory.find($stateParams.slug);
}]);
'use strict';

angular.module('service.factory', []).factory('ServiceFactory', function () {
  var services = [
  // {
  //   name: 'e-Design',
  //   logo: 'img/icons/construction.png'
  // },
  {
    name: 'Space Planning',
    slug: 'space-planning',
    logo: 'img/icons/house-plan.png',
    banner: 'img/services/floor-plan.png',
    subHead: 'creating individualized products',
    desc: 'We can help make your space more functional with our space planning service.  Contact us for more details.'
  }, {
    name: 'Branding',
    slug: 'branding',
    logo: 'img/icons/branding.png',
    banner: 'img/services/branding.jpg',
    subHead: 'Helping your customers get to know you',
    desc: 'We understand that it is difficult to separate yourself from others.  With our custom made booklets, we will create a beautiful marketing and branding tool to be able to physically hand to potential clients, architects, magazines, or anyone else you want to present your work to. We take the amazing images of your designs and put together a distict booklet that displays your beautiful work.  Take a look at some of the talented designers that we’ve worked with below.  Please contact us for more details.'
  }, {
    name: 'Interior Design',
    slug: 'interior-design',
    logo: 'img/icons/think-draw-build.png',
    banner: 'img/services/master-br.png',
    subHead: 'creating individualized products',
    desc: 'Contact us for full service in-person design services.  It is most important to us to create a design that reflects the personalities of our wonderful clients.  Please contact us for more details.'
  }, {
    name: 'Furniture Design',
    slug: 'furniture',
    logo: 'img/icons/construction.png',
    banner: 'img/services/bench.png',
    subHead: 'creating individualized products',
    desc: 'Whether it’s creating unique furniture from an amazing piece of wood or refinishing a great piece of furniture with good bones, we love it.  If there’s something that is a keepsake from your grandmother that you feel bad parting with, let us take a look and see if we can’t remake it into something that you love.'
  }];

  return {
    list: function list() {
      return services;
    },
    find: function find(slug) {
      return _.find(services, function (service) {
        return service.slug == slug;
      });
    }
  };
});
'use strict';

angular.module('services', ['service.controller', 'service.detail.controller', 'service.factory']);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImFib3V0L2Fib3V0LmNvbnRyb2xsZXIuanMiLCJjb21tb24vbWV0YS5jb250cm9sbGVyLmpzIiwiY29tbW9uL21vZGFsLmRpcmVjdGl2ZS5qcyIsImNvbnRhY3QvY29udGFjdC5jb250cm9sbGVyLmpzIiwiZWQvZURlc2lnbi5jb250cm9sbGVyLmpzIiwiaG9tZS9iYW5uZXIuZGlyZWN0aXZlLmpzIiwiaG9tZS9ib3guZGlyZWN0aXZlLmpzIiwiaG9tZS9ob21lLmNvbnRyb2xsZXIuanMiLCJob21lL2hvbWUubW9kdWxlLmpzIiwic2VydmljZXMvc2VydmljZS5jb250cm9sbGVyLmpzIiwic2VydmljZXMvc2VydmljZS5mYWN0b3J5LmpzIiwic2VydmljZXMvc2VydmljZS5tb2R1bGUuanMiXSwibmFtZXMiOlsiYXBwIiwiYW5ndWxhciIsIm1vZHVsZSIsImNvbmZpZyIsIiRsb2NhdGlvblByb3ZpZGVyIiwiJHN0YXRlUHJvdmlkZXIiLCIkdXJsUm91dGVyUHJvdmlkZXIiLCJvdGhlcndpc2UiLCJodG1sNU1vZGUiLCJzdGF0ZSIsInVybCIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlciIsInJ1biIsIiRyb290U2NvcGUiLCIkbG9jYXRpb24iLCIkb24iLCJldmVudCIsImN1cnJlbnRSb3V0ZSIsInByZXZpb3VzUm91dGUiLCIkc2NvcGUiLCJpc0FjdGl2ZSIsIm1pbnVzU2lnbiIsImV4cGFuZEJpbyIsImZhY3RvcnkiLCJ0aXRsZSIsImRlc2MiLCJzZXRUaXRsZSIsIm5ld1RpdGxlIiwiZGVzY3JpcHRpb24iLCJzZXREZXNjIiwibmV3RGVzYyIsIk1ldGEiLCJtZXRhRGVzYyIsImRpcmVjdGl2ZSIsInJlc3RyaWN0Iiwic2NvcGUiLCJzaG93IiwicmVwbGFjZSIsInRyYW5zY2x1ZGUiLCJsaW5rIiwiZWxlbWVudCIsImF0dHJzIiwiZGlhbG9nU3R5bGUiLCJ3aWR0aCIsImhlaWdodCIsImhpZGVNb2RhbCIsIiRodHRwIiwiZm9ybSIsInNlbmRNYWlsIiwiZGF0YSIsImNvbnRhY3ROYW1lIiwiY29udGFjdENvbXBhbnkiLCJjb250YWN0RW1haWwiLCJjb250YWN0TWVzc2FnZSIsInBvc3QiLCJ0aGVuIiwibWVzc2FnZSIsInN0YXR1cyIsImhlYWRlcnMiLCJub3RpZmllciIsIm5vdGlmeSIsImNvbnRhY3RGb3JtIiwiJHNldFByaXN0aW5lIiwiJHNldFVudG91Y2hlZCIsIndpbmRvdyIsInNjcm9sbFRvIiwicVNob3ciLCJ0b2dnbGVRRm9ybSIsInN1Ym1pdFF1ZXN0aW9uYWlyZSIsImNvbnNvbGUiLCJsb2ciLCJiZ0ltYWdlIiwiJHdpbmRvdyIsIiR0aW1lb3V0IiwiZWxlbSIsIm5ld0hlaWdodCIsIm9mZnNldEhlaWdodCIsImJpbmQiLCIkYXBwbHkiLCIkd2F0Y2giLCJuZXdWIiwib2xkViIsImF0dHIiLCJTZXJ2aWNlRmFjdG9yeSIsInNlcnZpY2VzIiwibGlzdCIsIiRzdGF0ZVBhcmFtcyIsInNlbGVjdGVkU2VydmljZSIsImZpbmQiLCJzbHVnIiwibmFtZSIsImxvZ28iLCJiYW5uZXIiLCJzdWJIZWFkIiwiXyIsInNlcnZpY2UiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsTUFBTUMsUUFBUUMsTUFBUixDQUFlLGNBQWYsRUFBK0IsQ0FBQyxNQUFELEVBQVMsVUFBVCxFQUFxQixjQUFyQixFQUFxQyxlQUFyQyxFQUFzRCxvQkFBdEQsRUFBNEUsa0JBQTVFLEVBQWdHLFdBQWhHLENBQS9CLENBQVo7O0FBRUFGLElBQUlHLE1BQUosQ0FBVyxDQUFDLG1CQUFELEVBQXNCLGdCQUF0QixFQUF3QyxvQkFBeEMsRUFBOEQsVUFBQ0MsaUJBQUQsRUFBb0JDLGNBQXBCLEVBQW9DQyxrQkFBcEMsRUFBMkQ7O0FBRWhJQSx1QkFBbUJDLFNBQW5CLENBQTZCLEdBQTdCO0FBQ0FILHNCQUFrQkksU0FBbEIsQ0FBNEIsSUFBNUI7O0FBRUFILG1CQUNHSSxLQURILENBQ1MsTUFEVCxFQUNpQjtBQUNYQyxhQUFLLEdBRE07QUFFWEMscUJBQWEscUJB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V0FGUjtBQUdFRSxVQUFNLDRCQUhSO0FBSUVDLFlBQVEsd0JBSlY7QUFLRUMsYUFBUyxrQ0FMWDtBQU1FcEUsVUFBTTtBQU5SLEdBN0JhLENBQWY7O0FBdUNBLFNBQU87QUFDTDRELFVBQU0sZ0JBQVU7QUFDZCxhQUFPRCxRQUFQO0FBQ0QsS0FISTtBQUlMSSxVQUFNLGNBQVNDLElBQVQsRUFBYztBQUNoQixhQUFPSyxFQUFFTixJQUFGLENBQU9KLFFBQVAsRUFBaUIsVUFBQ1csT0FBRCxFQUFhO0FBQ25DLGVBQU9BLFFBQVFOLElBQVIsSUFBZ0JBLElBQXZCO0FBQ0QsT0FGTSxDQUFQO0FBR0g7QUFSSSxHQUFQO0FBVUQsQ0FsREQ7OztBQ0FBekYsUUFBUUMsTUFBUixDQUFlLFVBQWYsRUFBMkIsQ0FBQyxvQkFBRCxFQUF1QiwyQkFBdkIsRUFBb0QsaUJBQXBELENBQTNCIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBhcHAgPSBhbmd1bGFyLm1vZHVsZSgnaGItaW50ZXJpb3JzJywgWydob21lJywgJ3NlcnZpY2VzJywgJ2NvbW1vbi5tb2RhbCcsICdlZC5jb250cm9sbGVyJywgJ2NvbnRhY3QuY29udHJvbGxlcicsICdhYm91dC5jb250cm9sbGVyJywgJ3VpLnJvdXRlciddKTtcblxuYXBwLmNvbmZpZyhbJyRsb2NhdGlvblByb3ZpZGVyJywgJyRzdGF0ZVByb3ZpZGVyJywgJyR1cmxSb3V0ZXJQcm92aWRlcicsICgkbG9jYXRpb25Qcm92aWRlciwgJHN0YXRlUHJvdmlkZXIsICR1cmxSb3V0ZXJQcm92aWRlcikgPT4ge1xuXG4gICAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZSgnLycpO1xuICAgICRsb2NhdGlvblByb3ZpZGVyLmh0bWw1TW9kZSh0cnVlKTtcblxuICAgICRzdGF0ZVByb3ZpZGVyXG4gICAgICAuc3RhdGUoJ2hvbWUnLCB7XG4gICAgICAgICAgdXJsOiAnLycsXG4gICAgICAgICAgdGVtcGxhdGVVcmw6ICcvcGFydGlhbHMvaG9tZS9ob21lJyxcbiAgICAgICAgICBjb250cm9sbGVyOiAnSG9tZUNvbnRyb2xsZXInXG4gICAgICB9KVxuICAgICAgLnN0YXRlKCdzZXJ2aWNlcycsIHtcbiAgICAgICAgICB1cmw6ICcvc2VydmljZXMnLFxuICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3BhcnRpYWxzL3NlcnZpY2VzL3NlcnZpY2VzJyxcbiAgICAgICAgICBjb250cm9sbGVyOiAnU2VydmljZUNvbnRyb2xsZXInXG4gICAgICB9KVxuICAgICAgLnN0YXRlKCdlLWRlc2lnbicsIHtcbiAgICAgICAgICB1cmw6ICcvZS1kZXNpZ24nLFxuICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3BhcnRpYWxzL2VkL2VkJyxcbiAgICAgICAgICBjb250cm9sbGVyOiAnRURlc2lnbkNvbnRyb2xsZXInXG4gICAgICB9KVxuICAgICAgLnN0YXRlKCdhYm91dCcsIHtcbiAgICAgICAgICB1cmw6ICcvYWJvdXQnLFxuICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3BhcnRpYWxzL2Fib3V0L2Fib3V0JyxcbiAgICAgICAgICBjb250cm9sbGVyOiAnQWJvdXRDb250cm9sbGVyJ1xuICAgICAgfSlcbiAgICAgIC5zdGF0ZSgnY29udGFjdCcsIHtcbiAgICAgICAgICB1cmw6ICcvY29udGFjdCcsXG4gICAgICAgICAgdGVtcGxhdGVVcmw6ICcvcGFydGlhbHMvY29udGFjdC9jb250YWN0JyxcbiAgICAgICAgICBjb250cm9sbGVyOiAnQ29udGFjdENvbnRyb2xsZXInXG4gICAgICB9KVxuICAgICAgLnN0YXRlKCdzZXJ2aWNlcy5kZXRhaWwnLCB7XG4gICAgICAgICAgdXJsOiAnLzpzbHVnJyxcbiAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9wYXJ0aWFscy9zZXJ2aWNlcy9zZXJ2aWNlcy1kZXRhaWwnLFxuICAgICAgICAgIGNvbnRyb2xsZXI6ICdTZWxlY3RlZFNlcnZpY2VDb250cm9sbGVyJ1xuICAgICAgfSk7XG59XSk7XG5cblxuYXBwLnJ1bihbJyRyb290U2NvcGUnLCAnJGxvY2F0aW9uJywgZnVuY3Rpb24oJHJvb3RTY29wZSwgJGxvY2F0aW9uKXtcblxuICAvLyAkcm9vdFNjb3BlLiRvbignJHJvdXRlQ2hhbmdlRXJyb3InLCBmdW5jdGlvbihldnQsIGN1cnJlbnQsIHByZXZpb3VzLCByZWplY3Rpb24pIHtcbiAgLy8gICAgIGlmKHJlamVjdGlvbiA9PT0gJ25vdCBhdXRob3JpemVkJykge1xuICAvLyAgICAgICAkbG9jYXRpb24ucGF0aCgnLycpO1xuICAvLyAgICAgfVxuICAvLyB9KTtcblxuICAkcm9vdFNjb3BlLiRvbihcIiRzdGF0ZUNoYW5nZVN1Y2Nlc3NcIiwgZnVuY3Rpb24gKGV2ZW50LCBjdXJyZW50Um91dGUsIHByZXZpb3VzUm91dGUpIHtcblxuICB9KTtcblxufV0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2Fib3V0LmNvbnRyb2xsZXInLCBbXSkuY29udHJvbGxlcignQWJvdXRDb250cm9sbGVyJywgWyckc2NvcGUnLCAoJHNjb3BlKSA9PiB7XG5cbiAgJHNjb3BlLmlzQWN0aXZlID0gZmFsc2U7XG4gICRzY29wZS5taW51c1NpZ24gPSBmYWxzZTtcbiAgJHNjb3BlLmV4cGFuZEJpbyA9ICgpID0+IHtcbiAgICAgICRzY29wZS5taW51c1NpZ24gPSAhJHNjb3BlLm1pbnVzU2lnbjtcbiAgICAgICRzY29wZS5pc0FjdGl2ZSA9ICEkc2NvcGUuaXNBY3RpdmU7XG4gIH07XG5cbn1dKTtcbiIsImFwcC5mYWN0b3J5KCdNZXRhJywgZnVuY3Rpb24oKXtcbiAgdmFyIHRpdGxlID0gJ0hheWxleSBCYWd3ZWxsIEludGVyaW9yIERlc2lnbiwgU2VhdHRsZSwgV0EnO1xuICB2YXIgZGVzYyA9ICdTdXBlciBERVJSUic7XG4gIHJldHVybiB7XG4gICAgdGl0bGU6IGZ1bmN0aW9uKCkge3JldHVybiB0aXRsZTt9LFxuICAgIHNldFRpdGxlOiBmdW5jdGlvbihuZXdUaXRsZSkgeyB0aXRsZSA9IG5ld1RpdGxlIH0sXG4gICAgZGVzY3JpcHRpb246IGZ1bmN0aW9uKCkgeyByZXR1cm4gZGVzYzt9LFxuICAgIHNldERlc2MgOiBmdW5jdGlvbihuZXdEZXNjKSB7IGRlc2MgPSBuZXdEZXNjfVxuICB9XG59KVxuLmNvbnRyb2xsZXIoJ01ldGFDb250cm9sbGVyJywgWyckc2NvcGUnLCAnTWV0YScsIGZ1bmN0aW9uKCRzY29wZSwgTWV0YSl7XG4gICRzY29wZS5NZXRhID0gTWV0YTtcbiAgJHNjb3BlLm1ldGFEZXNjID0gTWV0YTtcbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdjb21tb24ubW9kYWwnLCBbXSkuZGlyZWN0aXZlKCdnbG9iYWxNb2RhbCcsIGZ1bmN0aW9uKCl7XG5cbiAgcmV0dXJue1xuICAgIHJlc3RyaWN0OiAnRScsXG4gICAgc2NvcGU6IHtcbiAgICAgIHNob3c6ICc9J1xuICAgIH0sXG4gICAgcmVwbGFjZTogdHJ1ZSxcbiAgICB0cmFuc2NsdWRlOiB0cnVlLFxuICAgIGxpbmsgOiBmdW5jdGlvbihzY29wZSwgZWxlbWVudCwgYXR0cnMpe1xuICAgICAgc2NvcGUuZGlhbG9nU3R5bGUgPSB7fTtcbiAgICAgIGlmKGF0dHJzLndpZHRoKVxuICAgICAgICBzY29wZS5kaWFsb2dTdHlsZS53aWR0aCA9IGF0dHJzLndpZHRoO1xuICAgICAgaWYgKGF0dHJzLmhlaWdodClcbiAgICAgICAgc2NvcGUuZGlhbG9nU3R5bGUuaGVpZ2h0ID0gYXR0cnMuaGVpZ2h0O1xuXG4gICAgICBzY29wZS5oaWRlTW9kYWwgPSBmdW5jdGlvbigpe1xuICAgICAgICBzY29wZS5zaG93ID0gZmFsc2U7XG4gICAgICB9O1xuICAgIH0sXG4gICAgdGVtcGxhdGVVcmw6ICcvcGFydGlhbHMvY29tbW9uL21vZGFsJ1xuICB9XG5cbn0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2NvbnRhY3QuY29udHJvbGxlcicsIFtdKS5jb250cm9sbGVyKCdDb250YWN0Q29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRodHRwJywgKCRzY29wZSwgJGh0dHApID0+IHtcblxuICAgICRzY29wZS5mb3JtID0ge307XG5cbiAgICAkc2NvcGUuc2VuZE1haWwgPSBmdW5jdGlvbigpe1xuICAgICAgICAgdmFyIGRhdGEgPSh7XG4gICAgICAgICAgIGNvbnRhY3ROYW1lIDogdGhpcy5jb250YWN0TmFtZSxcbiAgICAgICAgICAgY29udGFjdENvbXBhbnkgOiB0aGlzLmNvbnRhY3RDb21wYW55LFxuICAgICAgICAgICBjb250YWN0RW1haWwgOiB0aGlzLmNvbnRhY3RFbWFpbCxcbiAgICAgICAgICAgY29udGFjdE1lc3NhZ2UgOiB0aGlzLmNvbnRhY3RNZXNzYWdlXG4gICAgICAgICB9KTtcblxuICAgICAgICAgJGh0dHAucG9zdCgnL2NvbnRhY3QtZm9ybScsIGRhdGEpXG4gICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKG1lc3NhZ2UsIHN0YXR1cywgaGVhZGVycywgY29uZmlnKXtcbiAgICAgICAgICAgICBub3RpZmllci5ub3RpZnkoJ1RoYW5rIHlvdSBmb3IgeW91ciBtZXNzYWdlICcgKyBtZXNzYWdlLmRhdGEuY29udGFjdE5hbWUpO1xuICAgICAgICAgICAgICAgICRzY29wZS5mb3JtLmNvbnRhY3RGb3JtLiRzZXRQcmlzdGluZSgpO1xuICAgICAgICAgICAgICAgICRzY29wZS5mb3JtLmNvbnRhY3RGb3JtLiRzZXRVbnRvdWNoZWQoKTtcbiAgICAgICAgICAgfSwgZnVuY3Rpb24obWVzc2FnZSwgc3RhdHVzLCBoZWFkZXJzLCBjb25maWcpe1xuICAgICAgICAgICAgIG5vdGlmaWVyLm5vdGlmeSgnVGhlcmUgd2FzIGFuIGVycm9yIHByb2Nlc3NpbmcgeW91ciByZXF1ZXN0LiBQbGVhc2UgdHJ5IGFnYWluJyk7XG4gICAgICAgICAgIH0pO1xuICAgICAgICAgICB0aGlzLmNvbnRhY3ROYW1lID0gbnVsbDtcbiAgICAgICAgICAgdGhpcy5jb250YWN0Q29tcGFueSA9IG51bGw7XG4gICAgICAgICAgIHRoaXMuY29udGFjdEVtYWlsID0gbnVsbDtcbiAgICAgICAgICAgdGhpcy5jb250YWN0TWVzc2FnZSA9IG51bGw7XG4gICAgICAgfVxuXG59XSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnZWQuY29udHJvbGxlcicsIFtdKS5jb250cm9sbGVyKCdFRGVzaWduQ29udHJvbGxlcicsIFsnJHNjb3BlJywgKCRzY29wZSkgPT4ge1xuICAgIHdpbmRvdy5zY3JvbGxUbygwLCAwKTtcblxuICAgICRzY29wZS5xU2hvdyA9IGZhbHNlO1xuICAgICRzY29wZS50b2dnbGVRRm9ybSA9IGZ1bmN0aW9uKCl7XG4gICAgICAgICRzY29wZS5xU2hvdyA9ICEkc2NvcGUucVNob3c7XG4gICAgfVxuXG4gICAgJHNjb3BlLnN1Ym1pdFF1ZXN0aW9uYWlyZSA9IGZ1bmN0aW9uKCl7XG4gICAgICAgIGNvbnNvbGUubG9nKCdmb3JtIHN1Ym1pdHRlZCcpO1xuICAgIH1cbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdiYW5uZXIuZGlyJywgW10pLmRpcmVjdGl2ZSgncGFnZUJhbm5lcicsICgpID0+IHtcbiAgcmV0dXJuIHtcbiAgICByZXN0cmljdDogJ0UnLFxuICAgIHRlbXBsYXRlVXJsOiAnL3BhcnRpYWxzL2hvbWUvYmFubmVyJyxcbiAgICByZXBsYWNlOiB0cnVlLFxuICAgIHNjb3BlOiB7IGJnSW1hZ2U6ICdAJyB9XG4gIH07XG59KTtcbiIsIlxuYW5ndWxhci5tb2R1bGUoJ2JveC5oZWlnaHQuZGlyJywgW10pLmRpcmVjdGl2ZSgnYm94SGVpZ2h0JywgWyckd2luZG93JywgJyR0aW1lb3V0JywgZnVuY3Rpb24gKCR3aW5kb3csICR0aW1lb3V0KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcmVzdHJpY3Q6ICdBJyxcbiAgICAgICAgbGluazogKHNjb3BlLCBlbGVtLCBhdHRycykgPT4ge1xuICAgICAgICAgICR0aW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHNjb3BlLm5ld0hlaWdodCA9IGVsZW1bMF0ub2Zmc2V0SGVpZ2h0O1xuICAgICAgICAgIH0sIDUwMCk7XG4gICAgICAgICAgYW5ndWxhci5lbGVtZW50KCR3aW5kb3cpLmJpbmQoJ3Jlc2l6ZScsICgpID0+IHtcbiAgICAgICAgICAgIHNjb3BlLiRhcHBseSgoKSA9PiB7XG4gICAgICAgICAgICAgIHNjb3BlLm5ld0hlaWdodCA9IGVsZW1bMF0ub2Zmc2V0SGVpZ2h0O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xufV0pO1xuXG5hbmd1bGFyLm1vZHVsZSgndGFyZ2V0LmhlaWdodC5kaXInLCBbXSkuZGlyZWN0aXZlKCd0YXJnZXRIZWlnaHQnLCBmdW5jdGlvbigpe1xuICByZXR1cm4ge1xuICAgIHJlc3RyaWN0OiAnQScsXG4gICAgbGluazogKHNjb3BlLCBlbGVtLCBhdHRycykgPT4ge1xuICAgICAgc2NvcGUuJHdhdGNoKCduZXdIZWlnaHQnLCAobmV3Viwgb2xkVikgPT4ge1xuICAgICAgICAvL2NvbnNvbGUubG9nKCdvbGQgdmFsdWUgJyArIG9sZFYsICduZXcgdmFsdWUgJyArIG5ld1YpO1xuICAgICAgICBlbGVtLmF0dHIoJ3N0eWxlJywgJ2hlaWdodDogJyArIG5ld1YgKyAncHgnKTtcbiAgICAgIH0pXG4gICAgfVxuICB9XG59KTtcbiIsImFuZ3VsYXIubW9kdWxlKCdob21lLmNvbnRyb2xsZXInLCBbXSkuY29udHJvbGxlcignSG9tZUNvbnRyb2xsZXInLCBbJyRzY29wZScsICdTZXJ2aWNlRmFjdG9yeScsIGZ1bmN0aW9uKCRzY29wZSwgU2VydmljZUZhY3Rvcnkpe1xuXG4gICRzY29wZS5zZXJ2aWNlcyA9IFNlcnZpY2VGYWN0b3J5Lmxpc3QoKTtcblxuXG59XSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnaG9tZScsIFsnaG9tZS5jb250cm9sbGVyJywgJ2JveC5oZWlnaHQuZGlyJywgJ3RhcmdldC5oZWlnaHQuZGlyJywgJ2Jhbm5lci5kaXInXSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnc2VydmljZS5jb250cm9sbGVyJywgW10pLmNvbnRyb2xsZXIoJ1NlcnZpY2VDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJHN0YXRlUGFyYW1zJywgJ1NlcnZpY2VGYWN0b3J5JywgKCRzY29wZSwgJHN0YXRlUGFyYW1zLCBTZXJ2aWNlRmFjdG9yeSkgPT4ge1xuICAgICRzY29wZS5zZXJ2aWNlcyA9IFNlcnZpY2VGYWN0b3J5Lmxpc3QoKTtcbn1dKTtcblxuYW5ndWxhci5tb2R1bGUoJ3NlcnZpY2UuZGV0YWlsLmNvbnRyb2xsZXInLCBbXSkuY29udHJvbGxlcignU2VsZWN0ZWRTZXJ2aWNlQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRzdGF0ZVBhcmFtcycsICdTZXJ2aWNlRmFjdG9yeScsICgkc2NvcGUsICRzdGF0ZVBhcmFtcywgU2VydmljZUZhY3RvcnkpID0+IHtcbiAgJHNjb3BlLnNlbGVjdGVkU2VydmljZSA9IFNlcnZpY2VGYWN0b3J5LmZpbmQoJHN0YXRlUGFyYW1zLnNsdWcpO1xufV0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ3NlcnZpY2UuZmFjdG9yeScsIFtdKS5mYWN0b3J5KCdTZXJ2aWNlRmFjdG9yeScsICgpID0+IHtcbiAgdmFyIHNlcnZpY2VzID0gW1xuICAgIC8vIHtcbiAgICAvLyAgIG5hbWU6ICdlLURlc2lnbicsXG4gICAgLy8gICBsb2dvOiAnaW1nL2ljb25zL2NvbnN0cnVjdGlvbi5wbmcnXG4gICAgLy8gfSxcbiAgICB7XG4gICAgICBuYW1lOiAnU3BhY2UgUGxhbm5pbmcnLFxuICAgICAgc2x1ZzogJ3NwYWNlLXBsYW5uaW5nJyxcbiAgICAgIGxvZ286ICdpbWcvaWNvbnMvaG91c2UtcGxhbi5wbmcnLFxuICAgICAgYmFubmVyOiAnaW1nL3NlcnZpY2VzL2Zsb29yLXBsYW4ucG5nJyxcbiAgICAgIHN1YkhlYWQ6ICdjcmVhdGluZyBpbmRpdmlkdWFsaXplZCBwcm9kdWN0cycsXG4gICAgICBkZXNjOiAnV2UgY2FuIGhlbHAgbWFrZSB5b3VyIHNwYWNlIG1vcmUgZnVuY3Rpb25hbCB3aXRoIG91ciBzcGFjZSBwbGFubmluZyBzZXJ2aWNlLiAgQ29udGFjdCB1cyBmb3IgbW9yZSBkZXRhaWxzLidcbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6ICdCcmFuZGluZycsXG4gICAgICBzbHVnOiAnYnJhbmRpbmcnLFxuICAgICAgbG9nbzogJ2ltZy9pY29ucy9icmFuZGluZy5wbmcnLFxuICAgICAgYmFubmVyOiAnaW1nL3NlcnZpY2VzL2JyYW5kaW5nLmpwZycsXG4gICAgICBzdWJIZWFkOiAnSGVscGluZyB5b3VyIGN1c3RvbWVycyBnZXQgdG8ga25vdyB5b3UnLFxuICAgICAgZGVzYzogJ1dlIHVuZGVyc3RhbmQgdGhhdCBpdCBpcyBkaWZmaWN1bHQgdG8gc2VwYXJhdGUgeW91cnNlbGYgZnJvbSBvdGhlcnMuICBXaXRoIG91ciBjdXN0b20gbWFkZSBib29rbGV0cywgd2Ugd2lsbCBjcmVhdGUgYSBiZWF1dGlmdWwgbWFya2V0aW5nIGFuZCBicmFuZGluZyB0b29sIHRvIGJlIGFibGUgdG8gcGh5c2ljYWxseSBoYW5kIHRvIHBvdGVudGlhbCBjbGllbnRzLCBhcmNoaXRlY3RzLCBtYWdhemluZXMsIG9yIGFueW9uZSBlbHNlIHlvdSB3YW50IHRvIHByZXNlbnQgeW91ciB3b3JrIHRvLiBXZSB0YWtlIHRoZSBhbWF6aW5nIGltYWdlcyBvZiB5b3VyIGRlc2lnbnMgYW5kIHB1dCB0b2dldGhlciBhIGRpc3RpY3QgYm9va2xldCB0aGF0IGRpc3BsYXlzIHlvdXIgYmVhdXRpZnVsIHdvcmsuICBUYWtlIGEgbG9vayBhdCBzb21lIG9mIHRoZSB0YWxlbnRlZCBkZXNpZ25lcnMgdGhhdCB3ZeKAmXZlIHdvcmtlZCB3aXRoIGJlbG93LiAgUGxlYXNlIGNvbnRhY3QgdXMgZm9yIG1vcmUgZGV0YWlscy4nXG4gICAgfSxcbiAgICB7XG4gICAgICBuYW1lOiAnSW50ZXJpb3IgRGVzaWduJyxcbiAgICAgIHNsdWc6ICdpbnRlcmlvci1kZXNpZ24nLFxuICAgICAgbG9nbzogJ2ltZy9pY29ucy90aGluay1kcmF3LWJ1aWxkLnBuZycsXG4gICAgICBiYW5uZXI6ICdpbWcvc2VydmljZXMvbWFzdGVyLWJyLnBuZycsXG4gICAgICBzdWJIZWFkOiAnY3JlYXRpbmcgaW5kaXZpZHVhbGl6ZWQgcHJvZHVjdHMnLFxuICAgICAgZGVzYzogJ0NvbnRhY3QgdXMgZm9yIGZ1bGwgc2VydmljZSBpbi1wZXJzb24gZGVzaWduIHNlcnZpY2VzLiAgSXQgaXMgbW9zdCBpbXBvcnRhbnQgdG8gdXMgdG8gY3JlYXRlIGEgZGVzaWduIHRoYXQgcmVmbGVjdHMgdGhlIHBlcnNvbmFsaXRpZXMgb2Ygb3VyIHdvbmRlcmZ1bCBjbGllbnRzLiAgUGxlYXNlIGNvbnRhY3QgdXMgZm9yIG1vcmUgZGV0YWlscy4nXG4gICAgfSxcbiAgICB7XG4gICAgICBuYW1lOiAnRnVybml0dXJlIERlc2lnbicsXG4gICAgICBzbHVnOiAnZnVybml0dXJlJyxcbiAgICAgIGxvZ286ICdpbWcvaWNvbnMvY29uc3RydWN0aW9uLnBuZycsXG4gICAgICBiYW5uZXI6ICdpbWcvc2VydmljZXMvYmVuY2gucG5nJyxcbiAgICAgIHN1YkhlYWQ6ICdjcmVhdGluZyBpbmRpdmlkdWFsaXplZCBwcm9kdWN0cycsXG4gICAgICBkZXNjOiAnV2hldGhlciBpdOKAmXMgY3JlYXRpbmcgdW5pcXVlIGZ1cm5pdHVyZSBmcm9tIGFuIGFtYXppbmcgcGllY2Ugb2Ygd29vZCBvciByZWZpbmlzaGluZyBhIGdyZWF0IHBpZWNlIG9mIGZ1cm5pdHVyZSB3aXRoIGdvb2QgYm9uZXMsIHdlIGxvdmUgaXQuICBJZiB0aGVyZeKAmXMgc29tZXRoaW5nIHRoYXQgaXMgYSBrZWVwc2FrZSBmcm9tIHlvdXIgZ3JhbmRtb3RoZXIgdGhhdCB5b3UgZmVlbCBiYWQgcGFydGluZyB3aXRoLCBsZXQgdXMgdGFrZSBhIGxvb2sgYW5kIHNlZSBpZiB3ZSBjYW7igJl0IHJlbWFrZSBpdCBpbnRvIHNvbWV0aGluZyB0aGF0IHlvdSBsb3ZlLidcbiAgICB9XG4gIF07XG5cbiAgcmV0dXJuIHtcbiAgICBsaXN0OiBmdW5jdGlvbigpe1xuICAgICAgcmV0dXJuIHNlcnZpY2VzO1xuICAgIH0sXG4gICAgZmluZDogZnVuY3Rpb24oc2x1Zyl7XG4gICAgICAgIHJldHVybiBfLmZpbmQoc2VydmljZXMsIChzZXJ2aWNlKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIHNlcnZpY2Uuc2x1ZyA9PSBzbHVnO1xuICAgICAgICB9KTtcbiAgICB9XG4gIH1cbn0pXG4iLCJhbmd1bGFyLm1vZHVsZSgnc2VydmljZXMnLCBbJ3NlcnZpY2UuY29udHJvbGxlcicsICdzZXJ2aWNlLmRldGFpbC5jb250cm9sbGVyJywgJ3NlcnZpY2UuZmFjdG9yeSddKTtcbiJdfQ==
