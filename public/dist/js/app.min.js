'use strict';

var app = angular.module('hb-interiors', ['home', 'services', 'ed.controller', 'contact.controller', 'about.controller', 'ui.router']);

app.config(['$locationProvider', '$stateProvider', '$urlRouterProvider', function ($locationProvider, $stateProvider, $urlRouterProvider) {

    $urlRouterProvider.otherwise('/');
    $locationProvider.html5Mode(true);

    $stateProvider.state('home', {
        url: '/',
        templateUrl: '/partials/home/home',
        controller: 'HomeController'
    }).state('services', {
        url: '/services',
        templateUrl: '/partials/services/services',
        controller: 'ServiceController'
    }).state('e-design', {
        url: '/e-design',
        templateUrl: '/partials/ed/ed',
        controller: 'EDesignController'
    }).state('about', {
        url: '/about',
        templateUrl: '/partials/about/about',
        controller: 'AboutController'
    }).state('contact', {
        url: '/contact',
        templateUrl: '/partials/contact/contact',
        controller: 'ContactController'
    }).state('services.detail', {
        url: '/:slug',
        templateUrl: '/partials/services/services-detail',
        controller: 'SelectedServiceController'
    });
}]);

app.run(['$rootScope', '$location', function ($rootScope, $location) {

    // $rootScope.$on('$routeChangeError', function(evt, current, previous, rejection) {
    //     if(rejection === 'not authorized') {
    //       $location.path('/');
    //     }
    // });

    $rootScope.$on("$stateChangeSuccess", function (event, currentRoute, previousRoute) {});
}]);
'use strict';

angular.module('about.controller', []).controller('AboutController', ['$scope', function ($scope) {

  $scope.isActive = false;
  $scope.minusSign = false;
  $scope.expandBio = function () {
    $scope.minusSign = !$scope.minusSign;
    $scope.isActive = !$scope.isActive;
  };
}]);
'use strict';

app.factory('Meta', function () {
  var _title = 'Hayley Bagwell Interior Design, Seattle, WA';
  var desc = 'Super DERRR';
  return {
    title: function title() {
      return _title;
    },
    setTitle: function setTitle(newTitle) {
      _title = newTitle;
    },
    description: function description() {
      return desc;
    },
    setDesc: function setDesc(newDesc) {
      desc = newDesc;
    }
  };
}).controller('MetaController', ['$scope', 'Meta', function ($scope, Meta) {
  $scope.Meta = Meta;
  $scope.metaDesc = Meta;
}]);
'use strict';

angular.module('contact.controller', []).controller('ContactController', ['$scope', function ($scope) {
  console.log('contact controller');
}]);
'use strict';

angular.module('ed.controller', []).controller('EDesignController', ['$scope', function ($scope) {
    window.scrollTo(0, 0);
}]);
'use strict';

angular.module('banner.dir', []).directive('pageBanner', function () {
  return {
    restrict: 'E',
    templateUrl: '/partials/home/banner',
    replace: true,
    scope: { bgImage: '@' }
  };
});
'use strict';

angular.module('box.height.dir', []).directive('boxHeight', ['$window', '$timeout', function ($window, $timeout) {
  return {
    restrict: 'A',
    link: function link(scope, elem, attrs) {
      $timeout(function () {
        scope.newHeight = elem.height();
      }, 500);
      angular.element($window).bind('resize', function () {
        scope.$apply(function () {
          scope.newHeight = elem.height();
        });
      });
    }
  };
}]);

angular.module('target.height.dir', []).directive('targetHeight', function () {
  return {
    restrict: 'A',
    link: function link(scope, elem, attrs) {
      scope.$watch('newHeight', function (newV, oldV) {
        //console.log('old value ' + oldV, 'new value ' + newV);
        elem.attr('style', 'height: ' + newV + 'px');
      });
    }
  };
});
'use strict';

angular.module('home.controller', []).controller('HomeController', ['$scope', 'ServiceFactory', function ($scope, ServiceFactory) {

  $scope.services = ServiceFactory.list();
}]);
'use strict';

angular.module('home', ['home.controller', 'box.height.dir', 'target.height.dir', 'banner.dir']);
'use strict';

angular.module('service.controller', []).controller('ServiceController', ['$scope', '$stateParams', 'ServiceFactory', function ($scope, $stateParams, ServiceFactory) {
  $scope.services = ServiceFactory.list();
}]);

angular.module('service.detail.controller', []).controller('SelectedServiceController', ['$scope', '$stateParams', 'ServiceFactory', function ($scope, $stateParams, ServiceFactory) {
  $scope.selectedService = ServiceFactory.find($stateParams.slug);
}]);
'use strict';

angular.module('service.factory', []).factory('ServiceFactory', function () {
  var services = [
  // {
  //   name: 'e-Design',
  //   logo: 'img/icons/construction.png'
  // },
  {
    name: 'Space Planning',
    slug: 'space-planning',
    logo: 'img/icons/house-plan.png',
    banner: 'img/services/floor-plan.png',
    subHead: 'creating individualized products',
    desc: 'We can create a functional floor plan that has great flow.  Send us images of your space with measurements to allow us the ability to bring your space new comfort and functionality.'
  },
  // {
  //   name: 'Branding'
  // },
  {
    name: 'Interior Design',
    slug: 'interior-design',
    logo: 'img/icons/think-draw-build.png',
    banner: 'img/services/master-br.png',
    subHead: 'creating individualized products',
    desc: 'We would love to come to your home and give you a free hour consultation.  We will create a new and inspiring space that emulates your personality.'
  }, {
    name: 'Furniture Design',
    slug: 'furniture',
    logo: 'img/icons/construction.png',
    banner: 'img/services/bench.png',
    subHead: 'creating individualized products',
    desc: 'We love to create furniture out of sustainable materials. Crafting unique furniture has become a wondeful passion of our.  Let us help you create something one-of-a-kind for your space.'
  }];

  return {
    list: function list() {
      return services;
    },
    find: function find(slug) {
      return _.find(services, function (service) {
        return service.slug == slug;
      });
    }
  };
});
'use strict';

angular.module('services', ['service.controller', 'service.detail.controller', 'service.factory']);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImFib3V0L2Fib3V0LmNvbnRyb2xsZXIuanMiLCJjb21tb24vbWV0YS5jb250cm9sbGVyLmpzIiwiY29udGFjdC9jb250YWN0LmNvbnRyb2xsZXIuanMiLCJlZC9lRGVzaWduLmNvbnRyb2xsZXIuanMiLCJob21lL2Jhbm5lci5kaXJlY3RpdmUuanMiLCJob21lL2JveC5kaXJlY3RpdmUuanMiLCJob21lL2hvbWUuY29udHJvbGxlci5qcyIsImhvbWUvaG9tZS5tb2R1bGUuanMiLCJzZXJ2aWNlcy9zZXJ2aWNlLmNvbnRyb2xsZXIuanMiLCJzZXJ2aWNlcy9zZXJ2aWNlLmZhY3RvcnkuanMiLCJzZXJ2aWNlcy9zZXJ2aWNlLm1vZHVsZS5qcyJdLCJuYW1lcyI6WyJhcHAiLCJhbmd1bGFyIiwibW9kdWxlIiwiY29uZmlnIiwiJGxvY2F0aW9uUHJvdmlkZXIiLCIkc3RhdGVQcm92aWRlciIsIiR1cmxSb3V0ZXJQcm92aWRlciIsIm90aGVyd2lzZSIsImh0bWw1TW9kZSIsInN0YXRlIiwidXJsIiwidGVtcGxhdGVVcmwiLCJjb250cm9sbGVyIiwicnVuIiwiJHJvb3RTY29wZSIsIiRsb2NhdGlvbiIsIiRvbiIsImV2ZW50IiwiY3VycmVudFJvdXRlIiwicHJldmlvdXNSb3V0ZSIsIiRzY29wZSIsImlzQWN0aXZlIiwibWludXNTaWduIiwiZXhwYW5kQmlvIiwiZmFjdG9yeSIsInRpdGxlIiwiZGVzYyIsInNldFRpdGxlIiwibmV3VGl0bGUiLCJkZXNjcmlwdGlvbiIsInNldERlc2MiLCJuZXdEZXNjIiwiTWV0YSIsIm1ldGFEZXNjIiwiY29uc29sZSIsImxvZyIsIndpbmRvdyIsInNjcm9sbFRvIiwiZGlyZWN0aXZlIiwicmVzdHJpY3QiLCJyZXBsYWNlIiwic2NvcGUiLCJiZ0ltYWdlIiwiJHdpbmRvdyIsIiR0aW1lb3V0IiwibGluayIsImVsZW0iLCJhdHRycyIsIm5ld0hlaWdodCIsImhlaWdodCIsImVsZW1lbnQiLCJiaW5kIiwiJGFwcGx5IiwiJHdhdGNoIiwibmV3ViIsIm9sZFYiLCJhdHRyIiwiU2VydmljZUZhY3RvcnkiLCJzZXJ2aWNlcyIsImxpc3QiLCIkc3RhdGVQYXJhbXMiLCJzZWxlY3RlZFNlcnZpY2UiLCJmaW5kIiwic2x1ZyIsIm5hbWUiLCJsb2dvIiwiYmFubmVyIiwic3ViSGVhZCIsIl8iLCJzZXJ2aWNlIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE1BQU1DLFFBQVFDLE1BQVIsQ0FBZSxjQUFmLEVBQStCLENBQUMsTUFBRCxFQUFTLFVBQVQsRUFBcUIsZUFBckIsRUFBc0Msb0JBQXRDLEVBQTRELGtCQUE1RCxFQUFnRixXQUFoRixDQUEvQixDQUFaOztBQUVBRixJQUFJRyxNQUFKLENBQVcsQ0FBQyxtQkFBRCxFQUFzQixnQkFBdEIsRUFBd0Msb0JBQXhDLEVBQThELFVBQUNDLGlCQUFELEVBQW9CQyxjQUFwQixFQUFvQ0Msa0JBQXBDLEVBQTJEOztBQUVoSUEsdUJBQW1CQyxTQUFuQixDQUE2QixHQUE3QjtBQUNBSCxzQkFBa0JJLFNBQWxCLENBQTRCLElBQTVCOztBQUVBSCxtQkFDR0ksS0FESCxDQUNTLE1BRFQsRUFDaUI7QUFDWEMsYUFBSyxHQURNO0FBRVhDLHFCQUFhLHFCQUZGO0FBR1hDLG9CQUFZO0FBSEQsS0FEakIsRUFNR0gsS0FOSCxDQU1TLFVBTlQsRUFNcUI7QUFDZkMsYUFBSyxXQURVO0FBRWZDLHFCQUFhLDZCQUZFO0FBR2ZDLG9CQUFZO0FBSEcsS0FOckIsRUFXR0gsS0FYSCxDQVdTLFVBWFQsRUFXcUI7QUFDZkMsYUFBSyxXQURVO0FBRWZDLHFCQUFhLGlCQUZFO0FBR2ZDLG9CQUFZO0FBSEcsS0FYckIsRUFnQkdILEtBaEJILENBZ0JTLE9BaEJULEVBZ0JrQjtBQUNaQyxhQUFLLFFBRE87QUFFWkMscUJBQWEsdUJBRkQ7QUFHWkMsb0JBQVk7QUFIQSxLQWhCbEIsRUFxQkdILEtBckJILENBcUJTLFNBckJULEVBcUJvQjtBQUNkQyxhQUFLLFVBRFM7QUFFZEMscUJBQWEsMkJBRkM7QUFHZEMs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QUFTLGtDQUxYO0FBTUV6QyxVQUFNO0FBTlIsR0F4QmEsQ0FBZjs7QUFrQ0EsU0FBTztBQUNMaUMsVUFBTSxnQkFBVTtBQUNkLGFBQU9ELFFBQVA7QUFDRCxLQUhJO0FBSUxJLFVBQU0sY0FBU0MsSUFBVCxFQUFjO0FBQ2hCLGFBQU9LLEVBQUVOLElBQUYsQ0FBT0osUUFBUCxFQUFpQixVQUFDVyxPQUFELEVBQWE7QUFDbkMsZUFBT0EsUUFBUU4sSUFBUixJQUFnQkEsSUFBdkI7QUFDRCxPQUZNLENBQVA7QUFHSDtBQVJJLEdBQVA7QUFVRCxDQTdDRDs7O0FDQUE5RCxRQUFRQyxNQUFSLENBQWUsVUFBZixFQUEyQixDQUFDLG9CQUFELEVBQXVCLDJCQUF2QixFQUFvRCxpQkFBcEQsQ0FBM0IiLCJmaWxlIjoiYXBwLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFwcCA9IGFuZ3VsYXIubW9kdWxlKCdoYi1pbnRlcmlvcnMnLCBbJ2hvbWUnLCAnc2VydmljZXMnLCAnZWQuY29udHJvbGxlcicsICdjb250YWN0LmNvbnRyb2xsZXInLCAnYWJvdXQuY29udHJvbGxlcicsICd1aS5yb3V0ZXInXSk7XHJcblxyXG5hcHAuY29uZmlnKFsnJGxvY2F0aW9uUHJvdmlkZXInLCAnJHN0YXRlUHJvdmlkZXInLCAnJHVybFJvdXRlclByb3ZpZGVyJywgKCRsb2NhdGlvblByb3ZpZGVyLCAkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyKSA9PiB7XHJcblxyXG4gICAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZSgnLycpO1xyXG4gICAgJGxvY2F0aW9uUHJvdmlkZXIuaHRtbDVNb2RlKHRydWUpO1xyXG5cclxuICAgICRzdGF0ZVByb3ZpZGVyXHJcbiAgICAgIC5zdGF0ZSgnaG9tZScsIHtcclxuICAgICAgICAgIHVybDogJy8nLFxyXG4gICAgICAgICAgdGVtcGxhdGVVcmw6ICcvcGFydGlhbHMvaG9tZS9ob21lJyxcclxuICAgICAgICAgIGNvbnRyb2xsZXI6ICdIb21lQ29udHJvbGxlcidcclxuICAgICAgfSlcclxuICAgICAgLnN0YXRlKCdzZXJ2aWNlcycsIHtcclxuICAgICAgICAgIHVybDogJy9zZXJ2aWNlcycsXHJcbiAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9wYXJ0aWFscy9zZXJ2aWNlcy9zZXJ2aWNlcycsXHJcbiAgICAgICAgICBjb250cm9sbGVyOiAnU2VydmljZUNvbnRyb2xsZXInXHJcbiAgICAgIH0pXHJcbiAgICAgIC5zdGF0ZSgnZS1kZXNpZ24nLCB7XHJcbiAgICAgICAgICB1cmw6ICcvZS1kZXNpZ24nLFxyXG4gICAgICAgICAgdGVtcGxhdGVVcmw6ICcvcGFydGlhbHMvZWQvZWQnLFxyXG4gICAgICAgICAgY29udHJvbGxlcjogJ0VEZXNpZ25Db250cm9sbGVyJ1xyXG4gICAgICB9KVxyXG4gICAgICAuc3RhdGUoJ2Fib3V0Jywge1xyXG4gICAgICAgICAgdXJsOiAnL2Fib3V0JyxcclxuICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3BhcnRpYWxzL2Fib3V0L2Fib3V0JyxcclxuICAgICAgICAgIGNvbnRyb2xsZXI6ICdBYm91dENvbnRyb2xsZXInXHJcbiAgICAgIH0pXHJcbiAgICAgIC5zdGF0ZSgnY29udGFjdCcsIHtcclxuICAgICAgICAgIHVybDogJy9jb250YWN0JyxcclxuICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3BhcnRpYWxzL2NvbnRhY3QvY29udGFjdCcsXHJcbiAgICAgICAgICBjb250cm9sbGVyOiAnQ29udGFjdENvbnRyb2xsZXInXHJcbiAgICAgIH0pXHJcbiAgICAgIC5zdGF0ZSgnc2VydmljZXMuZGV0YWlsJywge1xyXG4gICAgICAgICAgdXJsOiAnLzpzbHVnJyxcclxuICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3BhcnRpYWxzL3NlcnZpY2VzL3NlcnZpY2VzLWRldGFpbCcsXHJcbiAgICAgICAgICBjb250cm9sbGVyOiAnU2VsZWN0ZWRTZXJ2aWNlQ29udHJvbGxlcidcclxuICAgICAgfSk7XHJcbn1dKTtcclxuXHJcblxyXG5hcHAucnVuKFsnJHJvb3RTY29wZScsICckbG9jYXRpb24nLCBmdW5jdGlvbigkcm9vdFNjb3BlLCAkbG9jYXRpb24pe1xyXG5cclxuICAvLyAkcm9vdFNjb3BlLiRvbignJHJvdXRlQ2hhbmdlRXJyb3InLCBmdW5jdGlvbihldnQsIGN1cnJlbnQsIHByZXZpb3VzLCByZWplY3Rpb24pIHtcclxuICAvLyAgICAgaWYocmVqZWN0aW9uID09PSAnbm90IGF1dGhvcml6ZWQnKSB7XHJcbiAgLy8gICAgICAgJGxvY2F0aW9uLnBhdGgoJy8nKTtcclxuICAvLyAgICAgfVxyXG4gIC8vIH0pO1xyXG5cclxuICAkcm9vdFNjb3BlLiRvbihcIiRzdGF0ZUNoYW5nZVN1Y2Nlc3NcIiwgZnVuY3Rpb24gKGV2ZW50LCBjdXJyZW50Um91dGUsIHByZXZpb3VzUm91dGUpIHtcclxuXHJcbiAgfSk7XHJcblxyXG59XSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhYm91dC5jb250cm9sbGVyJywgW10pLmNvbnRyb2xsZXIoJ0Fib3V0Q29udHJvbGxlcicsIFsnJHNjb3BlJywgKCRzY29wZSkgPT4ge1xyXG5cclxuICAkc2NvcGUuaXNBY3RpdmUgPSBmYWxzZTtcclxuICAkc2NvcGUubWludXNTaWduID0gZmFsc2U7XHJcbiAgJHNjb3BlLmV4cGFuZEJpbyA9ICgpID0+IHtcclxuICAgICAgJHNjb3BlLm1pbnVzU2lnbiA9ICEkc2NvcGUubWludXNTaWduO1xyXG4gICAgICAkc2NvcGUuaXNBY3RpdmUgPSAhJHNjb3BlLmlzQWN0aXZlO1xyXG4gIH07XHJcblxyXG59XSk7XHJcbiIsImFwcC5mYWN0b3J5KCdNZXRhJywgZnVuY3Rpb24oKXtcclxuICB2YXIgdGl0bGUgPSAnSGF5bGV5IEJhZ3dlbGwgSW50ZXJpb3IgRGVzaWduLCBTZWF0dGxlLCBXQSc7XHJcbiAgdmFyIGRlc2MgPSAnU3VwZXIgREVSUlInO1xyXG4gIHJldHVybiB7XHJcbiAgICB0aXRsZTogZnVuY3Rpb24oKSB7cmV0dXJuIHRpdGxlO30sXHJcbiAgICBzZXRUaXRsZTogZnVuY3Rpb24obmV3VGl0bGUpIHsgdGl0bGUgPSBuZXdUaXRsZSB9LFxyXG4gICAgZGVzY3JpcHRpb246IGZ1bmN0aW9uKCkgeyByZXR1cm4gZGVzYzt9LFxyXG4gICAgc2V0RGVzYyA6IGZ1bmN0aW9uKG5ld0Rlc2MpIHsgZGVzYyA9IG5ld0Rlc2N9XHJcbiAgfVxyXG59KVxyXG4uY29udHJvbGxlcignTWV0YUNvbnRyb2xsZXInLCBbJyRzY29wZScsICdNZXRhJywgZnVuY3Rpb24oJHNjb3BlLCBNZXRhKXtcclxuICAkc2NvcGUuTWV0YSA9IE1ldGE7XHJcbiAgJHNjb3BlLm1ldGFEZXNjID0gTWV0YTtcclxufV0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnY29udGFjdC5jb250cm9sbGVyJywgW10pLmNvbnRyb2xsZXIoJ0NvbnRhY3RDb250cm9sbGVyJywgWyckc2NvcGUnLCAoJHNjb3BlKSA9PiB7XHJcbiAgY29uc29sZS5sb2coJ2NvbnRhY3QgY29udHJvbGxlcicpO1xyXG59XSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdlZC5jb250cm9sbGVyJywgW10pLmNvbnRyb2xsZXIoJ0VEZXNpZ25Db250cm9sbGVyJywgWyckc2NvcGUnLCAoJHNjb3BlKSA9PiB7XHJcbiAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgMCk7XHJcbn1dKTtcclxuIiwiYW5ndWxhci5tb2R1bGUoJ2Jhbm5lci5kaXInLCBbXSkuZGlyZWN0aXZlKCdwYWdlQmFubmVyJywgKCkgPT4ge1xyXG4gIHJldHVybiB7XHJcbiAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcvcGFydGlhbHMvaG9tZS9iYW5uZXInLFxyXG4gICAgcmVwbGFjZTogdHJ1ZSxcclxuICAgIHNjb3BlOiB7IGJnSW1hZ2U6ICdAJyB9XHJcbiAgfTtcclxufSk7XHJcbiIsIlxyXG5hbmd1bGFyLm1vZHVsZSgnYm94LmhlaWdodC5kaXInLCBbXSkuZGlyZWN0aXZlKCdib3hIZWlnaHQnLCBbJyR3aW5kb3cnLCAnJHRpbWVvdXQnLCBmdW5jdGlvbiAoJHdpbmRvdywgJHRpbWVvdXQpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgcmVzdHJpY3Q6ICdBJyxcclxuICAgICAgICBsaW5rOiAoc2NvcGUsIGVsZW0sIGF0dHJzKSA9PiB7XHJcbiAgICAgICAgICAkdGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgIHNjb3BlLm5ld0hlaWdodCA9IGVsZW0uaGVpZ2h0KCk7XHJcbiAgICAgICAgICB9LCA1MDApO1xyXG4gICAgICAgICAgYW5ndWxhci5lbGVtZW50KCR3aW5kb3cpLmJpbmQoJ3Jlc2l6ZScsICgpID0+IHtcclxuICAgICAgICAgICAgc2NvcGUuJGFwcGx5KCgpID0+IHtcclxuICAgICAgICAgICAgICBzY29wZS5uZXdIZWlnaHQgPSBlbGVtLmhlaWdodCgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn1dKTtcclxuXHJcbmFuZ3VsYXIubW9kdWxlKCd0YXJnZXQuaGVpZ2h0LmRpcicsIFtdKS5kaXJlY3RpdmUoJ3RhcmdldEhlaWdodCcsIGZ1bmN0aW9uKCl7XHJcbiAgcmV0dXJuIHtcclxuICAgIHJlc3RyaWN0OiAnQScsXHJcbiAgICBsaW5rOiAoc2NvcGUsIGVsZW0sIGF0dHJzKSA9PiB7XHJcbiAgICAgIHNjb3BlLiR3YXRjaCgnbmV3SGVpZ2h0JywgKG5ld1YsIG9sZFYpID0+IHtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKCdvbGQgdmFsdWUgJyArIG9sZFYsICduZXcgdmFsdWUgJyArIG5ld1YpO1xyXG4gICAgICAgIGVsZW0uYXR0cignc3R5bGUnLCAnaGVpZ2h0OiAnICsgbmV3ViArICdweCcpO1xyXG4gICAgICB9KVxyXG4gICAgfVxyXG4gIH1cclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdob21lLmNvbnRyb2xsZXInLCBbXSkuY29udHJvbGxlcignSG9tZUNvbnRyb2xsZXInLCBbJyRzY29wZScsICdTZXJ2aWNlRmFjdG9yeScsIGZ1bmN0aW9uKCRzY29wZSwgU2VydmljZUZhY3Rvcnkpe1xyXG5cclxuICAkc2NvcGUuc2VydmljZXMgPSBTZXJ2aWNlRmFjdG9yeS5saXN0KCk7XHJcblxyXG5cclxufV0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnaG9tZScsIFsnaG9tZS5jb250cm9sbGVyJywgJ2JveC5oZWlnaHQuZGlyJywgJ3RhcmdldC5oZWlnaHQuZGlyJywgJ2Jhbm5lci5kaXInXSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdzZXJ2aWNlLmNvbnRyb2xsZXInLCBbXSkuY29udHJvbGxlcignU2VydmljZUNvbnRyb2xsZXInLCBbJyRzY29wZScsICckc3RhdGVQYXJhbXMnLCAnU2VydmljZUZhY3RvcnknLCAoJHNjb3BlLCAkc3RhdGVQYXJhbXMsIFNlcnZpY2VGYWN0b3J5KSA9PiB7XHJcbiAgICAkc2NvcGUuc2VydmljZXMgPSBTZXJ2aWNlRmFjdG9yeS5saXN0KCk7XHJcbn1dKTtcclxuXHJcbmFuZ3VsYXIubW9kdWxlKCdzZXJ2aWNlLmRldGFpbC5jb250cm9sbGVyJywgW10pLmNvbnRyb2xsZXIoJ1NlbGVjdGVkU2VydmljZUNvbnRyb2xsZXInLCBbJyRzY29wZScsICckc3RhdGVQYXJhbXMnLCAnU2VydmljZUZhY3RvcnknLCAoJHNjb3BlLCAkc3RhdGVQYXJhbXMsIFNlcnZpY2VGYWN0b3J5KSA9PiB7XHJcbiAgJHNjb3BlLnNlbGVjdGVkU2VydmljZSA9IFNlcnZpY2VGYWN0b3J5LmZpbmQoJHN0YXRlUGFyYW1zLnNsdWcpO1xyXG59XSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdzZXJ2aWNlLmZhY3RvcnknLCBbXSkuZmFjdG9yeSgnU2VydmljZUZhY3RvcnknLCAoKSA9PiB7XHJcbiAgdmFyIHNlcnZpY2VzID0gW1xyXG4gICAgLy8ge1xyXG4gICAgLy8gICBuYW1lOiAnZS1EZXNpZ24nLFxyXG4gICAgLy8gICBsb2dvOiAnaW1nL2ljb25zL2NvbnN0cnVjdGlvbi5wbmcnXHJcbiAgICAvLyB9LFxyXG4gICAge1xyXG4gICAgICBuYW1lOiAnU3BhY2UgUGxhbm5pbmcnLFxyXG4gICAgICBzbHVnOiAnc3BhY2UtcGxhbm5pbmcnLFxyXG4gICAgICBsb2dvOiAnaW1nL2ljb25zL2hvdXNlLXBsYW4ucG5nJyxcclxuICAgICAgYmFubmVyOiAnaW1nL3NlcnZpY2VzL2Zsb29yLXBsYW4ucG5nJyxcclxuICAgICAgc3ViSGVhZDogJ2NyZWF0aW5nIGluZGl2aWR1YWxpemVkIHByb2R1Y3RzJyxcclxuICAgICAgZGVzYzogJ1dlIGNhbiBjcmVhdGUgYSBmdW5jdGlvbmFsIGZsb29yIHBsYW4gdGhhdCBoYXMgZ3JlYXQgZmxvdy4gIFNlbmQgdXMgaW1hZ2VzIG9mIHlvdXIgc3BhY2Ugd2l0aCBtZWFzdXJlbWVudHMgdG8gYWxsb3cgdXMgdGhlIGFiaWxpdHkgdG8gYnJpbmcgeW91ciBzcGFjZSBuZXcgY29tZm9ydCBhbmQgZnVuY3Rpb25hbGl0eS4nXHJcbiAgICB9LFxyXG4gICAgLy8ge1xyXG4gICAgLy8gICBuYW1lOiAnQnJhbmRpbmcnXHJcbiAgICAvLyB9LFxyXG4gICAge1xyXG4gICAgICBuYW1lOiAnSW50ZXJpb3IgRGVzaWduJyxcclxuICAgICAgc2x1ZzogJ2ludGVyaW9yLWRlc2lnbicsXHJcbiAgICAgIGxvZ286ICdpbWcvaWNvbnMvdGhpbmstZHJhdy1idWlsZC5wbmcnLFxyXG4gICAgICBiYW5uZXI6ICdpbWcvc2VydmljZXMvbWFzdGVyLWJyLnBuZycsXHJcbiAgICAgIHN1YkhlYWQ6ICdjcmVhdGluZyBpbmRpdmlkdWFsaXplZCBwcm9kdWN0cycsXHJcbiAgICAgIGRlc2M6ICdXZSB3b3VsZCBsb3ZlIHRvIGNvbWUgdG8geW91ciBob21lIGFuZCBnaXZlIHlvdSBhIGZyZWUgaG91ciBjb25zdWx0YXRpb24uICBXZSB3aWxsIGNyZWF0ZSBhIG5ldyBhbmQgaW5zcGlyaW5nIHNwYWNlIHRoYXQgZW11bGF0ZXMgeW91ciBwZXJzb25hbGl0eS4nXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBuYW1lOiAnRnVybml0dXJlIERlc2lnbicsXHJcbiAgICAgIHNsdWc6ICdmdXJuaXR1cmUnLFxyXG4gICAgICBsb2dvOiAnaW1nL2ljb25zL2NvbnN0cnVjdGlvbi5wbmcnLFxyXG4gICAgICBiYW5uZXI6ICdpbWcvc2VydmljZXMvYmVuY2gucG5nJyxcclxuICAgICAgc3ViSGVhZDogJ2NyZWF0aW5nIGluZGl2aWR1YWxpemVkIHByb2R1Y3RzJyxcclxuICAgICAgZGVzYzogJ1dlIGxvdmUgdG8gY3JlYXRlIGZ1cm5pdHVyZSBvdXQgb2Ygc3VzdGFpbmFibGUgbWF0ZXJpYWxzLiBDcmFmdGluZyB1bmlxdWUgZnVybml0dXJlIGhhcyBiZWNvbWUgYSB3b25kZWZ1bCBwYXNzaW9uIG9mIG91ci4gIExldCB1cyBoZWxwIHlvdSBjcmVhdGUgc29tZXRoaW5nIG9uZS1vZi1hLWtpbmQgZm9yIHlvdXIgc3BhY2UuJ1xyXG4gICAgfVxyXG4gIF07XHJcblxyXG4gIHJldHVybiB7XHJcbiAgICBsaXN0OiBmdW5jdGlvbigpe1xyXG4gICAgICByZXR1cm4gc2VydmljZXM7XHJcbiAgICB9LFxyXG4gICAgZmluZDogZnVuY3Rpb24oc2x1Zyl7XHJcbiAgICAgICAgcmV0dXJuIF8uZmluZChzZXJ2aWNlcywgKHNlcnZpY2UpID0+IHtcclxuICAgICAgICAgIHJldHVybiBzZXJ2aWNlLnNsdWcgPT0gc2x1ZztcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcbn0pXHJcbiIsImFuZ3VsYXIubW9kdWxlKCdzZXJ2aWNlcycsIFsnc2VydmljZS5jb250cm9sbGVyJywgJ3NlcnZpY2UuZGV0YWlsLmNvbnRyb2xsZXInLCAnc2VydmljZS5mYWN0b3J5J10pO1xyXG4iXX0=
